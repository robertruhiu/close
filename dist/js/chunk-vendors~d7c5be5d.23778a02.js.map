{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/table/SelectionBox.js"],"names":["babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","_checkbox__WEBPACK_IMPORTED_MODULE_2__","_radio__WEBPACK_IMPORTED_MODULE_3__","_interface__WEBPACK_IMPORTED_MODULE_4__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_5__","_util_props_util__WEBPACK_IMPORTED_MODULE_6__","__webpack_exports__","name","mixins","props","data","checked","this","getCheckState","$props","mounted","subscribe","beforeDestroy","unsubscribe","methods","_this","store","setState","defaultSelection","rowIndex","getState","selectionDirty","selectedRowKeys","indexOf","render","h","arguments","_getOptionProps","Object","type","rest","$attrs","$listeners","checkboxProps","attrs","on","value"],"mappings":"0HAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,QAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,QAAAM,EAAAN,EAAA,QAAAO,EAAAP,EAAA,QAAAQ,EAAAR,EAAA,QAAAS,EAAAT,EAAA,QAQeU,EAAA,MACfC,KAAA,eACAC,OAAA,CAAWJ,EAAA,MACXK,MAASN,EAAA,KACTO,KAAA,WACA,OACAC,QAAAC,KAAAC,cAAAD,KAAAE,UAGAC,QAAA,WACAH,KAAAI,aAEAC,cAAA,WACAL,KAAAM,aACAN,KAAAM,eAIAC,QAAA,CACAH,UAAA,WACA,IAAAI,EAAAR,KAEAS,EAAAT,KAAAS,MAEAT,KAAAM,YAAAG,EAAAL,UAAA,WACA,IAAAL,EAAAS,EAAAP,cAAAO,EAAAN,QACAM,EAAAE,SAAA,CAAwBX,eAGxBE,cAAA,SAAAJ,GACA,IAAAY,EAAAZ,EAAAY,MACAE,EAAAd,EAAAc,iBACAC,EAAAf,EAAAe,SAEAb,GAAA,EAMA,OAJAA,EADAU,EAAAI,WAAAC,eACAL,EAAAI,WAAAE,gBAAAC,QAAAJ,IAAA,EAEAH,EAAAI,WAAAE,gBAAAC,QAAAJ,IAAA,GAAAD,EAAAK,QAAAJ,IAAA,EAEAb,IAIAkB,OAAA,WACA,IAAAC,EAAAC,UAAA,GAEAC,EAA0BC,OAAA5B,EAAA,KAAA4B,CAAcrB,MACxCsB,EAAAF,EAAAE,KACAV,EAAAQ,EAAAR,SACAW,EAAenC,IAAwBgC,EAAA,qBAEvCrB,EAAAC,KAAAD,QACAyB,EAAAxB,KAAAwB,OACAC,EAAAzB,KAAAyB,WAEAC,EAAA,CACA7B,MAAaZ,IAAQ,CACrBc,WACOwB,GACPI,MAAAH,EACAI,GAAAH,GAEA,gBAAAH,GACAI,EAAA7B,MAAAgC,MAAAjB,EACAM,EAAe5B,EAAA,KAAKoC,IAEpBR,EAAe7B,EAAA,KAAQqC","file":"js/chunk-vendors~d7c5be5d.23778a02.js","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport Checkbox from '../checkbox';\nimport Radio from '../radio';\nimport { SelectionBoxProps } from './interface';\nimport BaseMixin from '../_util/BaseMixin';\nimport { getOptionProps } from '../_util/props-util';\n\nexport default {\n  name: 'SelectionBox',\n  mixins: [BaseMixin],\n  props: SelectionBoxProps,\n  data: function data() {\n    return {\n      checked: this.getCheckState(this.$props)\n    };\n  },\n  mounted: function mounted() {\n    this.subscribe();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  },\n\n  methods: {\n    subscribe: function subscribe() {\n      var _this = this;\n\n      var store = this.store;\n\n      this.unsubscribe = store.subscribe(function () {\n        var checked = _this.getCheckState(_this.$props);\n        _this.setState({ checked: checked });\n      });\n    },\n    getCheckState: function getCheckState(props) {\n      var store = props.store,\n          defaultSelection = props.defaultSelection,\n          rowIndex = props.rowIndex;\n\n      var checked = false;\n      if (store.getState().selectionDirty) {\n        checked = store.getState().selectedRowKeys.indexOf(rowIndex) >= 0;\n      } else {\n        checked = store.getState().selectedRowKeys.indexOf(rowIndex) >= 0 || defaultSelection.indexOf(rowIndex) >= 0;\n      }\n      return checked;\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n\n    var _getOptionProps = getOptionProps(this),\n        type = _getOptionProps.type,\n        rowIndex = _getOptionProps.rowIndex,\n        rest = _objectWithoutProperties(_getOptionProps, ['type', 'rowIndex']);\n\n    var checked = this.checked,\n        $attrs = this.$attrs,\n        $listeners = this.$listeners;\n\n    var checkboxProps = {\n      props: _extends({\n        checked: checked\n      }, rest),\n      attrs: $attrs,\n      on: $listeners\n    };\n    if (type === 'radio') {\n      checkboxProps.props.value = rowIndex;\n      return h(Radio, checkboxProps);\n    } else {\n      return h(Checkbox, checkboxProps);\n    }\n  }\n};"],"sourceRoot":""}