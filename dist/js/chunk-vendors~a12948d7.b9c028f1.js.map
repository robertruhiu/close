{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-slick/src/slider.js"],"names":["babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","json2mq__WEBPACK_IMPORTED_MODULE_1__","json2mq__WEBPACK_IMPORTED_MODULE_1___default","vue__WEBPACK_IMPORTED_MODULE_2__","vue_ref__WEBPACK_IMPORTED_MODULE_3__","vue_ref__WEBPACK_IMPORTED_MODULE_3___default","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_4__","_util_vnode__WEBPACK_IMPORTED_MODULE_5__","_util_props_util__WEBPACK_IMPORTED_MODULE_6__","_inner_slider__WEBPACK_IMPORTED_MODULE_7__","_default_props__WEBPACK_IMPORTED_MODULE_8__","_utils_innerSliderUtils__WEBPACK_IMPORTED_MODULE_9__","enquire","Object","use","a","name","__webpack_exports__","props","mixins","data","this","_responsiveMediaHandlers","breakpoint","methods","innerSliderRefHandler","ref","innerSlider","media","query","handler","register","push","slickPrev","slickNext","slickGoTo","slide","dontAnimate","arguments","length","undefined","slickPause","pause","slickPlay","handleAutoPlay","beforeMount","_this","responsive","breakpoints","map","breakpt","sort","x","y","forEach","index","bQuery","minWidth","maxWidth","setState","slice","beforeDestroy","obj","unregister","render","_this2","h","settings","newProps","filter","resp","$props","centerMode","slidesToScroll","fade","slidesToShow","children","$slots","child","trim","variableWidth","rows","slidesPerRow","console","warn","newChildren","currentWidth","i","newSlide","j","row","k","width","key","attrs","tabIndex","style","display","className","class","unslick","sliderProps","__propsSymbol__","Symbol","on","$listeners","directives","value","scopedSlots","$scopedSlots"],"mappings":"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","file":"js/chunk-vendors~a12948d7.b9c028f1.js","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport json2mq from 'json2mq';\nimport Vue from 'vue';\nimport ref from 'vue-ref';\nimport BaseMixin from '../../_util/BaseMixin';\nimport { cloneElement } from '../../_util/vnode';\nimport { getStyle } from '../../_util/props-util';\nimport InnerSlider from './inner-slider';\nimport defaultProps from './default-props';\nimport { canUseDOM } from './utils/innerSliderUtils';\nvar enquire = canUseDOM() && require('enquire.js');\n\nVue.use(ref, { name: 'ant-ref' });\n\nexport default {\n  props: _extends({}, defaultProps),\n  mixins: [BaseMixin],\n  data: function data() {\n    this._responsiveMediaHandlers = [];\n    return {\n      breakpoint: null\n    };\n  },\n\n  methods: {\n    innerSliderRefHandler: function innerSliderRefHandler(ref) {\n      this.innerSlider = ref;\n    },\n    media: function media(query, handler) {\n      // javascript handler for  css media query\n      enquire.register(query, handler);\n      this._responsiveMediaHandlers.push({ query: query, handler: handler });\n    },\n    slickPrev: function slickPrev() {\n      this.innerSlider.slickPrev();\n    },\n    slickNext: function slickNext() {\n      this.innerSlider.slickNext();\n    },\n    slickGoTo: function slickGoTo(slide) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      this.innerSlider.slickGoTo(slide, dontAnimate);\n    },\n    slickPause: function slickPause() {\n      this.innerSlider.pause('paused');\n    },\n    slickPlay: function slickPlay() {\n      this.innerSlider.handleAutoPlay('play');\n    }\n  },\n  // handles responsive breakpoints\n  beforeMount: function beforeMount() {\n    var _this = this;\n\n    // performance monitoring\n    // if (process.env.NODE_ENV !== 'production') {\n    // const { whyDidYouUpdate } = require('why-did-you-update')\n    // whyDidYouUpdate(React)\n    // }\n    if (this.responsive) {\n      var breakpoints = this.responsive.map(function (breakpt) {\n        return breakpt.breakpoint;\n      });\n      // sort them in increasing order of their numerical value\n      breakpoints.sort(function (x, y) {\n        return x - y;\n      });\n\n      breakpoints.forEach(function (breakpoint, index) {\n        // media query for each breakpoint\n        var bQuery = void 0;\n        if (index === 0) {\n          bQuery = json2mq({ minWidth: 0, maxWidth: breakpoint });\n        } else {\n          bQuery = json2mq({\n            minWidth: breakpoints[index - 1] + 1,\n            maxWidth: breakpoint\n          });\n        }\n        // when not using server side rendering\n        canUseDOM() && _this.media(bQuery, function () {\n          _this.setState({ breakpoint: breakpoint });\n        });\n      });\n\n      // Register media query for full screen. Need to support resize from small to large\n      // convert javascript object to media query string\n      var query = json2mq({ minWidth: breakpoints.slice(-1)[0] });\n\n      canUseDOM() && this.media(query, function () {\n        _this.setState({ breakpoint: null });\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this._responsiveMediaHandlers.forEach(function (obj) {\n      enquire.unregister(obj.query, obj.handler);\n    });\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var h = arguments[0];\n\n    var settings = void 0;\n    var newProps = void 0;\n    if (this.breakpoint) {\n      newProps = this.responsive.filter(function (resp) {\n        return resp.breakpoint === _this2.breakpoint;\n      });\n      settings = newProps[0].settings === 'unslick' ? 'unslick' : _extends({}, this.$props, newProps[0].settings);\n    } else {\n      settings = _extends({}, this.$props);\n    }\n\n    // force scrolling by one if centerMode is on\n    if (settings.centerMode) {\n      if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== 'production') {\n        console.warn('slidesToScroll should be equal to 1 in centerMode, you are using ' + settings.slidesToScroll);\n      }\n      settings.slidesToScroll = 1;\n    }\n    // force showing one slide and scrolling by one if the fade mode is on\n    if (settings.fade) {\n      if (settings.slidesToShow > 1 && process.env.NODE_ENV !== 'production') {\n        console.warn('slidesToShow should be equal to 1 when fade is true, you\\'re using ' + settings.slidesToShow);\n      }\n      if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== 'production') {\n        console.warn('slidesToScroll should be equal to 1 when fade is true, you\\'re using ' + settings.slidesToScroll);\n      }\n      settings.slidesToShow = 1;\n      settings.slidesToScroll = 1;\n    }\n\n    // makes sure that children is an array, even when there is only 1 child\n    var children = this.$slots['default'] || [];\n\n    // Children may contain false or null, so we should filter them\n    // children may also contain string filled with spaces (in certain cases where we use jsx strings)\n    children = children.filter(function (child) {\n      if (typeof child === 'string') {\n        return !!child.trim();\n      }\n      return !!child;\n    });\n\n    // rows and slidesPerRow logic is handled here\n    if (settings.variableWidth && (settings.rows > 1 || settings.slidesPerRow > 1)) {\n      console.warn('variableWidth is not supported in case of rows > 1 or slidesPerRow > 1');\n      settings.variableWidth = false;\n    }\n    var newChildren = [];\n    var currentWidth = null;\n    for (var i = 0; i < children.length; i += settings.rows * settings.slidesPerRow) {\n      var newSlide = [];\n      for (var j = i; j < i + settings.rows * settings.slidesPerRow; j += settings.slidesPerRow) {\n        var row = [];\n        for (var k = j; k < j + settings.slidesPerRow; k += 1) {\n          if (settings.variableWidth && getStyle(children[k])) {\n            currentWidth = getStyle(children[k]).width;\n          }\n          if (k >= children.length) break;\n          row.push(cloneElement(children[k], {\n            key: 100 * i + 10 * j + k,\n            attrs: {\n              tabIndex: -1\n            },\n            style: {\n              width: 100 / settings.slidesPerRow + '%',\n              display: 'inline-block'\n            }\n          }));\n        }\n        newSlide.push(h(\n          'div',\n          { key: 10 * i + j },\n          [row]\n        ));\n      }\n      if (settings.variableWidth) {\n        newChildren.push(h(\n          'div',\n          { key: i, style: { width: currentWidth } },\n          [newSlide]\n        ));\n      } else {\n        newChildren.push(h(\n          'div',\n          { key: i },\n          [newSlide]\n        ));\n      }\n    }\n\n    if (settings === 'unslick') {\n      var className = 'regular slider ' + (this.className || '');\n      return h(\n        'div',\n        { 'class': className },\n        [newChildren]\n      );\n    } else if (newChildren.length <= settings.slidesToShow) {\n      settings.unslick = true;\n    }\n    var sliderProps = {\n      props: _extends({}, settings, {\n        children: newChildren,\n        __propsSymbol__: Symbol()\n      }),\n      on: _extends({}, this.$listeners),\n      directives: [{\n        name: 'ant-ref',\n        value: this.innerSliderRefHandler\n      }],\n      scopedSlots: this.$scopedSlots\n    };\n    return h(InnerSlider, sliderProps);\n  }\n};"],"sourceRoot":""}