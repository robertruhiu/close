{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-dropdown/src/Dropdown.js"],"names":["babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","_util_vue_types__WEBPACK_IMPORTED_MODULE_2__","_vc_trigger__WEBPACK_IMPORTED_MODULE_3__","_placements__WEBPACK_IMPORTED_MODULE_4__","_util_props_util__WEBPACK_IMPORTED_MODULE_5__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_6__","_util_vnode__WEBPACK_IMPORTED_MODULE_7__","__webpack_exports__","mixins","props","minOverlayWidthMatchTrigger","bool","def","prefixCls","string","transitionName","overlayClassName","animation","any","align","object","overlayStyle","placement","trigger","array","alignPoint","showAction","hideAction","getPopupContainer","func","visible","defaultVisible","mouseEnterDelay","number","mouseLeaveDelay","data","sVisible","this","Object","watch","val","undefined","setState","methods","onClick","e","$emit","childOriginEvents","click","onVisibleChange","__emit","getMinOverlayWidthMatchTrigger","getMenuElement","_this","$slots","overlay","extraOverlayProps","getPopupDomNode","on","$refs","afterVisibleChange","overlayNode","rootNode","$el","offsetWidth","style","minWidth","_component","alignInstance","forceAlign","render","h","arguments","_$props","$props","otherProps","triggerHideAction","indexOf","triggerProps","popupClassName","popupStyle","builtinPlacements","action","popupPlacement","popupAlign","popupTransitionName","popupAnimation","popupVisible","afterPopupVisibleChange","popupVisibleChange","ref","child","tag","slot"],"mappings":"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","file":"js/chunk-vendors~8ac5f7fb.10137863.js","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport PropTypes from '../../_util/vue-types';\nimport Trigger from '../../vc-trigger';\nimport placements from './placements';\nimport { hasProp, getEvents, getOptionProps } from '../../_util/props-util';\nimport BaseMixin from '../../_util/BaseMixin';\nimport { cloneElement } from '../../_util/vnode';\n\nexport default {\n  mixins: [BaseMixin],\n  props: {\n    minOverlayWidthMatchTrigger: PropTypes.bool.def(true),\n    prefixCls: PropTypes.string.def('rc-dropdown'),\n    transitionName: PropTypes.string,\n    overlayClassName: PropTypes.string.def(''),\n    animation: PropTypes.any,\n    align: PropTypes.object,\n    overlayStyle: PropTypes.object.def({}),\n    placement: PropTypes.string.def('bottomLeft'),\n    trigger: PropTypes.array.def(['hover']),\n    alignPoint: PropTypes.bool,\n    showAction: PropTypes.array.def([]),\n    hideAction: PropTypes.array.def([]),\n    getPopupContainer: PropTypes.func,\n    visible: PropTypes.bool,\n    defaultVisible: PropTypes.bool.def(false),\n    mouseEnterDelay: PropTypes.number.def(0.15),\n    mouseLeaveDelay: PropTypes.number.def(0.1)\n  },\n  data: function data() {\n    var sVisible = this.defaultVisible;\n    if (hasProp(this, 'visible')) {\n      sVisible = this.visible;\n    }\n    return {\n      sVisible: sVisible\n    };\n  },\n\n  watch: {\n    visible: function visible(val) {\n      if (val !== undefined) {\n        this.setState({\n          sVisible: val\n        });\n      }\n    }\n  },\n  methods: {\n    onClick: function onClick(e) {\n      // do no call onVisibleChange, if you need click to hide, use onClick and control visible\n      if (!hasProp(this, 'visible')) {\n        this.setState({\n          sVisible: false\n        });\n      }\n      this.$emit('overlayClick', e);\n      if (this.childOriginEvents.click) {\n        this.childOriginEvents.click(e);\n      }\n    },\n    onVisibleChange: function onVisibleChange(visible) {\n      if (!hasProp(this, 'visible')) {\n        this.setState({\n          sVisible: visible\n        });\n      }\n      this.__emit('visibleChange', visible);\n    },\n    getMinOverlayWidthMatchTrigger: function getMinOverlayWidthMatchTrigger() {\n      var props = getOptionProps(this);\n      var minOverlayWidthMatchTrigger = props.minOverlayWidthMatchTrigger,\n          alignPoint = props.alignPoint;\n\n      if ('minOverlayWidthMatchTrigger' in props) {\n        return minOverlayWidthMatchTrigger;\n      }\n\n      return !alignPoint;\n    },\n    getMenuElement: function getMenuElement() {\n      var _this = this;\n\n      var onClick = this.onClick,\n          prefixCls = this.prefixCls,\n          $slots = this.$slots;\n\n      this.childOriginEvents = getEvents($slots.overlay[0]);\n      var extraOverlayProps = {\n        props: {\n          prefixCls: prefixCls + '-menu',\n          getPopupContainer: function getPopupContainer() {\n            return _this.getPopupDomNode();\n          }\n        },\n        on: {\n          click: onClick\n        }\n      };\n      return cloneElement($slots.overlay[0], extraOverlayProps);\n    },\n    getPopupDomNode: function getPopupDomNode() {\n      return this.$refs.trigger.getPopupDomNode();\n    },\n    afterVisibleChange: function afterVisibleChange(visible) {\n      if (visible && this.getMinOverlayWidthMatchTrigger()) {\n        var overlayNode = this.getPopupDomNode();\n        var rootNode = this.$el;\n        if (rootNode && overlayNode && rootNode.offsetWidth > overlayNode.offsetWidth) {\n          overlayNode.style.minWidth = rootNode.offsetWidth + 'px';\n          if (this.$refs.trigger && this.$refs.trigger._component && this.$refs.trigger._component.alignInstance) {\n            this.$refs.trigger._component.alignInstance.forceAlign();\n          }\n        }\n      }\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n\n    var _$props = this.$props,\n        prefixCls = _$props.prefixCls,\n        transitionName = _$props.transitionName,\n        animation = _$props.animation,\n        align = _$props.align,\n        placement = _$props.placement,\n        getPopupContainer = _$props.getPopupContainer,\n        showAction = _$props.showAction,\n        hideAction = _$props.hideAction,\n        overlayClassName = _$props.overlayClassName,\n        overlayStyle = _$props.overlayStyle,\n        trigger = _$props.trigger,\n        otherProps = _objectWithoutProperties(_$props, ['prefixCls', 'transitionName', 'animation', 'align', 'placement', 'getPopupContainer', 'showAction', 'hideAction', 'overlayClassName', 'overlayStyle', 'trigger']);\n\n    var triggerHideAction = hideAction;\n    if (!triggerHideAction && trigger.indexOf('contextmenu') !== -1) {\n      triggerHideAction = ['click'];\n    }\n\n    var triggerProps = {\n      props: _extends({}, otherProps, {\n        prefixCls: prefixCls,\n        popupClassName: overlayClassName,\n        popupStyle: overlayStyle,\n        builtinPlacements: placements,\n        action: trigger,\n        showAction: showAction,\n        hideAction: triggerHideAction || [],\n        popupPlacement: placement,\n        popupAlign: align,\n        popupTransitionName: transitionName,\n        popupAnimation: animation,\n        popupVisible: this.sVisible,\n        afterPopupVisibleChange: this.afterVisibleChange,\n        getPopupContainer: getPopupContainer\n      }),\n      on: {\n        popupVisibleChange: this.onVisibleChange\n      },\n      ref: 'trigger'\n    };\n    var child = this.$slots['default'] && this.$slots['default'][0];\n    return h(\n      Trigger,\n      triggerProps,\n      [child && !child.tag ? h('span', [child]) : child, h(\n        'template',\n        { slot: 'popup' },\n        [this.$slots.overlay && this.getMenuElement()]\n      )]\n    );\n  }\n};"],"sourceRoot":""}