{"version":3,"sources":["webpack:///./node_modules/lodash/isFunction.js"],"names":["baseGetTag","__webpack_require__","isObject","asyncTag","funcTag","genTag","proxyTag","isFunction","value","tag","module","exports"],"mappings":"2GAAA,IAAAA,EAAiBC,EAAQ,QACzBC,EAAeD,EAAQ,QAGvBE,EAAA,yBACAC,EAAA,oBACAC,EAAA,6BACAC,EAAA,iBAmBA,SAAAC,EAAAC,GACA,IAAAN,EAAAM,GACA,SAIA,IAAAC,EAAAT,EAAAQ,GACA,OAAAC,GAAAL,GAAAK,GAAAJ,GAAAI,GAAAN,GAAAM,GAAAH,EAGAI,EAAAC,QAAAJ","file":"js/chunk-vendors~05ed528a.dba23615.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n"],"sourceRoot":""}