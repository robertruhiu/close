{"version":3,"sources":["webpack:///./node_modules/@ant-design/icons-vue/es/components/Icon.js"],"names":["babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","_utils__WEBPACK_IMPORTED_MODULE_1__","twoToneColorPalette","primaryColor","secondaryColor","Icon","name","props","displayName","definitions","data","add","_len","arguments","length","icons","Array","_key","forEach","icon","set","Object","theme","clear","get","key","colors","undefined","target","setTwoToneColors","_ref","getTwoToneColors","render","h","_$props","this","$props","type","attrs","data-icon","width","height","fill","aria-hidden","on","$listeners","install","Vue","component","__webpack_exports__"],"mappings":"wHAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,QAGAI,EAAA,CACAC,aAAA,OACAC,eAAA,WAGAC,EAAA,CACAC,KAAA,WACAC,MAAA,yCACAC,YAAA,UACAC,YAAA,IAAmBR,EAAA,KACnBS,KAAA,WACA,OACAR,wBAGAS,IAAA,WACA,QAAAC,EAAAC,UAAAC,OAAAC,EAAAC,MAAAJ,GAAAK,EAAA,EAAoEA,EAAAL,EAAaK,IACjFF,EAAAE,GAAAJ,UAAAI,GAGAF,EAAAG,QAAA,SAAAC,GACAd,EAAAI,YAAAW,IAA2BC,OAAApB,EAAA,KAAAoB,CAAUF,EAAAb,KAAAa,EAAAG,OAAAH,MAGrCI,MAAA,WACAlB,EAAAI,YAAAc,SAEAC,IAAA,SAAAC,GACA,IAAAC,EAAAb,UAAAC,OAAA,QAAAa,IAAAd,UAAA,GAAAA,UAAA,GAAAX,EAEA,GAAAuB,EAAA,CACA,IAAAG,EAAAvB,EAAAI,YAAAe,IAAAC,GAMA,OALAG,GAAA,oBAAAA,EAAAT,OACAS,EAAiB7B,IAAQ,GAAG6B,EAAA,CAC5BT,KAAAS,EAAAT,KAAAO,EAAAvB,aAAAuB,EAAAtB,mBAGAwB,IAGAC,iBAAA,SAAAC,GACA,IAAA3B,EAAA2B,EAAA3B,aACAC,EAAA0B,EAAA1B,eAEAF,EAAAC,eACAD,EAAAE,kBAA2DiB,OAAApB,EAAA,KAAAoB,CAAiBlB,IAE5E4B,iBAAA,WACA,OAAWhC,IAAQ,GAAGG,IAEtB8B,OAAA,SAAAC,GACA,IAAAC,EAAAC,KAAAC,OACAC,EAAAH,EAAAG,KACAlC,EAAA+B,EAAA/B,aACAC,EAAA8B,EAAA9B,eAGAwB,OAAA,EACAF,EAAAxB,EAOA,GANAC,IACAuB,EAAA,CACAvB,eACAC,kBAA0CiB,OAAApB,EAAA,KAAAoB,CAAiBlB,KAGnDkB,OAAApB,EAAA,KAAAoB,CAAgBgB,GACxBT,EAAAS,OACK,qBAAAA,IACLT,EAAAvB,EAAAmB,IAAAa,EAAAX,IACAE,GAEA,YAGA,OAAAA,GAIAA,GAAA,oBAAAA,EAAAT,OACAS,EAAe7B,IAAQ,GAAG6B,EAAA,CAC1BT,KAAAS,EAAAT,KAAAO,EAAAvB,aAAAuB,EAAAtB,mBAGWiB,OAAApB,EAAA,KAAAoB,CAAQY,EAAAL,EAAAT,KAAA,OAAAS,EAAAtB,KAAA,CACnBgC,MAAA,CACAC,YAAAX,EAAAtB,KACAkC,MAAA,MACAC,OAAA,MACAC,KAAA,eACAC,cAAA,QAEAC,GAAAT,KAAAU,eAhBMxB,OAAApB,EAAA,KAAAoB,CAAG,oDAAAgB,GACT,OAqBAS,QAAA,SAAAC,GACAA,EAAAC,UAAA3C,EAAAC,KAAAD,KAGe4C,EAAA","file":"js/chunk-vendors~03e043ad.838f6f56.js","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport { generate, getSecondaryColor, isIconDefinition, log, MiniMap, withSuffix } from '../utils';\n\nvar twoToneColorPalette = {\n  primaryColor: '#333',\n  secondaryColor: '#E6E6E6'\n};\n\nvar Icon = {\n  name: 'AntdIcon',\n  props: ['type', 'primaryColor', 'secondaryColor'],\n  displayName: 'IconVue',\n  definitions: new MiniMap(),\n  data: function data() {\n    return {\n      twoToneColorPalette: twoToneColorPalette\n    };\n  },\n  add: function add() {\n    for (var _len = arguments.length, icons = Array(_len), _key = 0; _key < _len; _key++) {\n      icons[_key] = arguments[_key];\n    }\n\n    icons.forEach(function (icon) {\n      Icon.definitions.set(withSuffix(icon.name, icon.theme), icon);\n    });\n  },\n  clear: function clear() {\n    Icon.definitions.clear();\n  },\n  get: function get(key) {\n    var colors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : twoToneColorPalette;\n\n    if (key) {\n      var target = Icon.definitions.get(key);\n      if (target && typeof target.icon === 'function') {\n        target = _extends({}, target, {\n          icon: target.icon(colors.primaryColor, colors.secondaryColor)\n        });\n      }\n      return target;\n    }\n  },\n  setTwoToneColors: function setTwoToneColors(_ref) {\n    var primaryColor = _ref.primaryColor,\n        secondaryColor = _ref.secondaryColor;\n\n    twoToneColorPalette.primaryColor = primaryColor;\n    twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  },\n  getTwoToneColors: function getTwoToneColors() {\n    return _extends({}, twoToneColorPalette);\n  },\n  render: function render(h) {\n    var _$props = this.$props,\n        type = _$props.type,\n        primaryColor = _$props.primaryColor,\n        secondaryColor = _$props.secondaryColor;\n\n\n    var target = void 0;\n    var colors = twoToneColorPalette;\n    if (primaryColor) {\n      colors = {\n        primaryColor: primaryColor,\n        secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n      };\n    }\n    if (isIconDefinition(type)) {\n      target = type;\n    } else if (typeof type === 'string') {\n      target = Icon.get(type, colors);\n      if (!target) {\n        // log(`Could not find icon: ${type}`);\n        return null;\n      }\n    }\n    if (!target) {\n      log('type should be string or icon definiton, but got ' + type);\n      return null;\n    }\n    if (target && typeof target.icon === 'function') {\n      target = _extends({}, target, {\n        icon: target.icon(colors.primaryColor, colors.secondaryColor)\n      });\n    }\n    return generate(h, target.icon, 'svg-' + target.name, {\n      attrs: {\n        'data-icon': target.name,\n        width: '1em',\n        height: '1em',\n        fill: 'currentColor',\n        'aria-hidden': 'true'\n      },\n      on: this.$listeners\n    });\n  }\n};\n\n/* istanbul ignore next */\nIcon.install = function (Vue) {\n  Vue.component(Icon.name, Icon);\n};\n\nexport default Icon;"],"sourceRoot":""}