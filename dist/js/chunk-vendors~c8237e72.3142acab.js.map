{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/select/index.js"],"names":["__webpack_require__","d","__webpack_exports__","AbstractSelectProps","SelectValue","SelectProps","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_3__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_3___default","warning__WEBPACK_IMPORTED_MODULE_4__","warning__WEBPACK_IMPORTED_MODULE_4___default","omit_js__WEBPACK_IMPORTED_MODULE_5__","_util_vue_types__WEBPACK_IMPORTED_MODULE_6__","_vc_select__WEBPACK_IMPORTED_MODULE_7__","_vc_select__WEBPACK_IMPORTED_MODULE_8__","_vc_select__WEBPACK_IMPORTED_MODULE_9__","_locale_provider_LocaleReceiver__WEBPACK_IMPORTED_MODULE_10__","_locale_provider_default__WEBPACK_IMPORTED_MODULE_11__","_util_props_util__WEBPACK_IMPORTED_MODULE_12__","_icon__WEBPACK_IMPORTED_MODULE_13__","_util_vnode__WEBPACK_IMPORTED_MODULE_14__","prefixCls","string","size","oneOf","showAction","oneOfType","arrayOf","String","notFoundContent","any","transitionName","choiceTransitionName","showSearch","bool","allowClear","disabled","tabIndex","number","placeholder","defaultActiveFirstOption","dropdownClassName","dropdownStyle","dropdownMenuStyle","dropdownMatchSelectWidth","filterOption","func","autoFocus","backfill","showArrow","getPopupContainer","open","defaultOpen","autoClearSearchValue","dropdownRender","loading","Value","shape","key","loose","value","defaultValue","mode","optionLabelProp","firstActiveValue","maxTagCount","maxTagPlaceholder","optionFilterProp","labelInValue","boolean","tokenSeparators","getInputElement","options","array","suffixIcon","removeIcon","clearIcon","menuItemSelectedIcon","SelectPropTypes","SECRET_COMBOBOX_MODE_DO_NOT_USE","Select","Option","name","OptGroup","props","def","propTypes","model","prop","event","provide","savePopupRef","this","inject","configProvider","default","created","$props","methods","ref","popupRef","focus","$refs","vcSelect","blur","getNotFoundContent","locale","Object","isCombobox","undefined","renderSuffixIcon","h","$createElement","_$props","Array","isArray","class","attrs","type","renderSelect","_cls","_getOptionProps","restProps","getContextPopupContainer","rest","cls","modeConfig","multiple","tags","combobox","finalRemoveIcon","finalClearIcon","theme","finalMenuItemSelectedIcon","selectProps","inputIcon","children","map","option","_option$label","label","title","on","style","restOption","$slots","__propsSymbol__","Symbol","$listeners","render","arguments","componentName","defaultLocale","scopedSlots","install","Vue","component"],"mappings":"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","file":"js/chunk-vendors~c8237e72.3142acab.js","sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _extends from 'babel-runtime/helpers/extends';\nimport warning from 'warning';\nimport omit from 'omit.js';\nimport PropTypes from '../_util/vue-types';\nimport { Select as VcSelect, Option, OptGroup } from '../vc-select';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport { getComponentFromProp, getOptionProps, filterEmpty, isValidElement } from '../_util/props-util';\nimport Icon from '../icon';\nimport { cloneElement } from '../_util/vnode';\n\nvar AbstractSelectProps = function AbstractSelectProps() {\n  return {\n    prefixCls: PropTypes.string,\n    size: PropTypes.oneOf(['small', 'large', 'default']),\n    showAction: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(String)]),\n    notFoundContent: PropTypes.any,\n    transitionName: PropTypes.string,\n    choiceTransitionName: PropTypes.string,\n    showSearch: PropTypes.bool,\n    allowClear: PropTypes.bool,\n    disabled: PropTypes.bool,\n    tabIndex: PropTypes.number,\n    placeholder: PropTypes.any,\n    defaultActiveFirstOption: PropTypes.bool,\n    dropdownClassName: PropTypes.string,\n    dropdownStyle: PropTypes.any,\n    dropdownMenuStyle: PropTypes.any,\n    dropdownMatchSelectWidth: PropTypes.bool,\n    // onSearch: (value: string) => any,\n    filterOption: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    autoFocus: PropTypes.bool,\n    backfill: PropTypes.bool,\n    showArrow: PropTypes.bool,\n    getPopupContainer: PropTypes.func,\n    open: PropTypes.bool,\n    defaultOpen: PropTypes.bool,\n    autoClearSearchValue: PropTypes.bool,\n    dropdownRender: PropTypes.func,\n    loading: PropTypes.bool\n  };\n};\nvar Value = PropTypes.shape({\n  key: PropTypes.string\n}).loose;\n\nvar SelectValue = PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([Value, PropTypes.string, PropTypes.number])), Value]);\n\nvar SelectProps = _extends({}, AbstractSelectProps(), {\n  value: SelectValue,\n  defaultValue: SelectValue,\n  // mode: PropTypes.oneOf(['default', 'multiple', 'tags', 'combobox']),\n  mode: PropTypes.string,\n  optionLabelProp: PropTypes.string,\n  firstActiveValue: PropTypes.oneOfType([String, PropTypes.arrayOf(String)]),\n  maxTagCount: PropTypes.number,\n  maxTagPlaceholder: PropTypes.any,\n  dropdownMatchSelectWidth: PropTypes.bool,\n  optionFilterProp: PropTypes.string,\n  labelInValue: PropTypes.boolean,\n  getPopupContainer: PropTypes.func,\n  tokenSeparators: PropTypes.arrayOf(PropTypes.string),\n  getInputElement: PropTypes.func,\n  options: PropTypes.array,\n  suffixIcon: PropTypes.any,\n  removeIcon: PropTypes.any,\n  clearIcon: PropTypes.any,\n  menuItemSelectedIcon: PropTypes.any\n});\n\nvar SelectPropTypes = {\n  prefixCls: PropTypes.string,\n  size: PropTypes.oneOf(['default', 'large', 'small']),\n  // combobox: PropTypes.bool,\n  notFoundContent: PropTypes.any,\n  showSearch: PropTypes.bool,\n  optionLabelProp: PropTypes.string,\n  transitionName: PropTypes.string,\n  choiceTransitionName: PropTypes.string\n};\n\nexport { AbstractSelectProps, SelectValue, SelectProps };\nvar SECRET_COMBOBOX_MODE_DO_NOT_USE = 'SECRET_COMBOBOX_MODE_DO_NOT_USE';\nvar Select = {\n  SECRET_COMBOBOX_MODE_DO_NOT_USE: SECRET_COMBOBOX_MODE_DO_NOT_USE,\n  Option: _extends({}, Option, { name: 'ASelectOption' }),\n  OptGroup: _extends({}, OptGroup, { name: 'ASelectOptGroup' }),\n  name: 'ASelect',\n  props: _extends({}, SelectProps, {\n    prefixCls: PropTypes.string.def('ant-select'),\n    showSearch: PropTypes.bool.def(false),\n    transitionName: PropTypes.string.def('slide-up'),\n    choiceTransitionName: PropTypes.string.def('zoom')\n  }),\n  propTypes: SelectPropTypes,\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  provide: function provide() {\n    return {\n      savePopupRef: this.savePopupRef\n    };\n  },\n\n  inject: {\n    configProvider: { 'default': function _default() {\n        return {};\n      } }\n  },\n  created: function created() {\n    warning(this.$props.mode !== 'combobox', 'The combobox mode of Select is deprecated,' + 'it will be removed in next major version,' + 'please use AutoComplete instead');\n  },\n\n  methods: {\n    savePopupRef: function savePopupRef(ref) {\n      this.popupRef = ref;\n    },\n    focus: function focus() {\n      this.$refs.vcSelect.focus();\n    },\n    blur: function blur() {\n      this.$refs.vcSelect.blur();\n    },\n    getNotFoundContent: function getNotFoundContent(locale) {\n      var notFoundContent = getComponentFromProp(this, 'notFoundContent');\n      if (this.isCombobox()) {\n        // AutoComplete don't have notFoundContent defaultly\n        return notFoundContent === undefined ? null : notFoundContent;\n      }\n      return notFoundContent === undefined ? locale.notFoundContent : notFoundContent;\n    },\n    isCombobox: function isCombobox() {\n      var mode = this.mode;\n\n      return mode === 'combobox' || mode === SECRET_COMBOBOX_MODE_DO_NOT_USE;\n    },\n    renderSuffixIcon: function renderSuffixIcon() {\n      var h = this.$createElement;\n      var _$props = this.$props,\n          prefixCls = _$props.prefixCls,\n          loading = _$props.loading;\n\n      var suffixIcon = getComponentFromProp(this, 'suffixIcon');\n      suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;\n      if (suffixIcon) {\n        return isValidElement(suffixIcon) ? cloneElement(suffixIcon, { 'class': prefixCls + '-arrow-icon' }) : suffixIcon;\n      }\n      if (loading) {\n        return h(Icon, {\n          attrs: { type: 'loading' }\n        });\n      }\n      return h(Icon, {\n        attrs: { type: 'down' },\n        'class': prefixCls + '-arrow-icon' });\n    },\n    renderSelect: function renderSelect(locale) {\n      var _cls;\n\n      var h = this.$createElement;\n\n      var _getOptionProps = getOptionProps(this),\n          prefixCls = _getOptionProps.prefixCls,\n          size = _getOptionProps.size,\n          mode = _getOptionProps.mode,\n          options = _getOptionProps.options,\n          getPopupContainer = _getOptionProps.getPopupContainer,\n          restProps = _objectWithoutProperties(_getOptionProps, ['prefixCls', 'size', 'mode', 'options', 'getPopupContainer']);\n\n      var getContextPopupContainer = this.configProvider.getPopupContainer;\n\n      var removeIcon = getComponentFromProp(this, 'removeIcon');\n      removeIcon = Array.isArray(removeIcon) ? removeIcon[0] : removeIcon;\n      var clearIcon = getComponentFromProp(this, 'clearIcon');\n      clearIcon = Array.isArray(clearIcon) ? clearIcon[0] : clearIcon;\n      var menuItemSelectedIcon = getComponentFromProp(this, 'menuItemSelectedIcon');\n      menuItemSelectedIcon = Array.isArray(menuItemSelectedIcon) ? menuItemSelectedIcon[0] : menuItemSelectedIcon;\n      var rest = omit(restProps, ['inputIcon', 'removeIcon', 'clearIcon', 'suffixIcon', 'menuItemSelectedIcon']);\n\n      var cls = (_cls = {}, _defineProperty(_cls, prefixCls + '-lg', size === 'large'), _defineProperty(_cls, prefixCls + '-sm', size === 'small'), _cls);\n\n      var optionLabelProp = this.$props.optionLabelProp;\n\n      if (this.isCombobox()) {\n        // children 带 dom 结构时，无法填入输入框\n        optionLabelProp = optionLabelProp || 'value';\n      }\n\n      var modeConfig = {\n        multiple: mode === 'multiple',\n        tags: mode === 'tags',\n        combobox: this.isCombobox()\n      };\n      var finalRemoveIcon = removeIcon && (isValidElement(removeIcon) ? cloneElement(removeIcon, { 'class': prefixCls + '-remove-icon' }) : removeIcon) || h(Icon, {\n        attrs: { type: 'close' },\n        'class': prefixCls + '-remove-icon' });\n\n      var finalClearIcon = clearIcon && (isValidElement(clearIcon) ? cloneElement(clearIcon, { 'class': prefixCls + '-clear-icon' }) : clearIcon) || h(Icon, {\n        attrs: { type: 'close-circle', theme: 'filled' },\n        'class': prefixCls + '-clear-icon' });\n\n      var finalMenuItemSelectedIcon = menuItemSelectedIcon && (isValidElement(menuItemSelectedIcon) ? cloneElement(menuItemSelectedIcon, { 'class': prefixCls + '-selected-icon' }) : menuItemSelectedIcon) || h(Icon, {\n        attrs: { type: 'check' },\n        'class': prefixCls + '-selected-icon' });\n\n      var selectProps = {\n        props: _extends({\n          inputIcon: this.renderSuffixIcon(),\n          removeIcon: finalRemoveIcon,\n          clearIcon: finalClearIcon,\n          menuItemSelectedIcon: finalMenuItemSelectedIcon\n        }, rest, modeConfig, {\n          prefixCls: prefixCls,\n          optionLabelProp: optionLabelProp || 'children',\n          notFoundContent: this.getNotFoundContent(locale),\n          maxTagPlaceholder: getComponentFromProp(this, 'maxTagPlaceholder'),\n          placeholder: getComponentFromProp(this, 'placeholder'),\n          children: options ? options.map(function (option) {\n            var key = option.key,\n                _option$label = option.label,\n                label = _option$label === undefined ? option.title : _option$label,\n                on = option.on,\n                cls = option['class'],\n                style = option.style,\n                restOption = _objectWithoutProperties(option, ['key', 'label', 'on', 'class', 'style']);\n\n            return h(\n              Option,\n              _mergeJSXProps([{ key: key }, { props: restOption, on: on, 'class': cls, style: style }]),\n              [label]\n            );\n          }) : filterEmpty(this.$slots['default']),\n          __propsSymbol__: Symbol(),\n          dropdownRender: getComponentFromProp(this, 'dropdownRender', {}, false),\n          getPopupContainer: getPopupContainer || getContextPopupContainer\n        }),\n        on: this.$listeners,\n        'class': cls,\n        ref: 'vcSelect'\n      };\n      return h(VcSelect, selectProps);\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n\n    return h(LocaleReceiver, {\n      attrs: {\n        componentName: 'Select',\n        defaultLocale: defaultLocale.Select\n      },\n      scopedSlots: { 'default': this.renderSelect }\n    });\n  }\n};\n\n/* istanbul ignore next */\nSelect.install = function (Vue) {\n  Vue.component(Select.name, Select);\n  Vue.component(Select.Option.name, Select.Option);\n  Vue.component(Select.OptGroup.name, Select.OptGroup);\n};\n\nexport default Select;"],"sourceRoot":""}