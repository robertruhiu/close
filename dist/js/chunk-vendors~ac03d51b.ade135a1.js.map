{"version":3,"sources":["webpack:///./node_modules/lodash/_baseIsEqual.js"],"names":["baseIsEqualDeep","__webpack_require__","isObjectLike","baseIsEqual","value","other","bitmask","customizer","stack","module","exports"],"mappings":"2GAAA,IAAAA,EAAsBC,EAAQ,QAC9BC,EAAmBD,EAAQ,QAgB3B,SAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,OAAAJ,IAAAC,IAGA,MAAAD,GAAA,MAAAC,IAAAH,EAAAE,KAAAF,EAAAG,GACAD,OAAAC,MAEAL,EAAAI,EAAAC,EAAAC,EAAAC,EAAAJ,EAAAK,IAGAC,EAAAC,QAAAP","file":"js/chunk-vendors~ac03d51b.ade135a1.js","sourcesContent":["var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n"],"sourceRoot":""}