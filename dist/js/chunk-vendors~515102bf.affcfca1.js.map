{"version":3,"sources":["webpack:///./node_modules/lodash/_toKey.js"],"names":["isSymbol","__webpack_require__","INFINITY","toKey","value","result","module","exports"],"mappings":"2GAAA,IAAAA,EAAeC,EAAQ,QAGvBC,EAAA,IASA,SAAAC,EAAAC,GACA,oBAAAA,GAAAJ,EAAAI,GACA,OAAAA,EAEA,IAAAC,EAAAD,EAAA,GACA,WAAAC,GAAA,EAAAD,IAAAF,EAAA,KAAAG,EAGAC,EAAAC,QAAAJ","file":"js/chunk-vendors~515102bf.affcfca1.js","sourcesContent":["var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n"],"sourceRoot":""}