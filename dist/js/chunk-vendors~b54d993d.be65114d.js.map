{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/menu/MenuItem.js"],"names":["babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","_vc_menu__WEBPACK_IMPORTED_MODULE_2__","_util_props_util__WEBPACK_IMPORTED_MODULE_3__","_tooltip__WEBPACK_IMPORTED_MODULE_4__","noop","__webpack_exports__","name","inheritAttrs","props","inject","getInlineCollapsed","default","isMenuItem","methods","onKeyDown","e","this","$refs","menuItem","render","h","arguments","Object","level","title","rootPrefixCls","$slots","attrs","$attrs","$listeners","inlineCollapsed","titleNode","itemProps","on","toolTipProps","placement","overlayClassName","ref"],"mappings":"0HAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,QAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,QAAAM,EAAAN,EAAA,QAAAO,EAAAP,EAAA,QAKA,SAAAQ,KACeC,EAAA,MACfC,KAAA,WACAC,cAAA,EACAC,MAASP,EAAA,KACTQ,OAAA,CACAC,mBAAA,CAAyBC,QAAA,WACzB,OAAAP,KAGAQ,WAAA,EACAC,QAAA,CACAC,UAAA,SAAAC,GACAC,KAAAC,MAAAC,SAAAJ,UAAAC,KAGAI,OAAA,WACA,IAAAC,EAAAC,UAAA,GAEAb,EAAgBc,OAAApB,EAAA,KAAAoB,CAAcN,MAC9BO,EAAAf,EAAAe,MACAC,EAAAhB,EAAAgB,MACAC,EAAAjB,EAAAiB,cACAf,EAAAM,KAAAN,mBACAgB,EAAAV,KAAAU,OACAC,EAAAX,KAAAY,OACAC,EAAAb,KAAAa,WAEAC,EAAApB,IACAqB,OAAA,EACAD,IACAC,EAAAP,IAAA,IAAAD,EAAAG,EAAA,gBAGA,IAAAM,EAAA,CACAxB,MAAaR,IAAQ,GAAGQ,EAAA,CACxBgB,MAAAM,EAAA,KAAAN,IAEAG,QACAM,GAAAJ,GAEAK,EAAA,CACA1B,MAAA,CACAgB,MAAAO,EACAI,UAAA,QACAC,iBAAAX,EAAA,8BAGA,OAAAL,EACMjB,EAAA,KACN+B,EACA,CAAAd,EACQnB,EAAA,KACAJ,IAAc,CAAAmC,EAAA,CAAcK,IAAA,cACpC,CAAAX,EAAA","file":"js/chunk-vendors~b54d993d.be65114d.js","sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _extends from 'babel-runtime/helpers/extends';\nimport { Item, itemProps } from '../vc-menu';\nimport { getOptionProps } from '../_util/props-util';\nimport Tooltip from '../tooltip';\nfunction noop() {}\nexport default {\n  name: 'MenuItem',\n  inheritAttrs: false,\n  props: itemProps,\n  inject: {\n    getInlineCollapsed: { 'default': function _default() {\n        return noop;\n      } }\n  },\n  isMenuItem: 1,\n  methods: {\n    onKeyDown: function onKeyDown(e) {\n      this.$refs.menuItem.onKeyDown(e);\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n\n    var props = getOptionProps(this);\n    var level = props.level,\n        title = props.title,\n        rootPrefixCls = props.rootPrefixCls;\n    var getInlineCollapsed = this.getInlineCollapsed,\n        $slots = this.$slots,\n        attrs = this.$attrs,\n        $listeners = this.$listeners;\n\n    var inlineCollapsed = getInlineCollapsed();\n    var titleNode = void 0;\n    if (inlineCollapsed) {\n      titleNode = title || (level === 1 ? $slots['default'] : '');\n    }\n\n    var itemProps = {\n      props: _extends({}, props, {\n        title: inlineCollapsed ? null : title\n      }),\n      attrs: attrs,\n      on: $listeners\n    };\n    var toolTipProps = {\n      props: {\n        title: titleNode,\n        placement: 'right',\n        overlayClassName: rootPrefixCls + '-inline-collapsed-tooltip'\n      }\n    };\n    return h(\n      Tooltip,\n      toolTipProps,\n      [h(\n        Item,\n        _mergeJSXProps([itemProps, { ref: 'menuItem' }]),\n        [$slots['default']]\n      )]\n    );\n  }\n};"],"sourceRoot":""}