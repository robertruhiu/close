{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/tooltip/Tooltip.js"],"names":["babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","_util_vnode__WEBPACK_IMPORTED_MODULE_2__","_vc_tooltip__WEBPACK_IMPORTED_MODULE_3__","_placements__WEBPACK_IMPORTED_MODULE_4__","_util_vue_types__WEBPACK_IMPORTED_MODULE_5__","_util_props_util__WEBPACK_IMPORTED_MODULE_6__","_abstractTooltipProps__WEBPACK_IMPORTED_MODULE_7__","splitObject","obj","keys","picked","omitted","forEach","key","props","Object","__webpack_exports__","name","model","prop","event","title","any","inject","configProvider","default","data","sVisible","this","$props","visible","watch","val","methods","onVisibleChange","isNoTitle","$emit","getPopupDomNode","$refs","tooltip","getPlacements","_$props","builtinPlacements","arrowPointAtCenter","autoAdjustOverflow","verticalArrowShift","getDisabledCompatibleChildren","ele","h","$createElement","isAntBtn","componentOptions","Ctor","options","__ANT_BUTTON","propsData","disabled","tag","attrs","_splitObject","spanStyle","display","cursor","width","block","buttonStyle","pointerEvents","spanCls","child","style","class","$slots","onPopupAlign","domNode","align","placements","placement","filter","points","rect","getBoundingClientRect","transformOrigin","top","left","indexOf","height","offset","render","arguments","$data","$listeners","prefixCls","openClassName","getPopupContainer","getContextPopupContainer","children","c","text","trim","length","childCls","tooltipProps","getTooltipContainer","ref","on","visibleChange","popupAlign","slot"],"mappings":"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","file":"js/chunk-vendors~5c267e93.75176906.js","sourcesContent":["import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport { cloneElement } from '../_util/vnode';\nimport VcTooltip from '../vc-tooltip';\nimport _getPlacements from './placements';\nimport PropTypes from '../_util/vue-types';\nimport { hasProp, getComponentFromProp, getClass, getStyle, isValidElement } from '../_util/props-util';\nimport abstractTooltipProps from './abstractTooltipProps';\n\nvar splitObject = function splitObject(obj, keys) {\n  var picked = {};\n  var omitted = _extends({}, obj);\n  keys.forEach(function (key) {\n    if (obj && key in obj) {\n      picked[key] = obj[key];\n      delete omitted[key];\n    }\n  });\n  return { picked: picked, omitted: omitted };\n};\nvar props = abstractTooltipProps();\nexport default {\n  name: 'ATooltip',\n  model: {\n    prop: 'visible',\n    event: 'visibleChange'\n  },\n  props: _extends({}, props, {\n    title: PropTypes.any\n  }),\n  inject: {\n    configProvider: { 'default': function _default() {\n        return {};\n      } }\n  },\n  data: function data() {\n    return {\n      sVisible: !!this.$props.visible\n    };\n  },\n\n  watch: {\n    visible: function visible(val) {\n      this.sVisible = val;\n    }\n  },\n  methods: {\n    onVisibleChange: function onVisibleChange(visible) {\n      if (!hasProp(this, 'visible')) {\n        this.sVisible = this.isNoTitle() ? false : visible;\n      }\n      if (!this.isNoTitle()) {\n        this.$emit('visibleChange', visible);\n      }\n    },\n    getPopupDomNode: function getPopupDomNode() {\n      return this.$refs.tooltip.getPopupDomNode();\n    },\n    getPlacements: function getPlacements() {\n      var _$props = this.$props,\n          builtinPlacements = _$props.builtinPlacements,\n          arrowPointAtCenter = _$props.arrowPointAtCenter,\n          autoAdjustOverflow = _$props.autoAdjustOverflow;\n\n      return builtinPlacements || _getPlacements({\n        arrowPointAtCenter: arrowPointAtCenter,\n        verticalArrowShift: 8,\n        autoAdjustOverflow: autoAdjustOverflow\n      });\n    },\n\n\n    // Fix Tooltip won't hide at disabled button\n    // mouse events don't trigger at disabled button in Chrome\n    // https://github.com/react-component/tooltip/issues/18\n    getDisabledCompatibleChildren: function getDisabledCompatibleChildren(ele) {\n      var h = this.$createElement;\n\n      var isAntBtn = ele.componentOptions && ele.componentOptions.Ctor.options.__ANT_BUTTON;\n      if (isAntBtn && (ele.componentOptions.propsData.disabled || ele.componentOptions.propsData.disabled === '') || ele.tag === 'button' && ele.data && ele.data.attrs.disabled !== false) {\n        // Pick some layout related style properties up to span\n        // Prevent layout bugs like https://github.com/ant-design/ant-design/issues/5254\n        var _splitObject = splitObject(getStyle(ele), ['position', 'left', 'right', 'top', 'bottom', 'float', 'display', 'zIndex']),\n            picked = _splitObject.picked,\n            omitted = _splitObject.omitted;\n\n        var spanStyle = _extends({\n          display: 'inline-block' }, picked, {\n          cursor: 'not-allowed',\n          width: isAntBtn && ele.componentOptions.propsData.block ? '100%' : null\n        });\n        var buttonStyle = _extends({}, omitted, {\n          pointerEvents: 'none'\n        });\n        var spanCls = getClass(ele);\n        var child = cloneElement(ele, {\n          style: buttonStyle,\n          'class': null\n        });\n        return h(\n          'span',\n          { style: spanStyle, 'class': spanCls },\n          [child]\n        );\n      }\n      return ele;\n    },\n    isNoTitle: function isNoTitle() {\n      var $slots = this.$slots,\n          title = this.title;\n\n      return !$slots.title && !title;\n    },\n\n\n    // 动态设置动画点\n    onPopupAlign: function onPopupAlign(domNode, align) {\n      var placements = this.getPlacements();\n      // 当前返回的位置\n      var placement = Object.keys(placements).filter(function (key) {\n        return placements[key].points[0] === align.points[0] && placements[key].points[1] === align.points[1];\n      })[0];\n      if (!placement) {\n        return;\n      }\n      // 根据当前坐标设置动画点\n      var rect = domNode.getBoundingClientRect();\n      var transformOrigin = {\n        top: '50%',\n        left: '50%'\n      };\n      if (placement.indexOf('top') >= 0 || placement.indexOf('Bottom') >= 0) {\n        transformOrigin.top = rect.height - align.offset[1] + 'px';\n      } else if (placement.indexOf('Top') >= 0 || placement.indexOf('bottom') >= 0) {\n        transformOrigin.top = -align.offset[1] + 'px';\n      }\n      if (placement.indexOf('left') >= 0 || placement.indexOf('Right') >= 0) {\n        transformOrigin.left = rect.width - align.offset[0] + 'px';\n      } else if (placement.indexOf('right') >= 0 || placement.indexOf('Left') >= 0) {\n        transformOrigin.left = -align.offset[0] + 'px';\n      }\n      domNode.style.transformOrigin = transformOrigin.left + ' ' + transformOrigin.top;\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var $props = this.$props,\n        $data = this.$data,\n        $slots = this.$slots,\n        $listeners = this.$listeners;\n    var prefixCls = $props.prefixCls,\n        openClassName = $props.openClassName,\n        getPopupContainer = $props.getPopupContainer;\n    var getContextPopupContainer = this.configProvider.getPopupContainer;\n\n    var children = ($slots['default'] || []).filter(function (c) {\n      return c.tag || c.text.trim() !== '';\n    });\n    children = children.length === 1 ? children[0] : children;\n    var sVisible = $data.sVisible;\n    // Hide tooltip when there is no title\n    if (!hasProp(this, 'visible') && this.isNoTitle()) {\n      sVisible = false;\n    }\n    if (!children) {\n      return null;\n    }\n    var child = this.getDisabledCompatibleChildren(isValidElement(children) ? children : h('span', [children]));\n    var childCls = _defineProperty({}, openClassName || prefixCls + '-open', true);\n    var tooltipProps = {\n      props: _extends({}, $props, {\n        getTooltipContainer: getPopupContainer || getContextPopupContainer,\n        builtinPlacements: this.getPlacements(),\n        visible: sVisible\n      }),\n      ref: 'tooltip',\n      on: _extends({}, $listeners, {\n        visibleChange: this.onVisibleChange,\n        popupAlign: this.onPopupAlign\n      })\n    };\n    return h(\n      VcTooltip,\n      tooltipProps,\n      [h(\n        'template',\n        { slot: 'overlay' },\n        [getComponentFromProp(this, 'title')]\n      ), sVisible ? cloneElement(child, { 'class': childCls }) : child]\n    );\n  }\n};"],"sourceRoot":""}