{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-select/DropdownMenu.js"],"names":["babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","raf__WEBPACK_IMPORTED_MODULE_1__","raf__WEBPACK_IMPORTED_MODULE_1___default","_util_vue_types__WEBPACK_IMPORTED_MODULE_2__","_vc_menu__WEBPACK_IMPORTED_MODULE_3__","dom_scroll_into_view__WEBPACK_IMPORTED_MODULE_4__","dom_scroll_into_view__WEBPACK_IMPORTED_MODULE_4___default","_util__WEBPACK_IMPORTED_MODULE_5__","_util_vnode__WEBPACK_IMPORTED_MODULE_6__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_7__","_util_props_util__WEBPACK_IMPORTED_MODULE_8__","__webpack_exports__","name","mixins","props","ariaId","string","defaultActiveFirstOption","bool","value","any","dropdownMenuStyle","object","multiple","prefixCls","menuItems","inputValue","visible","backfillValue","firstActiveValue","menuItemSelectedIcon","watch","val","this","lastVisible","created","rafInstance","cancel","lastInputValue","$props","mounted","_this","$nextTick","scrollActiveItemToView","updated","_this2","prevVisible","beforeDestroy","methods","_this3","itemComponent","firstActiveItem","$el","scrollIntoViewOpts","onlyScrollIfNeeded","length","alignWithTop","$refs","menuRef","renderMenu","_this4","h","$createElement","Object","_$listeners","$listeners","menuDeselect","menuSelect","popupScroll","selectedKeys","menuProps","itemIcon","on","style","ref","attrs","role","scroll","deselect","select","click","activeKeyProps","clonedMenuItems","defaultActiveFirst","activeKey","undefined","foundFirst","clone","item","indexOf","key","directives","map","isMenuItemGroup","children","componentOptions","lastValue","render","arguments","_$listeners2","popupFocus","overflow","transform","id","tabIndex","focus","mousedown"],"mappings":"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","file":"js/chunk-vendors~d322da17.63359d95.js","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport raf from 'raf';\nimport PropTypes from '../_util/vue-types';\nimport Menu from '../vc-menu';\nimport scrollIntoView from 'dom-scroll-into-view';\nimport { getSelectKeys, preventDefaultEvent } from './util';\nimport { cloneElement } from '../_util/vnode';\nimport BaseMixin from '../_util/BaseMixin';\nimport { getSlotOptions, getComponentFromProp } from '../_util/props-util';\n\nexport default {\n  name: 'DropdownMenu',\n  mixins: [BaseMixin],\n  props: {\n    ariaId: PropTypes.string,\n    defaultActiveFirstOption: PropTypes.bool,\n    value: PropTypes.any,\n    dropdownMenuStyle: PropTypes.object,\n    multiple: PropTypes.bool,\n    // onPopupFocus: PropTypes.func,\n    // onPopupScroll: PropTypes.func,\n    // onMenuDeSelect: PropTypes.func,\n    // onMenuSelect: PropTypes.func,\n    prefixCls: PropTypes.string,\n    menuItems: PropTypes.any,\n    inputValue: PropTypes.string,\n    visible: PropTypes.bool,\n    backfillValue: PropTypes.any,\n    firstActiveValue: PropTypes.string,\n    menuItemSelectedIcon: PropTypes.any\n  },\n  watch: {\n    visible: function visible(val) {\n      if (!val) {\n        this.lastVisible = val;\n      }\n    }\n  },\n\n  created: function created() {\n    this.rafInstance = { cancel: function cancel() {\n        return null;\n      } };\n    this.lastInputValue = this.$props.inputValue;\n    this.lastVisible = false;\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.scrollActiveItemToView();\n    });\n    this.lastVisible = this.$props.visible;\n  },\n  updated: function updated() {\n    var _this2 = this;\n\n    var props = this.$props;\n    if (!this.prevVisible && props.visible) {\n      this.$nextTick(function () {\n        _this2.scrollActiveItemToView();\n      });\n    }\n    this.lastVisible = props.visible;\n    this.lastInputValue = props.inputValue;\n    this.prevVisible = this.visible;\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.rafInstance && this.rafInstance.cancel) {\n      this.rafInstance.cancel();\n    }\n  },\n\n  methods: {\n    scrollActiveItemToView: function scrollActiveItemToView() {\n      var _this3 = this;\n\n      // scroll into view\n      var itemComponent = this.firstActiveItem && this.firstActiveItem.$el;\n      var props = this.$props;\n      var value = props.value,\n          visible = props.visible,\n          firstActiveValue = props.firstActiveValue;\n\n      if (!itemComponent || !visible) {\n        return;\n      }\n      var scrollIntoViewOpts = {\n        onlyScrollIfNeeded: true\n      };\n      if ((!value || value.length === 0) && firstActiveValue) {\n        scrollIntoViewOpts.alignWithTop = true;\n      }\n      // Delay to scroll since current frame item position is not ready when pre view is by filter\n      // https://github.com/ant-design/ant-design/issues/11268#issuecomment-406634462\n      this.rafInstance = raf(function () {\n        scrollIntoView(itemComponent, _this3.$refs.menuRef.$el, scrollIntoViewOpts);\n      });\n    },\n    renderMenu: function renderMenu() {\n      var _this4 = this;\n\n      var h = this.$createElement;\n\n      var props = this.$props;\n      var menuItems = props.menuItems,\n          defaultActiveFirstOption = props.defaultActiveFirstOption,\n          value = props.value,\n          prefixCls = props.prefixCls,\n          multiple = props.multiple,\n          inputValue = props.inputValue,\n          firstActiveValue = props.firstActiveValue,\n          dropdownMenuStyle = props.dropdownMenuStyle,\n          backfillValue = props.backfillValue,\n          visible = props.visible;\n\n      var menuItemSelectedIcon = getComponentFromProp(this, 'menuItemSelectedIcon');\n      var _$listeners = this.$listeners,\n          menuDeselect = _$listeners.menuDeselect,\n          menuSelect = _$listeners.menuSelect,\n          popupScroll = _$listeners.popupScroll;\n\n      if (menuItems && menuItems.length) {\n        var selectedKeys = getSelectKeys(menuItems, value);\n        var menuProps = {\n          props: {\n            multiple: multiple,\n            itemIcon: multiple ? menuItemSelectedIcon : null,\n            selectedKeys: selectedKeys,\n            prefixCls: prefixCls + '-menu'\n          },\n          on: {},\n          style: dropdownMenuStyle,\n          ref: 'menuRef',\n          attrs: {\n            role: 'listbox'\n          }\n        };\n        if (popupScroll) {\n          menuProps.on.scroll = popupScroll;\n        }\n        if (multiple) {\n          menuProps.on.deselect = menuDeselect;\n          menuProps.on.select = menuSelect;\n        } else {\n          menuProps.on.click = menuSelect;\n        }\n        var activeKeyProps = {};\n\n        var clonedMenuItems = menuItems;\n        var defaultActiveFirst = defaultActiveFirstOption;\n        if (selectedKeys.length || firstActiveValue) {\n          if (props.visible && !this.lastVisible) {\n            activeKeyProps.activeKey = selectedKeys[0] || firstActiveValue;\n          } else if (!visible) {\n            // Do not trigger auto active since we already have selectedKeys\n            if (selectedKeys[0]) {\n              defaultActiveFirst = false;\n            }\n            activeKeyProps.activeKey = undefined;\n          }\n          var foundFirst = false;\n          // set firstActiveItem via cloning menus\n          // for scroll into view\n          var clone = function clone(item) {\n            if (!foundFirst && selectedKeys.indexOf(item.key) !== -1 || !foundFirst && !selectedKeys.length && firstActiveValue.indexOf(item.key) !== -1) {\n              foundFirst = true;\n              return cloneElement(item, {\n                directives: [{\n                  name: 'ant-ref',\n                  value: function value(ref) {\n                    _this4.firstActiveItem = ref;\n                  }\n                }]\n              });\n            }\n            return item;\n          };\n\n          clonedMenuItems = menuItems.map(function (item) {\n            if (getSlotOptions(item).isMenuItemGroup) {\n              var children = item.componentOptions.children.map(clone);\n              return cloneElement(item, { children: children });\n            }\n            return clone(item);\n          });\n        } else {\n          // Clear firstActiveItem when dropdown menu items was empty\n          // Avoid `Unable to find node on an unmounted component`\n          // https://github.com/ant-design/ant-design/issues/10774\n          this.firstActiveItem = null;\n        }\n\n        // clear activeKey when inputValue change\n        var lastValue = value && value[value.length - 1];\n        if (inputValue !== this.lastInputValue && (!lastValue || lastValue !== backfillValue)) {\n          activeKeyProps.activeKey = '';\n        }\n        menuProps.props = _extends({}, activeKeyProps, menuProps.props, { defaultActiveFirst: defaultActiveFirst });\n        return h(\n          Menu,\n          menuProps,\n          [clonedMenuItems]\n        );\n      }\n      return null;\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n\n    var renderMenu = this.renderMenu();\n    var _$listeners2 = this.$listeners,\n        popupFocus = _$listeners2.popupFocus,\n        popupScroll = _$listeners2.popupScroll;\n\n    return renderMenu ? h(\n      'div',\n      {\n        style: {\n          overflow: 'auto',\n          transform: 'translateZ(0)'\n        },\n        attrs: { id: this.$props.ariaId,\n          tabIndex: '-1'\n        },\n        on: {\n          'focus': popupFocus,\n          'mousedown': preventDefaultEvent,\n          'scroll': popupScroll\n        },\n\n        ref: 'menuContainer'\n      },\n      [renderMenu]\n    ) : null;\n  }\n};"],"sourceRoot":""}