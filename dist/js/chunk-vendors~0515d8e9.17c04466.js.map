{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-form/src/createDOMForm.js"],"names":["babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","dom_scroll_into_view__WEBPACK_IMPORTED_MODULE_1__","dom_scroll_into_view__WEBPACK_IMPORTED_MODULE_1___default","lodash_has__WEBPACK_IMPORTED_MODULE_2__","lodash_has__WEBPACK_IMPORTED_MODULE_2___default","_createBaseForm__WEBPACK_IMPORTED_MODULE_3__","_createForm__WEBPACK_IMPORTED_MODULE_4__","_utils__WEBPACK_IMPORTED_MODULE_5__","computedStyle","el","prop","getComputedStyle","window","style","currentStyle","replace","word","letter","toUpperCase","getScrollableContainer","node","nodeName","toLowerCase","overflowY","scrollHeight","clientHeight","parentNode","ownerDocument","mixin","methods","getForm","call","this","validateFieldsAndScroll","ns","opt","cb","_this","_getParams","Object","names","callback","options","newCb","error","values","validNames","fieldsStore","getValidFieldsName","firstNode","firstTop","forEach","name","instance","getFieldInstance","$el","elm","top","getBoundingClientRect","type","undefined","c","container","onlyScrollIfNeeded","scroll","validateFields","createDOMForm","option","__webpack_exports__"],"mappings":"wHAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,QAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,QAAAM,EAAAN,EAAAE,EAAAG,GAAAE,EAAAP,EAAA,QAAAQ,EAAAR,EAAA,QAAAS,EAAAT,EAAA,QAOA,SAAAU,EAAAC,EAAAC,GACA,IAAAC,EAAAC,OAAAD,iBACAE,EAEAF,EAEAA,EAAAF,GACAA,EAAAK,aACA,GAAAD,EACA,OAAAA,EAKAH,EAAAK,QAAA,mBAAAC,EAAAC,GACA,OAAAA,EAAAC,iBAMA,SAAAC,EAAAnB,GACA,IAAAoB,EAAApB,EACAqB,OAAA,EAEA,gBAAAA,EAAAD,EAAAC,SAAAC,eAAA,CACA,IAAAC,EAAAf,EAAAY,EAAA,aAEA,GAAAA,IAAApB,IAAA,SAAAuB,GAAA,WAAAA,IAAAH,EAAAI,aAAAJ,EAAAK,aACA,OAAAL,EAEAA,IAAAM,WAEA,eAAAL,EAAAD,EAAAO,cAAAP,EAGA,IAAAQ,EAAA,CACAC,QAAA,CACAC,QAAA,WACA,OAAa/B,IAAQ,GAAKO,EAAA,KAASuB,QAAAC,QAAAC,KAAAC,MAAA,CACnCC,wBAAAD,KAAAC,2BAGAA,wBAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAL,KAEAM,EAAuBC,OAAAhC,EAAA,KAAAgC,CAASL,EAAAC,EAAAC,GAChCI,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,SACAC,EAAAJ,EAAAI,QAEAC,EAAA,SAAAC,EAAAC,GACA,GAAAD,EAAA,CACA,IAAAE,EAAAT,EAAAU,YAAAC,qBACAC,OAAA,EACAC,OAAA,EAeA,GAdAJ,EAAAK,QAAA,SAAAC,GACA,GAAgBhD,IAAGwC,EAAAQ,GAAA,CACnB,IAAAC,EAAAhB,EAAAiB,iBAAAF,GACA,GAAAC,EAAA,CACA,IAAAjC,EAAAiC,EAAAE,KAAAF,EAAAG,IACAC,EAAArC,EAAAsC,wBAAAD,IACA,WAAArC,EAAAuC,YAAAC,IAAAV,KAAAO,KACAP,EAAAO,EACAR,EAAA7B,OAMA6B,EAAA,CACA,IAAAY,EAAAnB,EAAAoB,WAAA3C,EAAA8B,GACY/C,IAAc+C,EAAAY,EAAe9D,IAAQ,CACjDgE,oBAAA,GACarB,EAAAsB,UAIb,oBAAAvB,GACAA,EAAAG,EAAAC,IAIA,OAAAb,KAAAiC,eAAAzB,EAAAE,EAAAC,MAKA,SAAAuB,EAAAC,GACA,OAAS5B,OAAAlC,EAAA,KAAAkC,CAAexC,IAAQ,GAAGoE,GAAA,CAAAvC,IAGpBwC,EAAA","file":"js/chunk-vendors~0515d8e9.17c04466.js","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport scrollIntoView from 'dom-scroll-into-view';\nimport has from 'lodash/has';\nimport createBaseForm from './createBaseForm';\nimport { mixin as formMixin } from './createForm';\nimport { getParams } from './utils';\n\nfunction computedStyle(el, prop) {\n  var getComputedStyle = window.getComputedStyle;\n  var style =\n  // If we have getComputedStyle\n  getComputedStyle ? // Query it\n  // TODO: From CSS-Query notes, we might need (node, null) for FF\n  getComputedStyle(el) : // Otherwise, we are in IE and use currentStyle\n  el.currentStyle;\n  if (style) {\n    return style[\n    // Switch to camelCase for CSSOM\n    // DEV: Grabbed from jQuery\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597\n    prop.replace(/-(\\w)/gi, function (word, letter) {\n      return letter.toUpperCase();\n    })];\n  }\n  return undefined;\n}\n\nfunction getScrollableContainer(n) {\n  var node = n;\n  var nodeName = void 0;\n  /* eslint no-cond-assign:0 */\n  while ((nodeName = node.nodeName.toLowerCase()) !== 'body') {\n    var overflowY = computedStyle(node, 'overflowY');\n    // https://stackoverflow.com/a/36900407/3040605\n    if (node !== n && (overflowY === 'auto' || overflowY === 'scroll') && node.scrollHeight > node.clientHeight) {\n      return node;\n    }\n    node = node.parentNode;\n  }\n  return nodeName === 'body' ? node.ownerDocument : node;\n}\n\nvar mixin = {\n  methods: {\n    getForm: function getForm() {\n      return _extends({}, formMixin.methods.getForm.call(this), {\n        validateFieldsAndScroll: this.validateFieldsAndScroll\n      });\n    },\n    validateFieldsAndScroll: function validateFieldsAndScroll(ns, opt, cb) {\n      var _this = this;\n\n      var _getParams = getParams(ns, opt, cb),\n          names = _getParams.names,\n          callback = _getParams.callback,\n          options = _getParams.options;\n\n      var newCb = function newCb(error, values) {\n        if (error) {\n          var validNames = _this.fieldsStore.getValidFieldsName();\n          var firstNode = void 0;\n          var firstTop = void 0;\n          validNames.forEach(function (name) {\n            if (has(error, name)) {\n              var instance = _this.getFieldInstance(name);\n              if (instance) {\n                var node = instance.$el || instance.elm;\n                var top = node.getBoundingClientRect().top;\n                if (node.type !== 'hidden' && (firstTop === undefined || firstTop > top)) {\n                  firstTop = top;\n                  firstNode = node;\n                }\n              }\n            }\n          });\n\n          if (firstNode) {\n            var c = options.container || getScrollableContainer(firstNode);\n            scrollIntoView(firstNode, c, _extends({\n              onlyScrollIfNeeded: true\n            }, options.scroll));\n          }\n        }\n\n        if (typeof callback === 'function') {\n          callback(error, values);\n        }\n      };\n\n      return this.validateFields(names, options, newCb);\n    }\n  }\n};\n\nfunction createDOMForm(option) {\n  return createBaseForm(_extends({}, option), [mixin]);\n}\n\nexport default createDOMForm;"],"sourceRoot":""}