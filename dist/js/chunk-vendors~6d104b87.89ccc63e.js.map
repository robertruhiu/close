{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/badge/Badge.js"],"names":["babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2___default","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default","_util_vue_types__WEBPACK_IMPORTED_MODULE_4__","_ScrollNumber__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_util_props_util__WEBPACK_IMPORTED_MODULE_7__","_util_vnode__WEBPACK_IMPORTED_MODULE_8__","_util_getTransitionProps__WEBPACK_IMPORTED_MODULE_9__","_util_isNumeric__WEBPACK_IMPORTED_MODULE_10__","BadgeProps","count","any","showZero","bool","overflowCount","number","dot","prefixCls","string","scrollNumberPrefixCls","status","oneOf","text","offset","array","numberStyle","object","def","title","__webpack_exports__","name","props","Object","methods","getBadgeClassName","_classNames","_$props","this","$props","children","$slots","length","isZero","numberedDispayCount","getNumberedDispayCount","isDot","_$props2","isHidden","displayCount","getDispayCount","isEmpty","undefined","badgeCount","getScollNumberTitle","getStyleWithOffset","_$props3","right","parseInt","marginTop","renderStatusText","h","$createElement","_$props4","hidden","class","renderDispayComponent","customNode","style","renderBadgeNumber","_scrollNumberCls","_$props5","scrollNumberCls","toString","attrs","data-show","className","displayComponent","directives","value","key","render","_classNames2","arguments","Array","isArray","scrollNumber","statusText","statusCls","on","$listeners","transitionProps"],"mappings":"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","file":"js/chunk-vendors~6d104b87.89ccc63e.js","sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport PropTypes from '../_util/vue-types';\nimport ScrollNumber from './ScrollNumber';\nimport classNames from 'classnames';\nimport { initDefaultProps, filterEmpty, getComponentFromProp } from '../_util/props-util';\nimport { cloneElement } from '../_util/vnode';\nimport getTransitionProps from '../_util/getTransitionProps';\nimport isNumeric from '../_util/isNumeric';\n\nexport var BadgeProps = {\n  /** Number to show in badge */\n  count: PropTypes.any,\n  showZero: PropTypes.bool,\n  /** Max count to show */\n  overflowCount: PropTypes.number,\n  /** whether to show red dot without number */\n  dot: PropTypes.bool,\n  prefixCls: PropTypes.string,\n  scrollNumberPrefixCls: PropTypes.string,\n  status: PropTypes.oneOf(['success', 'processing', 'default', 'error', 'warning']),\n  text: PropTypes.string,\n  offset: PropTypes.array,\n  numberStyle: PropTypes.object.def({}),\n  title: PropTypes.string\n};\n\nexport default {\n  name: 'ABadge',\n  props: initDefaultProps(BadgeProps, {\n    prefixCls: 'ant-badge',\n    scrollNumberPrefixCls: 'ant-scroll-number',\n    showZero: false,\n    dot: false,\n    overflowCount: 99\n  }),\n  methods: {\n    getBadgeClassName: function getBadgeClassName() {\n      var _classNames;\n\n      var _$props = this.$props,\n          prefixCls = _$props.prefixCls,\n          status = _$props.status;\n\n      var children = filterEmpty(this.$slots['default']);\n      return classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-status', !!status), _defineProperty(_classNames, prefixCls + '-not-a-wrapper', !children.length), _classNames));\n    },\n    isZero: function isZero() {\n      var numberedDispayCount = this.getNumberedDispayCount();\n      return numberedDispayCount === '0' || numberedDispayCount === 0;\n    },\n    isDot: function isDot() {\n      var _$props2 = this.$props,\n          dot = _$props2.dot,\n          status = _$props2.status;\n\n      var isZero = this.isZero();\n      return dot && !isZero || status;\n    },\n    isHidden: function isHidden() {\n      var showZero = this.$props.showZero;\n\n      var displayCount = this.getDispayCount();\n      var isZero = this.isZero();\n      var isDot = this.isDot();\n      var isEmpty = displayCount === null || displayCount === undefined || displayCount === '';\n      return (isEmpty || isZero && !showZero) && !isDot;\n    },\n    getNumberedDispayCount: function getNumberedDispayCount() {\n      var overflowCount = this.$props.overflowCount;\n\n      var count = this.badgeCount;\n      var displayCount = count > overflowCount ? overflowCount + '+' : count;\n      return displayCount;\n    },\n    getDispayCount: function getDispayCount() {\n      var isDot = this.isDot();\n      // dot mode don't need count\n      if (isDot) {\n        return '';\n      }\n      return this.getNumberedDispayCount();\n    },\n    getScollNumberTitle: function getScollNumberTitle() {\n      var title = this.$props.title;\n\n      var count = this.badgeCount;\n      if (title) {\n        return title;\n      }\n      return typeof count === 'string' || typeof count === 'number' ? count : undefined;\n    },\n    getStyleWithOffset: function getStyleWithOffset() {\n      var _$props3 = this.$props,\n          offset = _$props3.offset,\n          numberStyle = _$props3.numberStyle;\n\n      return offset ? _extends({\n        right: -parseInt(offset[0], 10) + 'px',\n        marginTop: isNumeric(offset[1]) ? offset[1] + 'px' : offset[1]\n      }, numberStyle) : numberStyle;\n    },\n    renderStatusText: function renderStatusText() {\n      var h = this.$createElement;\n      var _$props4 = this.$props,\n          prefixCls = _$props4.prefixCls,\n          text = _$props4.text;\n\n      var hidden = this.isHidden();\n      return hidden || !text ? null : h(\n        'span',\n        { 'class': prefixCls + '-status-text' },\n        [text]\n      );\n    },\n    renderDispayComponent: function renderDispayComponent() {\n      var count = this.badgeCount;\n      var customNode = count;\n      if (!customNode || (typeof customNode === 'undefined' ? 'undefined' : _typeof(customNode)) !== 'object') {\n        return undefined;\n      }\n      return cloneElement(customNode, {\n        style: this.getStyleWithOffset()\n      });\n    },\n    renderBadgeNumber: function renderBadgeNumber() {\n      var _scrollNumberCls;\n\n      var h = this.$createElement;\n      var _$props5 = this.$props,\n          prefixCls = _$props5.prefixCls,\n          scrollNumberPrefixCls = _$props5.scrollNumberPrefixCls,\n          status = _$props5.status;\n\n      var count = this.badgeCount;\n      var displayCount = this.getDispayCount();\n      var isDot = this.isDot();\n      var hidden = this.isHidden();\n\n      var scrollNumberCls = (_scrollNumberCls = {}, _defineProperty(_scrollNumberCls, prefixCls + '-dot', isDot), _defineProperty(_scrollNumberCls, prefixCls + '-count', !isDot), _defineProperty(_scrollNumberCls, prefixCls + '-multiple-words', !isDot && count && count.toString && count.toString().length > 1), _defineProperty(_scrollNumberCls, prefixCls + '-status-' + status, !!status), _scrollNumberCls);\n\n      return hidden ? null : h(ScrollNumber, {\n        attrs: {\n          prefixCls: scrollNumberPrefixCls,\n          'data-show': !hidden,\n\n          className: scrollNumberCls,\n          count: displayCount,\n          displayComponent: this.renderDispayComponent() // <Badge status=\"success\" count={<Icon type=\"xxx\" />}></Badge>\n          , title: this.getScollNumberTitle()\n        },\n        directives: [{\n          name: 'show',\n          value: !hidden\n        }],\n        style: this.getStyleWithOffset(),\n        key: 'scrollNumber'\n      });\n    }\n  },\n\n  render: function render() {\n    var _classNames2;\n\n    var h = arguments[0];\n    var prefixCls = this.prefixCls,\n        status = this.status,\n        text = this.text,\n        $slots = this.$slots;\n\n    var children = filterEmpty($slots['default']);\n    var count = getComponentFromProp(this, 'count');\n    if (Array.isArray(count)) {\n      count = count[0];\n    }\n    this.badgeCount = count;\n    var scrollNumber = this.renderBadgeNumber();\n    var statusText = this.renderStatusText();\n    var statusCls = classNames((_classNames2 = {}, _defineProperty(_classNames2, prefixCls + '-status-dot', !!status), _defineProperty(_classNames2, prefixCls + '-status-' + status, !!status), _classNames2));\n\n    // <Badge status=\"success\" />\n    if (!children.length && status) {\n      return h(\n        'span',\n        _mergeJSXProps([{ on: this.$listeners }, {\n          'class': this.getBadgeClassName(),\n          style: this.getStyleWithOffset()\n        }]),\n        [h('span', { 'class': statusCls }), h(\n          'span',\n          { 'class': prefixCls + '-status-text' },\n          [text]\n        )]\n      );\n    }\n\n    var transitionProps = getTransitionProps(children.length ? prefixCls + '-zoom' : '');\n\n    return h(\n      'span',\n      _mergeJSXProps([{ on: this.$listeners }, { 'class': this.getBadgeClassName() }]),\n      [children, h(\n        'transition',\n        transitionProps,\n        [scrollNumber]\n      ), statusText]\n    );\n  }\n};"],"sourceRoot":""}