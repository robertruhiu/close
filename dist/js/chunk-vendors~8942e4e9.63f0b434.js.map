{"version":3,"sources":["webpack:///./node_modules/add-dom-event-listener/lib/index.js"],"names":["_interopRequireDefault","obj","__esModule","default","Object","defineProperty","exports","value","addEventListener","_EventObject","__webpack_require__","_EventObject2","target","eventType","callback","option","wrapCallback","e","ne","call","_ret","useCapture","capture","v","remove","removeEventListener","attachEvent","detachEvent","module"],"mappings":"0HAOA,SAAAA,EAAAC,GAAsC,OAAAA,KAAAC,WAAAD,EAAA,CAAuCE,QAAAF,GAL7EG,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAA,WAAAE,EAIA,IAAAC,EAAmBC,EAAQ,QAE3BC,EAAAX,EAAAS,GAEA,SAAAD,EAAAI,EAAAC,EAAAC,EAAAC,GACA,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAP,EAAA,WAAAM,GACAH,EAAAK,KAAAP,EAAAM,GAGA,GAAAN,EAAAJ,iBAAA,CACA,IAAAY,EAAA,WACA,IAAAC,GAAA,EASA,MARA,kBAAAN,EACAM,EAAAN,EAAAO,UAAA,EACO,mBAAAP,IACPM,EAAAN,GAGAH,EAAAJ,iBAAAK,EAAAG,EAAAD,IAAA,GAEA,CACAQ,EAAA,CACAC,OAAA,WACAZ,EAAAa,oBAAAZ,EAAAG,EAAAK,MAbA,GAmBA,qBAAAD,EAAA,OAAAA,EAAAG,OACG,GAAAX,EAAAc,YAEH,OADAd,EAAAc,YAAA,KAAAb,EAAAG,GACA,CACAQ,OAAA,WACAZ,EAAAe,YAAA,KAAAd,EAAAG,KAMAY,EAAAtB,UAAA","file":"js/chunk-vendors~8942e4e9.63f0b434.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = addEventListener;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _EventObject = require('./EventObject');\n\nvar _EventObject2 = _interopRequireDefault(_EventObject);\n\nfunction addEventListener(target, eventType, callback, option) {\n  function wrapCallback(e) {\n    var ne = new _EventObject2['default'](e);\n    callback.call(target, ne);\n  }\n\n  if (target.addEventListener) {\n    var _ret = (function () {\n      var useCapture = false;\n      if (typeof option === 'object') {\n        useCapture = option.capture || false;\n      } else if (typeof option === 'boolean') {\n        useCapture = option;\n      }\n\n      target.addEventListener(eventType, wrapCallback, option || false);\n\n      return {\n        v: {\n          remove: function remove() {\n            target.removeEventListener(eventType, wrapCallback, useCapture);\n          }\n        }\n      };\n    })();\n\n    if (typeof _ret === 'object') return _ret.v;\n  } else if (target.attachEvent) {\n    target.attachEvent('on' + eventType, wrapCallback);\n    return {\n      remove: function remove() {\n        target.detachEvent('on' + eventType, wrapCallback);\n      }\n    };\n  }\n}\n\nmodule.exports = exports['default'];"],"sourceRoot":""}