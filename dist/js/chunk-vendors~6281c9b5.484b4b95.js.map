{"version":3,"sources":["webpack:///./node_modules/lodash/_assignMergeValue.js"],"names":["baseAssignValue","__webpack_require__","eq","assignMergeValue","object","key","value","undefined","module","exports"],"mappings":"2GAAA,IAAAA,EAAsBC,EAAQ,QAC9BC,EAASD,EAAQ,QAWjB,SAAAE,EAAAC,EAAAC,EAAAC,SACAC,IAAAD,GAAAJ,EAAAE,EAAAC,GAAAC,WACAC,IAAAD,GAAAD,KAAAD,IACAJ,EAAAI,EAAAC,EAAAC,GAIAE,EAAAC,QAAAN","file":"js/chunk-vendors~6281c9b5.484b4b95.js","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n"],"sourceRoot":""}