{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/checkbox/Checkbox.js"],"names":["babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2___default","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3___default","_util_vue_types__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_vc_checkbox__WEBPACK_IMPORTED_MODULE_6__","_util_props_util__WEBPACK_IMPORTED_MODULE_7__","noop","__webpack_exports__","name","inheritAttrs","model","prop","props","prefixCls","default","type","String","defaultChecked","bool","checked","disabled","isGroup","Boolean","value","any","id","indeterminate","string","def","autoFocus","inject","checkboxGroupContext","methods","handleChange","event","targetChecked","target","this","$emit","focus","$refs","vcCheckbox","blur","render","_classNames","_this","h","arguments","checkboxGroup","$listeners","$slots","Object","children","_$listeners$mouseente","mouseenter","undefined","_$listeners$mouseleav","mouseleave","restListeners","restProps","checkboxProps","on","attrs","change","_len","length","args","Array","_key","apply","concat","toggleOption","label","sValue","indexOf","classString","checkboxClass","class","ref"],"mappings":"uHAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,QAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,QAAAM,EAAAN,EAAAE,EAAAG,GAAAE,EAAAP,EAAA,QAAAQ,EAAAR,EAAAE,EAAAK,GAAAE,EAAAT,EAAA,QAAAU,EAAAV,EAAA,QAAAW,EAAAX,EAAAE,EAAAQ,GAAAE,EAAAZ,EAAA,QAAAa,EAAAb,EAAA,QAQA,SAAAc,KAEeC,EAAA,MACfC,KAAA,YACAC,cAAA,EACAC,MAAA,CACAC,KAAA,WAEAC,MAAA,CACAC,UAAA,CACAC,QAAA,eACAC,KAAAC,QAEAC,eAAoBhB,EAAA,KAASiB,KAC7BC,QAAalB,EAAA,KAASiB,KACtBE,SAAcnB,EAAA,KAASiB,KACvBG,QAAAC,QACAC,MAAWtB,EAAA,KAASuB,IACpBhB,KAAAQ,OACAS,GAAAT,OACAU,cAAAJ,QACAP,KAAUd,EAAA,KAAS0B,OAAAC,IAAA,YACnBC,UAAAP,SAEAQ,OAAA,CACAC,qBAAA,CAA2BjB,QAAA,WAC3B,eAGAkB,QAAA,CACAC,aAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAE,OAAAjB,QACAkB,KAAAC,MAAA,QAAAH,GACAE,KAAAC,MAAA,SAAAJ,IAEAK,MAAA,WACAF,KAAAG,MAAAC,WAAAF,SAEAG,KAAA,WACAL,KAAAG,MAAAC,WAAAC,SAIAC,OAAA,WACA,IACAC,EADAC,EAAAR,KAGAS,EAAAC,UAAA,GACAC,EAAAX,KAAAN,qBACAkB,EAAAZ,KAAAY,WACAC,EAAAb,KAAAa,OAEAtC,EAAgBuC,OAAA9C,EAAA,KAAA8C,CAAcd,MAC9Be,EAAAF,EAAA,WAEAG,EAAAJ,EAAAK,WACAA,OAAAC,IAAAF,EAAA/C,EAAA+C,EACAG,EAAAP,EAAAQ,WACAA,OAAAF,IAAAC,EAAAlD,EAAAkD,EACAE,EAAwB1D,IAAwBiD,EAAA,6BAEhDpC,EAAAD,EAAAC,UACAa,EAAAd,EAAAc,cACAiC,EAAoB3D,IAAwBY,EAAA,+BAE5CgD,EAAA,CACAhD,MAAad,IAAQ,GAAG6D,EAAA,CAAc9C,cACtCgD,GAAAH,EACAI,MAAaX,OAAA9C,EAAA,KAAA8C,CAAQd,OAErBW,GACAY,EAAAC,GAAAE,OAAA,WACA,QAAAC,EAAAjB,UAAAkB,OAAAC,EAAAC,MAAAH,GAAAI,EAAA,EAAuEA,EAAAJ,EAAaI,IACpFF,EAAAE,GAAArB,UAAAqB,GAGAvB,EAAAP,MAAA+B,MAAAxB,EAAA,WAAAyB,OAAAJ,IACAlB,EAAAuB,aAAA,CAAoCC,MAAApB,EAAA7B,MAAAX,EAAAW,SAEpCqC,EAAAhD,MAAAO,SAAA,IAAA6B,EAAAyB,OAAAC,QAAA9D,EAAAW,OACAqC,EAAAhD,MAAAQ,SAAAR,EAAAQ,UAAA4B,EAAA5B,UAEAwC,EAAAC,GAAAE,OAAA1B,KAAAJ,aAEA,IAAA0C,EAAsBxE,KAAUyC,EAAA,GAAoBhD,IAAegD,EAAA/B,EAAA,eAA6CjB,IAAegD,EAAA/B,EAAA,mBAAA+C,EAAAhD,MAAAO,SAA4EvB,IAAegD,EAAA/B,EAAA,oBAAA+C,EAAAhD,MAAAQ,UAAAwB,IAC1NgC,EAAwBzE,IAAWP,IAAe,GAAGiB,EAAA,iBAAAa,IACrD,OAAAoB,EACA,QACA,CAAO+B,MAAAF,EAAAd,GAAA,CACPP,aACAG,eAGA,CAAAX,EAAS1C,EAAA,KAAYX,IAAc,CAAAmE,EAAA,CAAkBiB,MAAAD,EAAAE,IAAA,sBAA4CvB,IAAAH,GAAAN,EAAA,QAAAM","file":"js/chunk-vendors~04b60ec4.0ce40c52.js","sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport PropTypes from '../_util/vue-types';\nimport classNames from 'classnames';\nimport VcCheckbox from '../vc-checkbox';\nimport { getOptionProps, getAttrs } from '../_util/props-util';\nfunction noop() {}\n\nexport default {\n  name: 'ACheckbox',\n  inheritAttrs: false,\n  model: {\n    prop: 'checked'\n  },\n  props: {\n    prefixCls: {\n      'default': 'ant-checkbox',\n      type: String\n    },\n    defaultChecked: PropTypes.bool,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    isGroup: Boolean,\n    value: PropTypes.any,\n    name: String,\n    id: String,\n    indeterminate: Boolean,\n    type: PropTypes.string.def('checkbox'),\n    autoFocus: Boolean\n  },\n  inject: {\n    checkboxGroupContext: { 'default': function _default() {\n        return null;\n      } }\n  },\n  methods: {\n    handleChange: function handleChange(event) {\n      var targetChecked = event.target.checked;\n      this.$emit('input', targetChecked);\n      this.$emit('change', event);\n    },\n    focus: function focus() {\n      this.$refs.vcCheckbox.focus();\n    },\n    blur: function blur() {\n      this.$refs.vcCheckbox.blur();\n    }\n  },\n\n  render: function render() {\n    var _this = this,\n        _classNames;\n\n    var h = arguments[0];\n    var checkboxGroup = this.checkboxGroupContext,\n        $listeners = this.$listeners,\n        $slots = this.$slots;\n\n    var props = getOptionProps(this);\n    var children = $slots['default'];\n\n    var _$listeners$mouseente = $listeners.mouseenter,\n        mouseenter = _$listeners$mouseente === undefined ? noop : _$listeners$mouseente,\n        _$listeners$mouseleav = $listeners.mouseleave,\n        mouseleave = _$listeners$mouseleav === undefined ? noop : _$listeners$mouseleav,\n        restListeners = _objectWithoutProperties($listeners, ['mouseenter', 'mouseleave']);\n\n    var prefixCls = props.prefixCls,\n        indeterminate = props.indeterminate,\n        restProps = _objectWithoutProperties(props, ['prefixCls', 'indeterminate']);\n\n    var checkboxProps = {\n      props: _extends({}, restProps, { prefixCls: prefixCls }),\n      on: restListeners,\n      attrs: getAttrs(this)\n    };\n    if (checkboxGroup) {\n      checkboxProps.on.change = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.$emit.apply(_this, ['change'].concat(args));\n        checkboxGroup.toggleOption({ label: children, value: props.value });\n      };\n      checkboxProps.props.checked = checkboxGroup.sValue.indexOf(props.value) !== -1;\n      checkboxProps.props.disabled = props.disabled || checkboxGroup.disabled;\n    } else {\n      checkboxProps.on.change = this.handleChange;\n    }\n    var classString = classNames((_classNames = {}, _defineProperty(_classNames, prefixCls + '-wrapper', true), _defineProperty(_classNames, prefixCls + '-wrapper-checked', checkboxProps.props.checked), _defineProperty(_classNames, prefixCls + '-wrapper-disabled', checkboxProps.props.disabled), _classNames));\n    var checkboxClass = classNames(_defineProperty({}, prefixCls + '-indeterminate', indeterminate));\n    return h(\n      'label',\n      { 'class': classString, on: {\n          'mouseenter': mouseenter,\n          'mouseleave': mouseleave\n        }\n      },\n      [h(VcCheckbox, _mergeJSXProps([checkboxProps, { 'class': checkboxClass, ref: 'vcCheckbox' }])), children !== undefined && h('span', [children])]\n    );\n  }\n};"],"sourceRoot":""}