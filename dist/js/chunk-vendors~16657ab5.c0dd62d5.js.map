{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_to-primitive.js"],"names":["isObject","__webpack_require__","module","exports","it","S","fn","val","toString","call","valueOf","TypeError"],"mappings":"6GACA,IAAAA,EAAeC,EAAQ,QAGvBC,EAAAC,QAAA,SAAAC,EAAAC,GACA,IAAAL,EAAAI,GAAA,OAAAA,EACA,IAAAE,EAAAC,EACA,GAAAF,GAAA,mBAAAC,EAAAF,EAAAI,YAAAR,EAAAO,EAAAD,EAAAG,KAAAL,IAAA,OAAAG,EACA,sBAAAD,EAAAF,EAAAM,WAAAV,EAAAO,EAAAD,EAAAG,KAAAL,IAAA,OAAAG,EACA,IAAAF,GAAA,mBAAAC,EAAAF,EAAAI,YAAAR,EAAAO,EAAAD,EAAAG,KAAAL,IAAA,OAAAG,EACA,MAAAI,UAAA","file":"js/chunk-vendors~16657ab5.c0dd62d5.js","sourcesContent":["// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n"],"sourceRoot":""}