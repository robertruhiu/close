{"version":3,"sources":["webpack:///./node_modules/youtube-player/dist/index.js"],"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","_sister","__webpack_require__","_sister2","_interopRequireDefault","_loadYouTubeIframeApi","_loadYouTubeIframeApi2","_YouTubePlayer","_YouTubePlayer2","__esModule","default","youtubeIframeAPI","maybeElementId","options","arguments","length","undefined","strictState","emitter","events","Error","document","getElementById","proxyEvents","playerAPIReady","Promise","resolve","playVideo","Function","player","then","YT","Player","on","playerApi","promisifyPlayer","off","module"],"mappings":"0HAEAA,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAGA,IAAAC,EAAA,oBAAAC,QAAA,kBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,oBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,gBAAAF,GAE5IG,EAAcC,EAAQ,QAEtBC,EAAAC,EAAAH,GAEAI,EAA4BH,EAAQ,QAEpCI,EAAAF,EAAAC,GAEAE,EAAqBL,EAAQ,QAE7BM,EAAAJ,EAAAG,GAEA,SAAAH,EAAAN,GAAsC,OAAAA,KAAAW,WAAAX,EAAA,CAAuCY,QAAAZ,GAU7E,IAAAa,OAAA,EAaAlB,EAAAiB,QAAA,SAAAE,GACA,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MACAG,EAAAH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAEAI,GAAA,EAAAf,EAAAO,WAMA,GAJAC,IACAA,GAAA,EAAAL,EAAAI,SAAAQ,IAGAL,EAAAM,OACA,UAAAC,MAAA,yCAGA,qBAAAR,IAAAS,SAAAC,eAAAV,GACA,UAAAQ,MAAA,YAAAR,EAAA,qBAGAC,EAAAM,OAAAX,EAAAE,QAAAa,YAAAL,GAEA,IAAAM,EAAA,IAAAC,QAAA,SAAAC,GACA,oCAAAd,EAAA,YAAAjB,EAAAiB,OAAAe,qBAAAC,SAAA,CACA,IAAAC,EAAAjB,EAEAc,EAAAG,QAIAlB,EAAAmB,KAAA,SAAAC,GAEA,IAAAF,EAAA,IAAAE,EAAAC,OAAApB,EAAAC,GAMA,OAJAK,EAAAe,GAAA,mBACAP,EAAAG,KAGA,SAKAK,EAAA1B,EAAAE,QAAAyB,gBAAAX,EAAAP,GAKA,OAHAiB,EAAAD,GAAAf,EAAAe,GACAC,EAAAE,IAAAlB,EAAAkB,IAEAF,GAGAG,EAAA5C,UAAA","file":"js/chunk-vendors~8685c95a.dfa9029b.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _sister = require('sister');\n\nvar _sister2 = _interopRequireDefault(_sister);\n\nvar _loadYouTubeIframeApi = require('./loadYouTubeIframeApi');\n\nvar _loadYouTubeIframeApi2 = _interopRequireDefault(_loadYouTubeIframeApi);\n\nvar _YouTubePlayer = require('./YouTubePlayer');\n\nvar _YouTubePlayer2 = _interopRequireDefault(_YouTubePlayer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @typedef YT.Player\n * @see https://developers.google.com/youtube/iframe_api_reference\n * */\n\n/**\n * @see https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\n */\nvar youtubeIframeAPI = void 0;\n\n/**\n * A factory function used to produce an instance of YT.Player and queue function calls and proxy events of the resulting object.\n *\n * @param maybeElementId Either An existing YT.Player instance,\n * the DOM element or the id of the HTML element where the API will insert an <iframe>.\n * @param options See `options` (Ignored when using an existing YT.Player instance).\n * @param strictState A flag designating whether or not to wait for\n * an acceptable state when calling supported functions. Default: `false`.\n * See `FunctionStateMap.js` for supported functions and acceptable states.\n */\n\nexports.default = function (maybeElementId) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var strictState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var emitter = (0, _sister2.default)();\n\n  if (!youtubeIframeAPI) {\n    youtubeIframeAPI = (0, _loadYouTubeIframeApi2.default)(emitter);\n  }\n\n  if (options.events) {\n    throw new Error('Event handlers cannot be overwritten.');\n  }\n\n  if (typeof maybeElementId === 'string' && !document.getElementById(maybeElementId)) {\n    throw new Error('Element \"' + maybeElementId + '\" does not exist.');\n  }\n\n  options.events = _YouTubePlayer2.default.proxyEvents(emitter);\n\n  var playerAPIReady = new Promise(function (resolve) {\n    if ((typeof maybeElementId === 'undefined' ? 'undefined' : _typeof(maybeElementId)) === 'object' && maybeElementId.playVideo instanceof Function) {\n      var player = maybeElementId;\n\n      resolve(player);\n    } else {\n      // asume maybeElementId can be rendered inside\n      // eslint-disable-next-line promise/catch-or-return\n      youtubeIframeAPI.then(function (YT) {\n        // eslint-disable-line promise/prefer-await-to-then\n        var player = new YT.Player(maybeElementId, options);\n\n        emitter.on('ready', function () {\n          resolve(player);\n        });\n\n        return null;\n      });\n    }\n  });\n\n  var playerApi = _YouTubePlayer2.default.promisifyPlayer(playerAPIReady, strictState);\n\n  playerApi.on = emitter.on;\n  playerApi.off = emitter.off;\n\n  return playerApi;\n};\n\nmodule.exports = exports['default'];"],"sourceRoot":""}