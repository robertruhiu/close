{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/input/TextArea.js"],"names":["babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2___default","omit_js__WEBPACK_IMPORTED_MODULE_3__","resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_4__","_inputProps__WEBPACK_IMPORTED_MODULE_5__","_calculateNodeHeight__WEBPACK_IMPORTED_MODULE_6__","_util_props_util__WEBPACK_IMPORTED_MODULE_7__","onNextFrame","cb","window","requestAnimationFrame","setTimeout","clearNextFrameAction","nextFrameId","cancelAnimationFrame","clearTimeout","fixControlledValue","value","noop","__webpack_exports__","name","model","prop","event","props","autosize","Object","Boolean","data","_$props","this","$props","defaultValue","stateValue","nextFrameActionId","undefined","textareaStyles","computed","watch","val","_this","$nextTick","resizeOnNextFrame","$refs","textArea","mounted","_this2","resizeTextarea","updateResizeObserverHook","autoFocus","focus","updated","beforeDestroy","resizeObserver","disconnect","methods","observe","handleKeyDown","e","keyCode","$emit","minRows","maxRows","getTextAreaClassName","_ref","_$props2","prefixCls","disabled","handleTextareaChange","$forceUpdate","target","composing","blur","render","h","arguments","$attrs","$listeners","otherProps","textareaProps","attrs","on","keydown","input","change","directives","domProps","class","style","ref"],"mappings":"0HAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,QAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,QAAAM,EAAAN,EAAAE,EAAAG,GAAAE,EAAAP,EAAA,QAAAQ,EAAAR,EAAA,QAAAS,EAAAT,EAAA,QAAAU,EAAAV,EAAA,QAAAW,EAAAX,EAAA,QASA,SAAAY,EAAAC,GACA,OAAAC,OAAAC,sBACAD,OAAAC,sBAAAF,GAEAC,OAAAE,WAAAH,EAAA,GAGA,SAAAI,EAAAC,GACAJ,OAAAK,qBACAL,OAAAK,qBAAAD,GAEAJ,OAAAM,aAAAF,GAGA,SAAAG,EAAAC,GACA,2BAAAA,GAAA,OAAAA,EACA,GAEAA,EAEA,SAAAC,KAEeC,EAAA,MACfC,KAAA,YACAC,MAAA,CACAC,KAAA,QACAC,MAAA,gBAEAC,MAASvB,IAAQ,GAAKG,EAAA,KAAU,CAChCqB,SAAA,CAAAC,OAAAC,WAEAC,KAAA,WACA,IAAAC,EAAAC,KAAAC,OACAd,EAAAY,EAAAZ,MACAe,EAAAH,EAAAG,aAEA,OACAC,WAAAjB,EAAsCU,OAAApB,EAAA,KAAAoB,CAAOI,KAAA,SAAAb,EAAAe,GAC7CE,uBAAAC,EACAC,eAAA,KAIAC,SAAA,GACAC,MAAA,CACArB,MAAA,SAAAsB,GACA,IAAAC,EAAAV,KAEAA,KAAAW,UAAA,WACAD,EAAAE,sBAEAZ,KAAAG,WAAAjB,EAAAuB,IAEAd,SAAA,SAAAc,IACAA,GAAAT,KAAAa,MAAAC,WACAd,KAAAM,eAA8BV,OAAAxB,EAAA,KAAAwB,CAAII,KAAAM,eAAA,kBAIlCS,QAAA,WACA,IAAAC,EAAAhB,KAEAA,KAAAW,UAAA,WACAK,EAAAC,iBACAD,EAAAE,2BACAF,EAAAG,WACAH,EAAAI,WAIAC,QAAA,WACArB,KAAAkB,4BAEAI,cAAA,WACAtB,KAAAuB,gBACAvB,KAAAuB,eAAAC,cAIAC,QAAA,CACAb,kBAAA,WACAZ,KAAAI,mBACAtB,EAAAkB,KAAAI,mBAEAJ,KAAAI,kBAAA3B,EAAAuB,KAAAiB,iBAIAC,yBAAA,YACAlB,KAAAuB,gBAAAvB,KAAAC,OAAAN,UAEAK,KAAAuB,eAAA,IAAkClD,EAAA,KAAc2B,KAAAY,mBAChDZ,KAAAuB,eAAAG,QAAA1B,KAAAa,MAAAC,WACOd,KAAAuB,iBAAAvB,KAAAC,OAAAN,WAEPK,KAAAuB,eAAAC,aACAxB,KAAAuB,eAAA,OAGAI,cAAA,SAAAC,GACA,KAAAA,EAAAC,SACA7B,KAAA8B,MAAA,aAAAF,GAEA5B,KAAA8B,MAAA,UAAAF,IAEAX,eAAA,WACA,IAAAtB,EAAAK,KAAAC,OAAAN,SAEA,GAAAA,GAAAK,KAAAa,MAAAC,SAAA,CAGA,IAAAiB,EAAApC,IAAAoC,QAAA,KACAC,EAAArC,IAAAqC,QAAA,KACA1B,EAA2BV,OAAArB,EAAA,KAAAqB,CAAmBI,KAAAa,MAAAC,UAAA,EAAAiB,EAAAC,GAC9ChC,KAAAM,mBAEA2B,qBAAA,WACA,IAAAC,EAEAC,EAAAnC,KAAAC,OACAmC,EAAAD,EAAAC,UACAC,EAAAF,EAAAE,SAEA,OAAAH,EAAA,GAAwBjE,IAAeiE,EAAAE,GAAA,GAAyBnE,IAAeiE,EAAAE,EAAA,YAAAC,GAAAH,GAE/EI,qBAAA,SAAAV,GACWhC,OAAApB,EAAA,KAAAoB,CAAOI,KAAA,SAIlBA,KAAAuC,gBAHAvC,KAAAG,WAAAyB,EAAAY,OAAArD,MACAa,KAAAiB,kBAIAW,EAAAY,OAAAC,WACAzC,KAAA8B,MAAA,eAAAF,EAAAY,OAAArD,OAEAa,KAAA8B,MAAA,SAAAF,GACA5B,KAAA8B,MAAA,QAAAF,IAEAR,MAAA,WACApB,KAAAa,MAAAC,SAAAM,SAEAsB,KAAA,WACA1C,KAAAa,MAAAC,SAAA4B,SAGAC,OAAA,WACA,IAAAC,EAAAC,UAAA,GACA1C,EAAAH,KAAAG,WACA8B,EAAAjC,KAAAiC,qBACAN,EAAA3B,KAAA2B,cACAW,EAAAtC,KAAAsC,qBACAhC,EAAAN,KAAAM,eACAwC,EAAA9C,KAAA8C,OACAC,EAAA/C,KAAA+C,WAEAC,EAAqBpD,OAAAxB,EAAA,KAAAwB,CAAII,KAAAC,OAAA,wDACzBgD,EAAA,CACAC,MAAa/E,IAAQ,GAAG6E,EAAAF,GACxBK,GAAUhF,IAAQ,GAAG4E,EAAA,CACrBK,QAAAzB,EACA0B,MAAAf,EACAgB,OAAAlE,KAMA,OAHA2D,EAAA,kBACAE,EAAAM,WAAA,EAAmCjE,KAAA,eAEnCsD,EAAA,WAAyB9E,IAAc,CAAAmF,EAAA,CACvCO,SAAA,CACArE,MAAAgB,GAGAsD,MAAAxB,IACAyB,MAAApD,EACAqD,IAAA","file":"js/chunk-vendors~b31587eb.4f6ffeb9.js","sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport omit from 'omit.js';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport inputProps from './inputProps';\nimport calculateNodeHeight from './calculateNodeHeight';\nimport hasProp from '../_util/props-util';\n\nfunction onNextFrame(cb) {\n  if (window.requestAnimationFrame) {\n    return window.requestAnimationFrame(cb);\n  }\n  return window.setTimeout(cb, 1);\n}\n\nfunction clearNextFrameAction(nextFrameId) {\n  if (window.cancelAnimationFrame) {\n    window.cancelAnimationFrame(nextFrameId);\n  } else {\n    window.clearTimeout(nextFrameId);\n  }\n}\nfunction fixControlledValue(value) {\n  if (typeof value === 'undefined' || value === null) {\n    return '';\n  }\n  return value;\n}\nfunction noop() {}\n\nexport default {\n  name: 'ATextarea',\n  model: {\n    prop: 'value',\n    event: 'change.value'\n  },\n  props: _extends({}, inputProps, {\n    autosize: [Object, Boolean]\n  }),\n  data: function data() {\n    var _$props = this.$props,\n        value = _$props.value,\n        defaultValue = _$props.defaultValue;\n\n    return {\n      stateValue: fixControlledValue(!hasProp(this, 'value') ? defaultValue : value),\n      nextFrameActionId: undefined,\n      textareaStyles: {}\n    };\n  },\n\n  computed: {},\n  watch: {\n    value: function value(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.resizeOnNextFrame();\n      });\n      this.stateValue = fixControlledValue(val);\n    },\n    autosize: function autosize(val) {\n      if (!val && this.$refs.textArea) {\n        this.textareaStyles = omit(this.textareaStyles, ['overflowY']);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      _this2.resizeTextarea();\n      _this2.updateResizeObserverHook();\n      if (_this2.autoFocus) {\n        _this2.focus();\n      }\n    });\n  },\n  updated: function updated() {\n    this.updateResizeObserverHook();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n  },\n\n  methods: {\n    resizeOnNextFrame: function resizeOnNextFrame() {\n      if (this.nextFrameActionId) {\n        clearNextFrameAction(this.nextFrameActionId);\n      }\n      this.nextFrameActionId = onNextFrame(this.resizeTextarea);\n    },\n\n    // We will update hooks if `autosize` prop change\n    updateResizeObserverHook: function updateResizeObserverHook() {\n      if (!this.resizeObserver && this.$props.autosize) {\n        // Add resize observer\n        this.resizeObserver = new ResizeObserver(this.resizeOnNextFrame);\n        this.resizeObserver.observe(this.$refs.textArea);\n      } else if (this.resizeObserver && !this.$props.autosize) {\n        // Remove resize observer\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    },\n    handleKeyDown: function handleKeyDown(e) {\n      if (e.keyCode === 13) {\n        this.$emit('pressEnter', e);\n      }\n      this.$emit('keydown', e);\n    },\n    resizeTextarea: function resizeTextarea() {\n      var autosize = this.$props.autosize;\n\n      if (!autosize || !this.$refs.textArea) {\n        return;\n      }\n      var minRows = autosize ? autosize.minRows : null;\n      var maxRows = autosize ? autosize.maxRows : null;\n      var textareaStyles = calculateNodeHeight(this.$refs.textArea, false, minRows, maxRows);\n      this.textareaStyles = textareaStyles;\n    },\n    getTextAreaClassName: function getTextAreaClassName() {\n      var _ref;\n\n      var _$props2 = this.$props,\n          prefixCls = _$props2.prefixCls,\n          disabled = _$props2.disabled;\n\n      return _ref = {}, _defineProperty(_ref, prefixCls, true), _defineProperty(_ref, prefixCls + '-disabled', disabled), _ref;\n    },\n    handleTextareaChange: function handleTextareaChange(e) {\n      if (!hasProp(this, 'value')) {\n        this.stateValue = e.target.value;\n        this.resizeTextarea();\n      } else {\n        this.$forceUpdate();\n      }\n      if (!e.target.composing) {\n        this.$emit('change.value', e.target.value);\n      }\n      this.$emit('change', e);\n      this.$emit('input', e);\n    },\n    focus: function focus() {\n      this.$refs.textArea.focus();\n    },\n    blur: function blur() {\n      this.$refs.textArea.blur();\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var stateValue = this.stateValue,\n        getTextAreaClassName = this.getTextAreaClassName,\n        handleKeyDown = this.handleKeyDown,\n        handleTextareaChange = this.handleTextareaChange,\n        textareaStyles = this.textareaStyles,\n        $attrs = this.$attrs,\n        $listeners = this.$listeners;\n\n    var otherProps = omit(this.$props, ['prefixCls', 'autosize', 'type', 'value', 'defaultValue']);\n    var textareaProps = {\n      attrs: _extends({}, otherProps, $attrs),\n      on: _extends({}, $listeners, {\n        keydown: handleKeyDown,\n        input: handleTextareaChange,\n        change: noop\n      })\n    };\n    if ($listeners['change.value']) {\n      textareaProps.directives = [{ name: 'ant-input' }];\n    }\n    return h('textarea', _mergeJSXProps([textareaProps, {\n      domProps: {\n        'value': stateValue\n      },\n\n      'class': getTextAreaClassName(),\n      style: textareaStyles,\n      ref: 'textArea'\n    }]));\n  }\n};"],"sourceRoot":""}