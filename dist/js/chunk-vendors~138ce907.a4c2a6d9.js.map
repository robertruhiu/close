{"version":3,"sources":["webpack:///./node_modules/lodash/_baseIsMatch.js"],"names":["Stack","__webpack_require__","baseIsEqual","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseIsMatch","object","source","matchData","customizer","index","length","noCustomizer","Object","data","key","objValue","srcValue","undefined","stack","result","module","exports"],"mappings":"6GAAA,IAAAA,EAAYC,EAAQ,QACpBC,EAAkBD,EAAQ,QAG1BE,EAAA,EACAC,EAAA,EAYA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAG,OACAA,EAAAD,EACAE,GAAAH,EAEA,SAAAH,EACA,OAAAK,EAEAL,EAAAO,OAAAP,GACA,MAAAI,IAAA,CACA,IAAAI,EAAAN,EAAAE,GACA,GAAAE,GAAAE,EAAA,GACAA,EAAA,KAAAR,EAAAQ,EAAA,MACAA,EAAA,KAAAR,GAEA,SAGA,QAAAI,EAAAC,EAAA,CACAG,EAAAN,EAAAE,GACA,IAAAK,EAAAD,EAAA,GACAE,EAAAV,EAAAS,GACAE,EAAAH,EAAA,GAEA,GAAAF,GAAAE,EAAA,IACA,QAAAI,IAAAF,KAAAD,KAAAT,GACA,aAEK,CACL,IAAAa,EAAA,IAAAnB,EACA,GAAAS,EACA,IAAAW,EAAAX,EAAAO,EAAAC,EAAAF,EAAAT,EAAAC,EAAAY,GAEA,UAAAD,IAAAE,EACAlB,EAAAe,EAAAD,EAAAb,EAAAC,EAAAK,EAAAU,GACAC,GAEA,UAIA,SAGAC,EAAAC,QAAAjB","file":"js/chunk-vendors~138ce907.a4c2a6d9.js","sourcesContent":["var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n"],"sourceRoot":""}