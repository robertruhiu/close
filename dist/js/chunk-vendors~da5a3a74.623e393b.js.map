{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/button/button.js"],"names":["babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default","_util_wave__WEBPACK_IMPORTED_MODULE_3__","_icon__WEBPACK_IMPORTED_MODULE_4__","_buttonTypes__WEBPACK_IMPORTED_MODULE_5__","_util_props_util__WEBPACK_IMPORTED_MODULE_6__","rxTwoCNChar","isTwoCNChar","test","bind","props","Object","__webpack_exports__","name","inheritAttrs","__ANT_BUTTON","data","sizeMap","large","small","sLoading","this","loading","hasTwoCNChar","computed","classes","_ref","prefixCls","type","shape","size","ghost","block","icon","$slots","sizeCls","children","watch","val","_this","clearTimeout","delayTimeout","delay","setTimeout","mounted","fixTwoCNChar","updated","beforeDestroy","methods","node","$refs","buttonNode","buttonText","textContent","innerText","isNeedInserted","handleClick","event","$data","$emit","insertSpace","child","needInserted","h","$createElement","SPACE","text","trim","split","join","length","render","_this2","arguments","htmlType","disabled","$attrs","$listeners","buttonProps","attrs","class","on","click","iconType","iconNode","kids","map","undefined","href","ref"],"mappings":"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","file":"js/chunk-vendors~da5a3a74.623e393b.js","sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport Wave from '../_util/wave';\nimport Icon from '../icon';\nvar rxTwoCNChar = /^[\\u4e00-\\u9fa5]{2}$/;\nvar isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\nimport buttonTypes from './buttonTypes';\nimport { filterEmpty } from '../_util/props-util';\nvar props = buttonTypes();\nexport default {\n  name: 'AButton',\n  inheritAttrs: false,\n  __ANT_BUTTON: true,\n  props: props,\n  data: function data() {\n    return {\n      sizeMap: {\n        large: 'lg',\n        small: 'sm'\n      },\n      // clicked: false,\n      sLoading: !!this.loading,\n      hasTwoCNChar: false\n    };\n  },\n\n  computed: {\n    classes: function classes() {\n      var _ref;\n\n      var prefixCls = this.prefixCls,\n          type = this.type,\n          shape = this.shape,\n          size = this.size,\n          hasTwoCNChar = this.hasTwoCNChar,\n          sLoading = this.sLoading,\n          ghost = this.ghost,\n          block = this.block,\n          sizeMap = this.sizeMap,\n          icon = this.icon,\n          $slots = this.$slots;\n\n      var sizeCls = sizeMap[size] || '';\n      var children = filterEmpty($slots['default']);\n      return _ref = {}, _defineProperty(_ref, '' + prefixCls, true), _defineProperty(_ref, prefixCls + '-' + type, type), _defineProperty(_ref, prefixCls + '-' + shape, shape), _defineProperty(_ref, prefixCls + '-' + sizeCls, sizeCls), _defineProperty(_ref, prefixCls + '-icon-only', !children && children !== 0 && icon), _defineProperty(_ref, prefixCls + '-loading', sLoading), _defineProperty(_ref, prefixCls + '-background-ghost', ghost || type === 'ghost'), _defineProperty(_ref, prefixCls + '-two-chinese-chars', hasTwoCNChar), _defineProperty(_ref, prefixCls + '-block', block), _ref;\n    }\n  },\n  watch: {\n    loading: function loading(val) {\n      var _this = this;\n\n      clearTimeout(this.delayTimeout);\n      if (typeof val !== 'boolean' && val && val.delay) {\n        this.delayTimeout = setTimeout(function () {\n          _this.sLoading = !!val;\n        }, val.delay);\n      } else {\n        this.sLoading = !!val;\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.fixTwoCNChar();\n  },\n  updated: function updated() {\n    this.fixTwoCNChar();\n  },\n  beforeDestroy: function beforeDestroy() {\n    // if (this.timeout) {\n    //   clearTimeout(this.timeout)\n    // }\n    if (this.delayTimeout) {\n      clearTimeout(this.delayTimeout);\n    }\n  },\n\n  methods: {\n    fixTwoCNChar: function fixTwoCNChar() {\n      // Fix for HOC usage like <FormatMessage />\n      var node = this.$refs.buttonNode;\n      if (!node) {\n        return;\n      }\n      var buttonText = node.textContent || node.innerText;\n      if (this.isNeedInserted() && isTwoCNChar(buttonText)) {\n        if (!this.hasTwoCNChar) {\n          this.hasTwoCNChar = true;\n        }\n      } else if (this.hasTwoCNChar) {\n        this.hasTwoCNChar = false;\n      }\n    },\n    handleClick: function handleClick(event) {\n      var sLoading = this.$data.sLoading;\n\n      if (sLoading) {\n        return;\n      }\n      this.$emit('click', event);\n    },\n    insertSpace: function insertSpace(child, needInserted) {\n      var h = this.$createElement;\n\n      var SPACE = needInserted ? ' ' : '';\n      if (typeof child.text === 'string') {\n        var text = child.text.trim();\n        if (isTwoCNChar(text)) {\n          text = text.split('').join(SPACE);\n        }\n        return h('span', [text]);\n      }\n      return child;\n    },\n    isNeedInserted: function isNeedInserted() {\n      var icon = this.icon,\n          $slots = this.$slots;\n\n      return $slots['default'] && $slots['default'].length === 1 && !icon;\n    }\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var h = arguments[0];\n    var htmlType = this.htmlType,\n        classes = this.classes,\n        icon = this.icon,\n        disabled = this.disabled,\n        handleClick = this.handleClick,\n        sLoading = this.sLoading,\n        $slots = this.$slots,\n        $attrs = this.$attrs,\n        $listeners = this.$listeners;\n\n    var buttonProps = {\n      attrs: _extends({}, $attrs, {\n        disabled: disabled\n      }),\n      'class': classes,\n      on: _extends({}, $listeners, {\n        click: handleClick\n      })\n    };\n    var iconType = sLoading ? 'loading' : icon;\n    var iconNode = iconType ? h(Icon, {\n      attrs: { type: iconType }\n    }) : null;\n    var children = filterEmpty($slots['default']);\n    var kids = children.map(function (child) {\n      return _this2.insertSpace(child, _this2.isNeedInserted());\n    });\n\n    if ($attrs.href !== undefined) {\n      return h(\n        'a',\n        _mergeJSXProps([buttonProps, { ref: 'buttonNode' }]),\n        [iconNode, kids]\n      );\n    } else {\n      return h(Wave, [h(\n        'button',\n        _mergeJSXProps([buttonProps, { ref: 'buttonNode', attrs: { type: htmlType || 'button' }\n        }]),\n        [iconNode, kids]\n      )]);\n    }\n  }\n};"],"sourceRoot":""}