{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-table/src/TableHeader.js"],"names":["_util_vue_types__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_TableHeaderRow__WEBPACK_IMPORTED_MODULE_1__","getHeaderRows","columns","currentRow","arguments","length","undefined","rows","forEach","column","rowSpan","push","cell","key","className","children","title","colSpan","filter","row","__webpack_exports__","name","props","fixed","string","array","isRequired","expander","object","inject","table","default","render","h","_table","this","components","sComponents","prefixCls","showHeader","customHeaderRow","renderExpandIndentCell","HeaderWrapper","header","wrapper","class","map","index","attrs"],"mappings":"yHAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAA,QAGA,SAAAE,EAAAC,GACA,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,KACAG,EAAAH,UAAA,GA8BA,OA5BAG,KAAA,GACAA,EAAAJ,GAAAI,EAAAJ,IAAA,GAEAD,EAAAM,QAAA,SAAAC,GACA,GAAAA,EAAAC,SAAAH,EAAAF,OAAAI,EAAAC,QACA,MAAAH,EAAAF,OAAAI,EAAAC,QACAH,EAAAI,KAAA,IAGA,IAAAC,EAAA,CACAC,IAAAJ,EAAAI,IACAC,UAAAL,EAAAK,WAAAL,EAAA,aACAM,SAAAN,EAAAO,MACAP,UAEAA,EAAAM,UACAd,EAAAQ,EAAAM,SAAAZ,EAAA,EAAAI,GAEA,YAAAE,IACAG,EAAAK,QAAAR,EAAAQ,SAEA,YAAAR,IACAG,EAAAF,QAAAD,EAAAC,SAEA,IAAAE,EAAAK,SACAV,EAAAJ,GAAAQ,KAAAC,KAGAL,EAAAW,OAAA,SAAAC,GACA,OAAAA,EAAAd,OAAA,IAIee,EAAA,MACfC,KAAA,cACAC,MAAA,CACAC,MAAWzB,EAAA,KAAS0B,OACpBtB,QAAaJ,EAAA,KAAS2B,MAAAC,WACtBC,SAAc7B,EAAA,KAAS8B,OAAAF,YAEvBG,OAAA,CACAC,MAAA,CAAYC,QAAA,WACZ,YAIAC,OAAA,WACA,IAAAC,EAAA7B,UAAA,GACA8B,EAAAC,KAAAL,MACAM,EAAAF,EAAAG,YACAC,EAAAJ,EAAAI,UACAC,EAAAL,EAAAK,WACAC,EAAAN,EAAAM,gBACAb,EAAAQ,KAAAR,SACAzB,EAAAiC,KAAAjC,QACAqB,EAAAY,KAAAZ,MAGA,IAAAgB,EACA,YAGA,IAAAhC,EAAAN,EAAAC,GAEAyB,EAAAc,uBAAAlC,EAAAgB,GAEA,IAAAmB,EAAAN,EAAAO,OAAAC,QAEA,OAAAX,EACAS,EACA,CAAOG,MAAAP,EAAA,UACP,CAAA/B,EAAAuC,IAAA,SAAA3B,EAAA4B,GACA,OAAAd,EAAiBjC,EAAA,KAAc,CAC/BgD,MAAA,CACAV,YAEAS,QACAxB,QACArB,UACAK,OACAY,MACAiB,aACAI,mBAEA3B,IAAAkC","file":"js/chunk-vendors~142c157d.74f6d33e.js","sourcesContent":["import PropTypes from '../../_util/vue-types';\nimport TableHeaderRow from './TableHeaderRow';\n\nfunction getHeaderRows(columns) {\n  var currentRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var rows = arguments[2];\n\n  rows = rows || [];\n  rows[currentRow] = rows[currentRow] || [];\n\n  columns.forEach(function (column) {\n    if (column.rowSpan && rows.length < column.rowSpan) {\n      while (rows.length < column.rowSpan) {\n        rows.push([]);\n      }\n    }\n    var cell = {\n      key: column.key,\n      className: column.className || column['class'] || '',\n      children: column.title,\n      column: column\n    };\n    if (column.children) {\n      getHeaderRows(column.children, currentRow + 1, rows);\n    }\n    if ('colSpan' in column) {\n      cell.colSpan = column.colSpan;\n    }\n    if ('rowSpan' in column) {\n      cell.rowSpan = column.rowSpan;\n    }\n    if (cell.colSpan !== 0) {\n      rows[currentRow].push(cell);\n    }\n  });\n  return rows.filter(function (row) {\n    return row.length > 0;\n  });\n}\n\nexport default {\n  name: 'TableHeader',\n  props: {\n    fixed: PropTypes.string,\n    columns: PropTypes.array.isRequired,\n    expander: PropTypes.object.isRequired\n  },\n  inject: {\n    table: { 'default': function _default() {\n        return {};\n      } }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var _table = this.table,\n        components = _table.sComponents,\n        prefixCls = _table.prefixCls,\n        showHeader = _table.showHeader,\n        customHeaderRow = _table.customHeaderRow;\n    var expander = this.expander,\n        columns = this.columns,\n        fixed = this.fixed;\n\n\n    if (!showHeader) {\n      return null;\n    }\n\n    var rows = getHeaderRows(columns);\n\n    expander.renderExpandIndentCell(rows, fixed);\n\n    var HeaderWrapper = components.header.wrapper;\n\n    return h(\n      HeaderWrapper,\n      { 'class': prefixCls + '-thead' },\n      [rows.map(function (row, index) {\n        return h(TableHeaderRow, {\n          attrs: {\n            prefixCls: prefixCls,\n\n            index: index,\n            fixed: fixed,\n            columns: columns,\n            rows: rows,\n            row: row,\n            components: components,\n            customHeaderRow: customHeaderRow\n          },\n          key: index });\n      })]\n    );\n  }\n};"],"sourceRoot":""}