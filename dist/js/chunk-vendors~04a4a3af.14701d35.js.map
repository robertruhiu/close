{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/modal/ActionButton.js"],"names":["babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","_util_vue_types__WEBPACK_IMPORTED_MODULE_1__","_button__WEBPACK_IMPORTED_MODULE_2__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_3__","_button_buttonTypes__WEBPACK_IMPORTED_MODULE_4__","ButtonType","Object","type","ActionButtonProps","actionFn","func","closeModal","autoFocus","bool","buttonProps","object","__webpack_exports__","mixins","props","data","loading","mounted","_this","this","timeoutId","setTimeout","$el","focus","beforeDestroy","clearTimeout","methods","onClick","_this2","ret","length","then","setState","apply","undefined","arguments","render","h","$slots","attrs","on","click"],"mappings":"wHAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,QAAAI,EAAAJ,EAAA,QAAAK,EAAAL,EAAA,QAAAM,EAAAN,EAAA,QAKAO,EAAiBC,OAAAF,EAAA,KAAAE,GAAWC,KAC5BC,EAAA,CACAD,KAAAF,EACAI,SAAYR,EAAA,KAASS,KACrBC,WAAcV,EAAA,KAASS,KACvBE,UAAaX,EAAA,KAASY,KACtBC,YAAeb,EAAA,KAASc,QAGTC,EAAA,MACfC,OAAA,CAAWd,EAAA,MACXe,MAAAV,EACAW,KAAA,WACA,OACAC,SAAA,IAGAC,QAAA,WACA,IAAAC,EAAAC,KAEAA,KAAAX,YACAW,KAAAC,UAAAC,WAAA,WACA,OAAAH,EAAAI,IAAAC,YAIAC,cAAA,WACAC,aAAAN,KAAAC,YAGAM,QAAA,CACAC,QAAA,WACA,IAAAC,EAAAT,KAEAd,EAAAc,KAAAd,SACAE,EAAAY,KAAAZ,WAEA,GAAAF,EAAA,CACA,IAAAwB,OAAA,EACAxB,EAAAyB,OACAD,EAAAxB,EAAAE,IAEAsB,EAAAxB,IACAwB,GACAtB,KAGAsB,KAAAE,OACAZ,KAAAa,SAAA,CAAyBhB,SAAA,IACzBa,EAAAE,KAAA,WAGAxB,EAAA0B,WAAAC,EAAAC,YACW,WAEXP,EAAAI,SAAA,CAA6BhB,SAAA,YAI7BT,MAKA6B,OAAA,WACA,IAAAC,EAAAF,UAAA,GACAhC,EAAAgB,KAAAhB,KACAmC,EAAAnB,KAAAmB,OACAtB,EAAAG,KAAAH,QACAN,EAAAS,KAAAT,YAEA,OAAA2B,EACMvC,EAAA,KACAH,IAAc,EACpB4C,MAAA,CAAgBpC,OAAAa,WAChBwB,GAAA,CACAC,MAAAtB,KAAAQ,UAEOjB,IACP,CAAA4B,EAAA","file":"js/chunk-vendors~04a4a3af.14701d35.js","sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport PropTypes from '../_util/vue-types';\nimport Button from '../button';\nimport BaseMixin from '../_util/BaseMixin';\nimport buttonTypes from '../button/buttonTypes';\nvar ButtonType = buttonTypes().type;\nvar ActionButtonProps = {\n  type: ButtonType,\n  actionFn: PropTypes.func,\n  closeModal: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  buttonProps: PropTypes.object\n};\n\nexport default {\n  mixins: [BaseMixin],\n  props: ActionButtonProps,\n  data: function data() {\n    return {\n      loading: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.autoFocus) {\n      this.timeoutId = setTimeout(function () {\n        return _this.$el.focus();\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearTimeout(this.timeoutId);\n  },\n\n  methods: {\n    onClick: function onClick() {\n      var _this2 = this;\n\n      var actionFn = this.actionFn,\n          closeModal = this.closeModal;\n\n      if (actionFn) {\n        var ret = void 0;\n        if (actionFn.length) {\n          ret = actionFn(closeModal);\n        } else {\n          ret = actionFn();\n          if (!ret) {\n            closeModal();\n          }\n        }\n        if (ret && ret.then) {\n          this.setState({ loading: true });\n          ret.then(function () {\n            // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n            // this.setState({ loading: false });\n            closeModal.apply(undefined, arguments);\n          }, function () {\n            // See: https://github.com/ant-design/ant-design/issues/6183\n            _this2.setState({ loading: false });\n          });\n        }\n      } else {\n        closeModal();\n      }\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var type = this.type,\n        $slots = this.$slots,\n        loading = this.loading,\n        buttonProps = this.buttonProps;\n\n    return h(\n      Button,\n      _mergeJSXProps([{\n        attrs: { type: type, loading: loading },\n        on: {\n          'click': this.onClick\n        }\n      }, buttonProps]),\n      [$slots['default']]\n    );\n  }\n};"],"sourceRoot":""}