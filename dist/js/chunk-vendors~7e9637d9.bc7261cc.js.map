{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/table/filterDropdown.js"],"names":["babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","_vc_menu__WEBPACK_IMPORTED_MODULE_2__","_vc_menu__WEBPACK_IMPORTED_MODULE_3__","_vc_menu__WEBPACK_IMPORTED_MODULE_4__","dom_closest__WEBPACK_IMPORTED_MODULE_5__","dom_closest__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","shallowequal__WEBPACK_IMPORTED_MODULE_7__","shallowequal__WEBPACK_IMPORTED_MODULE_7___default","_dropdown__WEBPACK_IMPORTED_MODULE_8__","_icon__WEBPACK_IMPORTED_MODULE_9__","_checkbox__WEBPACK_IMPORTED_MODULE_10__","_radio__WEBPACK_IMPORTED_MODULE_11__","_FilterDropdownMenuWrapper__WEBPACK_IMPORTED_MODULE_12__","_interface__WEBPACK_IMPORTED_MODULE_13__","_util_props_util__WEBPACK_IMPORTED_MODULE_14__","_util_vnode__WEBPACK_IMPORTED_MODULE_15__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_16__","stopPropagation","e","__webpack_exports__","name","mixins","props","Object","handleFilter","column","data","visible","this","filterDropdownVisible","preProps","sSelectedKeys","selectedKeys","sKeyPathOfSelectedItem","sVisible","watch","_propsSymbol","nextProps","setNeverShown","newState","keys","length","setState","mounted","_this","$nextTick","methods","getDropdownVisible","neverShown","rootNode","$el","filterBelongToScrollBody","fixed","setSelectedKeys","_ref","setVisible","onFilterDropdownVisibleChange","handleClearFilters","handleConfirm","_this2","confirmFilter2","$forceUpdate","confirmFilter","onVisibleChange","renderMenuItem","item","h","$createElement","$data","multiple","filterMultiple","input","attrs","checked","indexOf","value","toString","key","text","hasSubMenu","_column$filters","filters","undefined","some","children","renderMenus","items","_this3","map","containSelected","subMenuCls","dropdownPrefixCls","title","class","handleMenuItemClick","info","keyPath","keyPathOfSelectedItem","renderFilterIcon","_classNames","locale","prefixCls","filtered","filterIcon","dropdownIconClass","filterTitle","on","click","type","theme","render","_this4","arguments","getPopupContainer","dropdownMenuClass","filterDropdown","Function","confirm","clearFilters","triggerNode","parentNode","menus","select","deselect","filterConfirm","filterReset","trigger","placement","forceRender","visibleChange","slot"],"mappings":"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","file":"js/chunk-vendors~7e9637d9.bc7261cc.js","sourcesContent":["import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport Menu, { SubMenu, Item as MenuItem } from '../vc-menu';\nimport closest from 'dom-closest';\nimport classNames from 'classnames';\nimport shallowequal from 'shallowequal';\nimport Dropdown from '../dropdown';\nimport Icon from '../icon';\nimport Checkbox from '../checkbox';\nimport Radio from '../radio';\nimport FilterDropdownMenuWrapper from './FilterDropdownMenuWrapper';\nimport { FilterMenuProps } from './interface';\nimport { initDefaultProps, getOptionProps } from '../_util/props-util';\nimport { cloneElement } from '../_util/vnode';\nimport BaseMixin from '../_util/BaseMixin';\n\nfunction stopPropagation(e) {\n  e.stopPropagation();\n}\n\nexport default {\n  name: 'FilterMenu',\n  mixins: [BaseMixin],\n  props: initDefaultProps(FilterMenuProps, {\n    handleFilter: function handleFilter() {},\n\n    column: {}\n  }),\n\n  data: function data() {\n    var visible = 'filterDropdownVisible' in this.column ? this.column.filterDropdownVisible : false;\n    this.preProps = _extends({}, getOptionProps(this));\n    return {\n      sSelectedKeys: this.selectedKeys,\n      sKeyPathOfSelectedItem: {}, // 记录所有有选中子菜单的祖先菜单\n      sVisible: visible\n    };\n  },\n\n  watch: {\n    _propsSymbol: function _propsSymbol() {\n      var nextProps = getOptionProps(this);\n      var column = nextProps.column;\n\n      this.setNeverShown(column);\n      var newState = {};\n\n      /**\n       * if the state is visible the component should ignore updates on selectedKeys prop to avoid\n       * that the user selection is lost\n       * this happens frequently when a table is connected on some sort of realtime data\n       * Fixes https://github.com/ant-design/ant-design/issues/10289 and\n       * https://github.com/ant-design/ant-design/issues/10209\n       */\n      if ('selectedKeys' in nextProps && !shallowequal(this.preProps.selectedKeys, nextProps.selectedKeys)) {\n        newState.sSelectedKeys = nextProps.selectedKeys;\n      }\n      if ('filterDropdownVisible' in column) {\n        newState.sVisible = column.filterDropdownVisible;\n      }\n      if (Object.keys(newState).length > 0) {\n        this.setState(newState);\n      }\n      this.preProps = _extends({}, nextProps);\n    }\n  },\n\n  mounted: function mounted() {\n    var _this = this;\n\n    var column = this.column;\n\n    this.$nextTick(function () {\n      _this.setNeverShown(column);\n    });\n  },\n\n  methods: {\n    getDropdownVisible: function getDropdownVisible() {\n      return this.neverShown ? false : this.sVisible;\n    },\n    setNeverShown: function setNeverShown(column) {\n      var rootNode = this.$el;\n      var filterBelongToScrollBody = !!closest(rootNode, '.ant-table-scroll');\n      if (filterBelongToScrollBody) {\n        // When fixed column have filters, there will be two dropdown menus\n        // Filter dropdown menu inside scroll body should never be shown\n        // To fix https://github.com/ant-design/ant-design/issues/5010 and\n        // https://github.com/ant-design/ant-design/issues/7909\n        this.neverShown = !!column.fixed;\n      }\n    },\n    setSelectedKeys: function setSelectedKeys(_ref) {\n      var selectedKeys = _ref.selectedKeys;\n\n      this.setState({ sSelectedKeys: selectedKeys });\n    },\n    setVisible: function setVisible(visible) {\n      var column = this.column;\n\n      if (!('filterDropdownVisible' in column)) {\n        this.setState({ sVisible: visible });\n      }\n      if (column.onFilterDropdownVisibleChange) {\n        column.onFilterDropdownVisibleChange(visible);\n      }\n    },\n    handleClearFilters: function handleClearFilters() {\n      this.setState({\n        sSelectedKeys: []\n      }, this.handleConfirm);\n    },\n    handleConfirm: function handleConfirm() {\n      var _this2 = this;\n\n      this.setVisible(false);\n      this.confirmFilter2();\n      // Call `setSelectedKeys` & `confirm` in the same time will make filter data not up to date\n      // https://github.com/ant-design/ant-design/issues/12284\n      this.$forceUpdate();\n      this.$nextTick(function () {\n        _this2.confirmFilter;\n      });\n    },\n    onVisibleChange: function onVisibleChange(visible) {\n      this.setVisible(visible);\n      if (!visible) {\n        this.confirmFilter2();\n      }\n    },\n    confirmFilter2: function confirmFilter2() {\n      if (!shallowequal(this.sSelectedKeys, this.selectedKeys)) {\n        this.confirmFilter(this.column, this.sSelectedKeys);\n      }\n    },\n    renderMenuItem: function renderMenuItem(item) {\n      var h = this.$createElement;\n      var column = this.column;\n      var selectedKeys = this.$data.sSelectedKeys;\n\n      var multiple = 'filterMultiple' in column ? column.filterMultiple : true;\n      var input = multiple ? h(Checkbox, {\n        attrs: { checked: selectedKeys && selectedKeys.indexOf(item.value.toString()) >= 0 }\n      }) : h(Radio, {\n        attrs: { checked: selectedKeys && selectedKeys.indexOf(item.value.toString()) >= 0 }\n      });\n\n      return h(\n        MenuItem,\n        { key: item.value },\n        [input, h('span', [item.text])]\n      );\n    },\n    hasSubMenu: function hasSubMenu() {\n      var _column$filters = this.column.filters,\n          filters = _column$filters === undefined ? [] : _column$filters;\n\n      return filters.some(function (item) {\n        return !!(item.children && item.children.length > 0);\n      });\n    },\n    renderMenus: function renderMenus(items) {\n      var _this3 = this;\n\n      var h = this.$createElement;\n\n      return items.map(function (item) {\n        if (item.children && item.children.length > 0) {\n          var sKeyPathOfSelectedItem = _this3.sKeyPathOfSelectedItem;\n\n          var containSelected = Object.keys(sKeyPathOfSelectedItem).some(function (key) {\n            return sKeyPathOfSelectedItem[key].indexOf(item.value) >= 0;\n          });\n          var subMenuCls = containSelected ? _this3.dropdownPrefixCls + '-submenu-contain-selected' : '';\n          return h(\n            SubMenu,\n            {\n              attrs: { title: item.text },\n              'class': subMenuCls, key: item.value.toString() },\n            [_this3.renderMenus(item.children)]\n          );\n        }\n        return _this3.renderMenuItem(item);\n      });\n    },\n    handleMenuItemClick: function handleMenuItemClick(info) {\n      var selectedKeys = this.$data.sSelectedKeys;\n\n      if (!info.keyPath || info.keyPath.length <= 1) {\n        return;\n      }\n      var keyPathOfSelectedItem = this.sKeyPathOfSelectedItem;\n      if (selectedKeys && selectedKeys.indexOf(info.key) >= 0) {\n        // deselect SubMenu child\n        delete keyPathOfSelectedItem[info.key];\n      } else {\n        // select SubMenu child\n        keyPathOfSelectedItem[info.key] = info.keyPath;\n      }\n      this.setState({ keyPathOfSelectedItem: keyPathOfSelectedItem });\n    },\n    renderFilterIcon: function renderFilterIcon() {\n      var _classNames;\n\n      var h = this.$createElement;\n      var column = this.column,\n          locale = this.locale,\n          prefixCls = this.prefixCls,\n          selectedKeys = this.selectedKeys;\n\n      var filtered = selectedKeys && selectedKeys.length > 0;\n      var filterIcon = column.filterIcon;\n      if (typeof filterIcon === 'function') {\n        filterIcon = filterIcon(filtered, column);\n      }\n      var dropdownIconClass = classNames((_classNames = {}, _defineProperty(_classNames, prefixCls + '-selected', filtered), _defineProperty(_classNames, prefixCls + '-open', this.getDropdownVisible()), _classNames));\n\n      return filterIcon ? cloneElement(filterIcon, {\n        attrs: {\n          title: locale.filterTitle\n        },\n        on: {\n          click: stopPropagation\n        },\n        'class': classNames(prefixCls + '-icon', dropdownIconClass)\n      }) : h(Icon, {\n        attrs: {\n          title: locale.filterTitle,\n          type: 'filter',\n          theme: 'filled'\n        },\n        'class': dropdownIconClass,\n        on: {\n          'click': stopPropagation\n        }\n      });\n    }\n  },\n\n  render: function render() {\n    var _this4 = this;\n\n    var h = arguments[0];\n    var column = this.column,\n        locale = this.locale,\n        prefixCls = this.prefixCls,\n        dropdownPrefixCls = this.dropdownPrefixCls,\n        getPopupContainer = this.getPopupContainer;\n    // default multiple selection in filter dropdown\n\n    var multiple = 'filterMultiple' in column ? column.filterMultiple : true;\n    var dropdownMenuClass = classNames(_defineProperty({}, dropdownPrefixCls + '-menu-without-submenu', !this.hasSubMenu()));\n    var filterDropdown = column.filterDropdown;\n\n    if (filterDropdown instanceof Function) {\n      filterDropdown = filterDropdown({\n        prefixCls: dropdownPrefixCls + '-custom',\n        setSelectedKeys: function setSelectedKeys(selectedKeys) {\n          return _this4.setSelectedKeys({ selectedKeys: selectedKeys });\n        },\n        selectedKeys: this.sSelectedKeys,\n        confirm: this.handleConfirm,\n        clearFilters: this.handleClearFilters,\n        filters: column.filters,\n        getPopupContainer: function getPopupContainer(triggerNode) {\n          return triggerNode.parentNode;\n        },\n        column: column\n      });\n    }\n\n    var menus = filterDropdown ? h(FilterDropdownMenuWrapper, [filterDropdown]) : h(\n      FilterDropdownMenuWrapper,\n      { 'class': prefixCls + '-dropdown' },\n      [h(\n        Menu,\n        {\n          attrs: {\n            multiple: multiple,\n\n            prefixCls: dropdownPrefixCls + '-menu',\n\n            selectedKeys: this.sSelectedKeys,\n            getPopupContainer: function getPopupContainer(triggerNode) {\n              return triggerNode.parentNode;\n            }\n          },\n          on: {\n            'click': this.handleMenuItemClick,\n            'select': this.setSelectedKeys,\n            'deselect': this.setSelectedKeys\n          },\n          'class': dropdownMenuClass\n        },\n        [this.renderMenus(column.filters)]\n      ), h(\n        'div',\n        { 'class': prefixCls + '-dropdown-btns' },\n        [h(\n          'a',\n          { 'class': prefixCls + '-dropdown-link confirm', on: {\n              'click': this.handleConfirm\n            }\n          },\n          [locale.filterConfirm]\n        ), h(\n          'a',\n          { 'class': prefixCls + '-dropdown-link clear', on: {\n              'click': this.handleClearFilters\n            }\n          },\n          [locale.filterReset]\n        )]\n      )]\n    );\n\n    return h(\n      Dropdown,\n      {\n        attrs: {\n          trigger: ['click'],\n          placement: 'bottomRight',\n          visible: this.getDropdownVisible(),\n\n          getPopupContainer: getPopupContainer,\n          forceRender: true\n        },\n        on: {\n          'visibleChange': this.onVisibleChange\n        }\n      },\n      [h(\n        'template',\n        { slot: 'overlay' },\n        [menus]\n      ), this.renderFilterIcon()]\n    );\n  }\n};"],"sourceRoot":""}