{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-menu/Menu.js"],"names":["babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","_util_vue_types__WEBPACK_IMPORTED_MODULE_1__","_util_store__WEBPACK_IMPORTED_MODULE_2__","_util_store__WEBPACK_IMPORTED_MODULE_3__","_SubPopupMenu__WEBPACK_IMPORTED_MODULE_4__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_5__","_util_props_util__WEBPACK_IMPORTED_MODULE_6__","_commonPropsType__WEBPACK_IMPORTED_MODULE_7__","Menu","name","props","selectable","bool","def","mixins","data","Object","this","selectedKeys","defaultSelectedKeys","openKeys","defaultOpenKeys","store","activeKey","0-menu-","children","$slots","mounted","updateMiniStore","updated","methods","onSelect","selectInfo","$props","getState","selectedKey","key","multiple","concat","setState","__emit","onClick","e","onKeyDown","callback","$refs","innerMenu","getWrappedInstance","onOpenChange","event","changed","processSingle","oneChanged","open","indexOf","push","index","splice","Array","isArray","forEach","onDeselect","getOpenTransitionName","transitionName","openTransitionName","animationName","openAnimation","prefixCls","render","h","arguments","subPopupMenuProps","itemIcon","expandIcon","overflowedIndicator","parentMenu","class","on","$listeners","click","openChange","deselect","select","ref","attrs","__webpack_exports__"],"mappings":"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","file":"js/chunk-vendors~c887d4cf.1063e378.js","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport PropTypes from '../_util/vue-types';\nimport { Provider, create } from '../_util/store';\nimport { default as SubPopupMenu, getActiveKey } from './SubPopupMenu';\nimport BaseMixin from '../_util/BaseMixin';\nimport hasProp, { getOptionProps, getComponentFromProp, filterEmpty } from '../_util/props-util';\nimport commonPropsType from './commonPropsType';\n\nvar Menu = {\n  name: 'Menu',\n  props: _extends({}, commonPropsType, {\n    selectable: PropTypes.bool.def(true)\n  }),\n  mixins: [BaseMixin],\n\n  data: function data() {\n    var props = getOptionProps(this);\n    var selectedKeys = props.defaultSelectedKeys;\n    var openKeys = props.defaultOpenKeys;\n    if ('selectedKeys' in props) {\n      selectedKeys = props.selectedKeys || [];\n    }\n    if ('openKeys' in props) {\n      openKeys = props.openKeys || [];\n    }\n\n    this.store = create({\n      selectedKeys: selectedKeys,\n      openKeys: openKeys,\n      activeKey: {\n        '0-menu-': getActiveKey(_extends({}, props, { children: this.$slots['default'] || [] }), props.activeKey)\n      }\n    });\n\n    // this.isRootMenu = true // 声明在props上\n    return {};\n  },\n  mounted: function mounted() {\n    this.updateMiniStore();\n  },\n  updated: function updated() {\n    this.updateMiniStore();\n  },\n\n  methods: {\n    onSelect: function onSelect(selectInfo) {\n      var props = this.$props;\n      if (props.selectable) {\n        // root menu\n        var selectedKeys = this.store.getState().selectedKeys;\n        var selectedKey = selectInfo.key;\n        if (props.multiple) {\n          selectedKeys = selectedKeys.concat([selectedKey]);\n        } else {\n          selectedKeys = [selectedKey];\n        }\n        if (!hasProp(this, 'selectedKeys')) {\n          this.store.setState({\n            selectedKeys: selectedKeys\n          });\n        }\n        this.__emit('select', _extends({}, selectInfo, {\n          selectedKeys: selectedKeys\n        }));\n      }\n    },\n    onClick: function onClick(e) {\n      this.__emit('click', e);\n    },\n\n    // onKeyDown needs to be exposed as a instance method\n    // e.g., in rc-select, we need to navigate menu item while\n    // current active item is rc-select input box rather than the menu itself\n    onKeyDown: function onKeyDown(e, callback) {\n      this.$refs.innerMenu.getWrappedInstance().onKeyDown(e, callback);\n    },\n    onOpenChange: function onOpenChange(event) {\n      var openKeys = this.store.getState().openKeys.concat();\n      var changed = false;\n      var processSingle = function processSingle(e) {\n        var oneChanged = false;\n        if (e.open) {\n          oneChanged = openKeys.indexOf(e.key) === -1;\n          if (oneChanged) {\n            openKeys.push(e.key);\n          }\n        } else {\n          var index = openKeys.indexOf(e.key);\n          oneChanged = index !== -1;\n          if (oneChanged) {\n            openKeys.splice(index, 1);\n          }\n        }\n        changed = changed || oneChanged;\n      };\n      if (Array.isArray(event)) {\n        // batch change call\n        event.forEach(processSingle);\n      } else {\n        processSingle(event);\n      }\n      if (changed) {\n        if (!hasProp(this, 'openKeys')) {\n          this.store.setState({ openKeys: openKeys });\n        }\n        this.__emit('openChange', openKeys);\n      }\n    },\n    onDeselect: function onDeselect(selectInfo) {\n      var props = this.$props;\n      if (props.selectable) {\n        var selectedKeys = this.store.getState().selectedKeys.concat();\n        var selectedKey = selectInfo.key;\n        var index = selectedKeys.indexOf(selectedKey);\n        if (index !== -1) {\n          selectedKeys.splice(index, 1);\n        }\n        if (!hasProp(this, 'selectedKeys')) {\n          this.store.setState({\n            selectedKeys: selectedKeys\n          });\n        }\n        this.__emit('deselect', _extends({}, selectInfo, {\n          selectedKeys: selectedKeys\n        }));\n      }\n    },\n    getOpenTransitionName: function getOpenTransitionName() {\n      var props = this.$props;\n      var transitionName = props.openTransitionName;\n      var animationName = props.openAnimation;\n      if (!transitionName && typeof animationName === 'string') {\n        transitionName = props.prefixCls + '-open-' + animationName;\n      }\n      return transitionName;\n    },\n    updateMiniStore: function updateMiniStore() {\n      var props = getOptionProps(this);\n      if ('selectedKeys' in props) {\n        this.store.setState({\n          selectedKeys: props.selectedKeys || []\n        });\n      }\n      if ('openKeys' in props) {\n        this.store.setState({\n          openKeys: props.openKeys || []\n        });\n      }\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n\n    var props = getOptionProps(this);\n    var subPopupMenuProps = {\n      props: _extends({}, props, {\n        itemIcon: getComponentFromProp(this, 'itemIcon', props),\n        expandIcon: getComponentFromProp(this, 'expandIcon', props),\n        overflowedIndicator: getComponentFromProp(this, 'overflowedIndicator', props) || h('span', ['\\xB7\\xB7\\xB7']),\n        openTransitionName: this.getOpenTransitionName(),\n        parentMenu: this,\n        children: filterEmpty(this.$slots['default'] || [])\n      }),\n      'class': props.prefixCls + '-root',\n      on: _extends({}, this.$listeners, {\n        click: this.onClick,\n        openChange: this.onOpenChange,\n        deselect: this.onDeselect,\n        select: this.onSelect\n      }),\n      ref: 'innerMenu'\n    };\n    return h(\n      Provider,\n      {\n        attrs: { store: this.store }\n      },\n      [h(SubPopupMenu, subPopupMenuProps)]\n    );\n  }\n};\nexport default Menu;"],"sourceRoot":""}