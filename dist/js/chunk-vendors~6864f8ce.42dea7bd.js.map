{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/time-picker/index.js"],"names":["__webpack_require__","d","__webpack_exports__","generateShowHourMinuteSecond","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","moment__WEBPACK_IMPORTED_MODULE_2__","_vc_time_picker__WEBPACK_IMPORTED_MODULE_3__","_locale_provider_LocaleReceiver__WEBPACK_IMPORTED_MODULE_4__","_locale_en_US__WEBPACK_IMPORTED_MODULE_5__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_6__","_util_vue_types__WEBPACK_IMPORTED_MODULE_7__","_icon__WEBPACK_IMPORTED_MODULE_8__","_util_interopDefault__WEBPACK_IMPORTED_MODULE_9__","_util_props_util__WEBPACK_IMPORTED_MODULE_10__","_util_vnode__WEBPACK_IMPORTED_MODULE_11__","format","showHour","indexOf","showMinute","showSecond","isMoment","value","Array","isArray","length","findIndex","val","undefined","MomentType","custom","TimePickerProps","size","oneOf","defaultValue","open","bool","string","disabled","placeholder","prefixCls","hideDisabledOptions","disabledHours","func","disabledMinutes","disabledSeconds","getPopupContainer","use12Hours","focusOnOpen","hourStep","number","minuteStep","secondStep","allowEmpty","inputReadOnly","clearText","defaultOpenValue","object","popupClassName","suffixIcon","any","align","placement","transitionName","autoFocus","addon","TimePicker","name","mixins","props","Object","offset","model","prop","event","provide","savePopupRef","this","inject","configProvider","default","data","Error","sValue","watch","setState","methods","ref","popupRef","handleChange","_format","$emit","handleOpenClose","_ref","focus","$refs","timePicker","blur","getDefaultFormat","renderTimePicker","locale","h","$createElement","className","tempAddon","panel","class","clockIcon","attrs","type","theme","inputIcon","clearIcon","getContextPopupContainer","timeProps","on","$listeners","change","close","render","arguments","componentName","defaultLocale","scopedSlots","install","Vue","component"],"mappings":"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","file":"js/chunk-vendors~6864f8ce.42dea7bd.js","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport * as moment from 'moment';\nimport VcTimePicker from '../vc-time-picker';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from './locale/en_US';\nimport BaseMixin from '../_util/BaseMixin';\nimport PropTypes from '../_util/vue-types';\nimport Icon from '../icon';\nimport interopDefault from '../_util/interopDefault';\nimport { initDefaultProps, hasProp, getOptionProps, getComponentFromProp, isValidElement } from '../_util/props-util';\nimport { cloneElement } from '../_util/vnode';\n\nexport function generateShowHourMinuteSecond(format) {\n  // Ref: http://momentjs.com/docs/#/parsing/string-format/\n  return {\n    showHour: format.indexOf('H') > -1 || format.indexOf('h') > -1 || format.indexOf('k') > -1,\n    showMinute: format.indexOf('m') > -1,\n    showSecond: format.indexOf('s') > -1\n  };\n}\nfunction isMoment(value) {\n  if (Array.isArray(value)) {\n    return value.length === 0 || value.findIndex(function (val) {\n      return val === undefined || moment.isMoment(val);\n    }) !== -1;\n  } else {\n    return value === undefined || moment.isMoment(value);\n  }\n}\nvar MomentType = PropTypes.custom(isMoment);\nexport var TimePickerProps = function TimePickerProps() {\n  return {\n    size: PropTypes.oneOf(['large', 'default', 'small']),\n    value: MomentType,\n    defaultValue: MomentType,\n    open: PropTypes.bool,\n    format: PropTypes.string,\n    disabled: PropTypes.bool,\n    placeholder: PropTypes.string,\n    prefixCls: PropTypes.string,\n    hideDisabledOptions: PropTypes.bool,\n    disabledHours: PropTypes.func,\n    disabledMinutes: PropTypes.func,\n    disabledSeconds: PropTypes.func,\n    getPopupContainer: PropTypes.func,\n    use12Hours: PropTypes.bool,\n    focusOnOpen: PropTypes.bool,\n    hourStep: PropTypes.number,\n    minuteStep: PropTypes.number,\n    secondStep: PropTypes.number,\n    allowEmpty: PropTypes.bool,\n    inputReadOnly: PropTypes.bool,\n    clearText: PropTypes.string,\n    defaultOpenValue: PropTypes.object,\n    popupClassName: PropTypes.string,\n    suffixIcon: PropTypes.any,\n    align: PropTypes.object,\n    placement: PropTypes.any,\n    transitionName: PropTypes.string,\n    autoFocus: PropTypes.bool,\n    addon: PropTypes.any\n  };\n};\n\nvar TimePicker = {\n  name: 'ATimePicker',\n  mixins: [BaseMixin],\n  props: initDefaultProps(TimePickerProps(), {\n    prefixCls: 'ant-time-picker',\n    align: {\n      offset: [0, -2]\n    },\n    disabled: false,\n    disabledHours: undefined,\n    disabledMinutes: undefined,\n    disabledSeconds: undefined,\n    hideDisabledOptions: false,\n    placement: 'bottomLeft',\n    transitionName: 'slide-up',\n    focusOnOpen: true\n  }),\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  provide: function provide() {\n    return {\n      savePopupRef: this.savePopupRef\n    };\n  },\n\n  inject: {\n    configProvider: { 'default': function _default() {\n        return {};\n      } }\n  },\n  data: function data() {\n    var value = this.value || this.defaultValue;\n    if (value && !interopDefault(moment).isMoment(value)) {\n      throw new Error('The value/defaultValue of TimePicker must be a moment object, ');\n    }\n    return {\n      sValue: value\n    };\n  },\n\n  watch: {\n    value: function value(val) {\n      this.setState({ sValue: val });\n    }\n  },\n  methods: {\n    savePopupRef: function savePopupRef(ref) {\n      this.popupRef = ref;\n    },\n    handleChange: function handleChange(value) {\n      if (!hasProp(this, 'value')) {\n        this.setState({ sValue: value });\n      }\n      var _format = this.format,\n          format = _format === undefined ? 'HH:mm:ss' : _format;\n\n      this.$emit('change', value, value && value.format(format) || '');\n    },\n    handleOpenClose: function handleOpenClose(_ref) {\n      var open = _ref.open;\n\n      this.$emit('openChange', open);\n      this.$emit('update:open', open);\n    },\n    focus: function focus() {\n      this.$refs.timePicker.focus();\n    },\n    blur: function blur() {\n      this.$refs.timePicker.blur();\n    },\n    getDefaultFormat: function getDefaultFormat() {\n      var format = this.format,\n          use12Hours = this.use12Hours;\n\n      if (format) {\n        return format;\n      } else if (use12Hours) {\n        return 'h:mm:ss a';\n      }\n      return 'HH:mm:ss';\n    },\n    renderTimePicker: function renderTimePicker(locale) {\n      var h = this.$createElement;\n\n      var props = getOptionProps(this);\n      delete props.defaultValue;\n\n      var format = this.getDefaultFormat();\n      var className = _defineProperty({}, props.prefixCls + '-' + props.size, !!props.size);\n      var tempAddon = getComponentFromProp(this, 'addon', {}, false);\n      var addon = function addon(panel) {\n        return tempAddon ? h(\n          'div',\n          { 'class': props.prefixCls + '-panel-addon' },\n          [typeof tempAddon === 'function' ? tempAddon(panel) : tempAddon]\n        ) : null;\n      };\n      var prefixCls = props.prefixCls,\n          getPopupContainer = props.getPopupContainer;\n\n      var suffixIcon = getComponentFromProp(this, 'suffixIcon');\n      suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;\n      var clockIcon = suffixIcon && (isValidElement(suffixIcon) ? cloneElement(suffixIcon, {\n        'class': prefixCls + '-clock-icon'\n      }) : h(\n        'span',\n        { 'class': prefixCls + '-clock-icon' },\n        [suffixIcon]\n      )) || h(Icon, {\n        attrs: { type: 'clock-circle', theme: 'outlined' },\n        'class': prefixCls + '-clock-icon' });\n\n      var inputIcon = h(\n        'span',\n        { 'class': prefixCls + '-icon' },\n        [clockIcon]\n      );\n\n      var clearIcon = h(Icon, {\n        attrs: { type: 'close-circle', theme: 'filled' },\n        'class': prefixCls + '-panel-clear-btn-icon' });\n      var getContextPopupContainer = this.configProvider.getPopupContainer;\n\n      var timeProps = {\n        props: _extends({}, generateShowHourMinuteSecond(format), props, {\n          getPopupContainer: getPopupContainer || getContextPopupContainer,\n          format: format,\n          value: this.sValue,\n          placeholder: props.placeholder === undefined ? locale.placeholder : props.placeholder,\n          addon: addon,\n          inputIcon: inputIcon,\n          clearIcon: clearIcon\n        }),\n        'class': className,\n        ref: 'timePicker',\n        on: _extends({}, this.$listeners, {\n          change: this.handleChange,\n          open: this.handleOpenClose,\n          close: this.handleOpenClose\n        })\n      };\n      return h(VcTimePicker, timeProps);\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n\n    return h(LocaleReceiver, {\n      attrs: {\n        componentName: 'TimePicker',\n        defaultLocale: defaultLocale\n      },\n      scopedSlots: { 'default': this.renderTimePicker }\n    });\n  }\n};\n\n/* istanbul ignore next */\nTimePicker.install = function (Vue) {\n  Vue.component(TimePicker.name, TimePicker);\n};\n\nexport default TimePicker;"],"sourceRoot":""}