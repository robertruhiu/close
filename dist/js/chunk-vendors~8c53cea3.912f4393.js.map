{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_regexp-exec.js"],"names":["regexpFlags","__webpack_require__","nativeExec","RegExp","prototype","exec","nativeReplace","String","replace","patchedExec","LAST_INDEX","UPDATES_LAST_INDEX_WRONG","re1","re2","call","NPCG_INCLUDED","undefined","PATCH","str","lastIndex","reCopy","match","i","re","this","source","global","index","length","arguments","module","exports"],"mappings":"0HAEA,IAAAA,EAAkBC,EAAQ,QAE1BC,EAAAC,OAAAC,UAAAC,KAIAC,EAAAC,OAAAH,UAAAI,QAEAC,EAAAP,EAEAQ,EAAA,YAEAC,EAAA,WACA,IAAAC,EAAA,IACAC,EAAA,MAGA,OAFAX,EAAAY,KAAAF,EAAA,KACAV,EAAAY,KAAAD,EAAA,KACA,IAAAD,EAAAF,IAAA,IAAAG,EAAAH,GALA,GASAK,OAAAC,IAAA,OAAAX,KAAA,OAEAY,EAAAN,GAAAI,EAEAE,IACAR,EAAA,SAAAS,GACA,IACAC,EAAAC,EAAAC,EAAAC,EADAC,EAAAC,KAwBA,OArBAT,IACAK,EAAA,IAAAjB,OAAA,IAAAoB,EAAAE,OAAA,WAAAzB,EAAAc,KAAAS,KAEAZ,IAAAQ,EAAAI,EAAAb,IAEAW,EAAAnB,EAAAY,KAAAS,EAAAL,GAEAP,GAAAU,IACAE,EAAAb,GAAAa,EAAAG,OAAAL,EAAAM,MAAAN,EAAA,GAAAO,OAAAT,GAEAJ,GAAAM,KAAAO,OAAA,GAIAtB,EAAAQ,KAAAO,EAAA,GAAAD,EAAA,WACA,IAAAE,EAAA,EAAmBA,EAAAO,UAAAD,OAAA,EAA0BN,SAC7CN,IAAAa,UAAAP,KAAAD,EAAAC,QAAAN,KAKAK,IAIAS,EAAAC,QAAAtB","file":"js/chunk-vendors~8c53cea3.912f4393.js","sourcesContent":["'use strict';\n\nvar regexpFlags = require('./_flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar LAST_INDEX = 'lastIndex';\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/,\n      re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      // eslint-disable-next-line no-loop-func\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n"],"sourceRoot":""}