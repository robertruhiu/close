{"version":3,"sources":["webpack:///./node_modules/axios/lib/defaults.js"],"names":["process","utils","__webpack_require__","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","value","isUndefined","getDefaultAdapter","adapter","XMLHttpRequest","defaults","transformRequest","data","isFormData","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","toString","isObject","JSON","stringify","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","forEach","method","merge","module","exports"],"mappings":"yHAAA,SAAAA,GAEA,IAAAC,EAAYC,EAAQ,QACpBC,EAA0BD,EAAQ,QAElCE,EAAA,CACAC,eAAA,qCAGA,SAAAC,EAAAC,EAAAC,IACAP,EAAAQ,YAAAF,IAAAN,EAAAQ,YAAAF,EAAA,mBACAA,EAAA,gBAAAC,GAIA,SAAAE,IACA,IAAAC,EAQA,MAPA,qBAAAC,eAEAD,EAAcT,EAAQ,QACnB,qBAAAF,IAEHW,EAAcT,EAAQ,SAEtBS,EAGA,IAAAE,EAAA,CACAF,QAAAD,IAEAI,iBAAA,UAAAC,EAAAR,GAEA,OADAJ,EAAAI,EAAA,gBACAN,EAAAe,WAAAD,IACAd,EAAAgB,cAAAF,IACAd,EAAAiB,SAAAH,IACAd,EAAAkB,SAAAJ,IACAd,EAAAmB,OAAAL,IACAd,EAAAoB,OAAAN,GAEAA,EAEAd,EAAAqB,kBAAAP,GACAA,EAAAQ,OAEAtB,EAAAuB,kBAAAT,IACAT,EAAAC,EAAA,mDACAQ,EAAAU,YAEAxB,EAAAyB,SAAAX,IACAT,EAAAC,EAAA,kCACAoB,KAAAC,UAAAb,IAEAA,IAGAc,kBAAA,UAAAd,GAEA,qBAAAA,EACA,IACAA,EAAAY,KAAAG,MAAAf,GACO,MAAAgB,IAEP,OAAAhB,IAOAiB,QAAA,EAEAC,eAAA,aACAC,eAAA,eAEAC,kBAAA,EAEAC,eAAA,SAAAC,GACA,OAAAA,GAAA,KAAAA,EAAA,KAIA9B,QAAA,CACA+B,OAAA,CACAC,OAAA,uCAIAtC,EAAAuC,QAAA,iCAAAC,GACA5B,EAAAN,QAAAkC,GAAA,KAGAxC,EAAAuC,QAAA,gCAAAC,GACA5B,EAAAN,QAAAkC,GAAAxC,EAAAyC,MAAAtC,KAGAuC,EAAAC,QAAA/B","file":"js/chunk-vendors~917ce472.4786828f.js","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n"],"sourceRoot":""}