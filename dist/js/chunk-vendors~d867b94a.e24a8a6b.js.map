{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-trigger/Popup.js"],"names":["babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","_util_vue_types__WEBPACK_IMPORTED_MODULE_2__","_vc_align__WEBPACK_IMPORTED_MODULE_3__","_PopupInner__WEBPACK_IMPORTED_MODULE_4__","_LazyRenderBox__WEBPACK_IMPORTED_MODULE_5__","_util_css_animation__WEBPACK_IMPORTED_MODULE_6__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_7__","__webpack_exports__","mixins","props","visible","bool","getClassNameFromAlign","func","getRootDomNode","align","any","destroyPopupOnHide","prefixCls","string","getContainer","transitionName","animation","maskAnimation","maskTransitionName","mask","zIndex","number","popupClassName","popupStyle","object","def","stretch","point","shape","pageX","pageY","data","stretchChecked","targetWidth","undefined","targetHeight","mounted","_this","this","$nextTick","rootNode","getPopupDomNode","setStretchSize","updated","_this2","beforeDestroy","$el","parentNode","removeChild","remove","methods","onAlign","popupDomNode","$props","currentAlignClassName","className","getClassName","$listeners","_$props","_$data","$data","$ele","height","offsetHeight","width","offsetWidth","setState","$refs","popupInstance","getTargetElement","getAlignTarget","getMaskTransitionName","getTransitionName","name","getPopupElement","_this3","h","$createElement","$slots","_$data2","sizeStyle","indexOf","minHeight","minWidth","setTimeout","alignInstance","forceAlign","popupInnerProps","class","on","ref","style","getZIndexStyle","transitionProps","appear","css","useTransition","transitionEvent","beforeEnter","enter","el","done","Object","leave","_animation$on","_animation$props","_props","attrs","target","monitorWindowResize","key","directives","value","disabled","getMaskElement","maskElement","maskTransition","render","arguments"],"mappings":"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","file":"js/chunk-vendors~d867b94a.e24a8a6b.js","sourcesContent":["import _typeof from 'babel-runtime/helpers/typeof';\nimport _extends from 'babel-runtime/helpers/extends';\nimport PropTypes from '../_util/vue-types';\nimport Align from '../vc-align';\nimport PopupInner from './PopupInner';\nimport LazyRenderBox from './LazyRenderBox';\nimport animate from '../_util/css-animation';\nimport BaseMixin from '../_util/BaseMixin';\n\nexport default {\n  mixins: [BaseMixin],\n  props: {\n    visible: PropTypes.bool,\n    getClassNameFromAlign: PropTypes.func,\n    getRootDomNode: PropTypes.func,\n    align: PropTypes.any,\n    destroyPopupOnHide: PropTypes.bool,\n    prefixCls: PropTypes.string,\n    getContainer: PropTypes.func,\n    transitionName: PropTypes.string,\n    animation: PropTypes.any,\n    maskAnimation: PropTypes.string,\n    maskTransitionName: PropTypes.string,\n    mask: PropTypes.bool,\n    zIndex: PropTypes.number,\n    popupClassName: PropTypes.any,\n    popupStyle: PropTypes.object.def({}),\n    stretch: PropTypes.string,\n    point: PropTypes.shape({\n      pageX: PropTypes.number,\n      pageY: PropTypes.number\n    })\n  },\n  data: function data() {\n    return {\n      // Used for stretch\n      stretchChecked: false,\n      targetWidth: undefined,\n      targetHeight: undefined\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.rootNode = _this.getPopupDomNode();\n      _this.setStretchSize();\n    });\n  },\n  updated: function updated() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      _this2.setStretchSize();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    } else if (this.$el.remove) {\n      this.$el.remove();\n    }\n  },\n\n  methods: {\n    onAlign: function onAlign(popupDomNode, align) {\n      var props = this.$props;\n      var currentAlignClassName = props.getClassNameFromAlign(align);\n      // FIX: https://github.com/react-component/trigger/issues/56\n      // FIX: https://github.com/react-component/tooltip/issues/79\n      if (this.currentAlignClassName !== currentAlignClassName) {\n        this.currentAlignClassName = currentAlignClassName;\n        popupDomNode.className = this.getClassName(currentAlignClassName);\n      }\n      this.$listeners.align && this.$listeners.align(popupDomNode, align);\n    },\n\n\n    // Record size if stretch needed\n    setStretchSize: function setStretchSize() {\n      var _$props = this.$props,\n          stretch = _$props.stretch,\n          getRootDomNode = _$props.getRootDomNode,\n          visible = _$props.visible;\n      var _$data = this.$data,\n          stretchChecked = _$data.stretchChecked,\n          targetHeight = _$data.targetHeight,\n          targetWidth = _$data.targetWidth;\n\n\n      if (!stretch || !visible) {\n        if (stretchChecked) {\n          this.setState({ stretchChecked: false });\n        }\n        return;\n      }\n\n      var $ele = getRootDomNode();\n      if (!$ele) return;\n\n      var height = $ele.offsetHeight;\n      var width = $ele.offsetWidth;\n\n      if (targetHeight !== height || targetWidth !== width || !stretchChecked) {\n        this.setState({\n          stretchChecked: true,\n          targetHeight: height,\n          targetWidth: width\n        });\n      }\n    },\n    getPopupDomNode: function getPopupDomNode() {\n      return this.$refs.popupInstance ? this.$refs.popupInstance.$el : null;\n    },\n    getTargetElement: function getTargetElement() {\n      return this.$props.getRootDomNode();\n    },\n\n\n    // `target` on `rc-align` can accept as a function to get the bind element or a point.\n    // ref: https://www.npmjs.com/package/rc-align\n    getAlignTarget: function getAlignTarget() {\n      var point = this.$props.point;\n\n      if (point) {\n        return point;\n      }\n      return this.getTargetElement;\n    },\n    getMaskTransitionName: function getMaskTransitionName() {\n      var props = this.$props;\n      var transitionName = props.maskTransitionName;\n      var animation = props.maskAnimation;\n      if (!transitionName && animation) {\n        transitionName = props.prefixCls + '-' + animation;\n      }\n      return transitionName;\n    },\n    getTransitionName: function getTransitionName() {\n      var props = this.$props;\n      var transitionName = props.transitionName;\n      var animation = props.animation;\n      if (!transitionName) {\n        if (typeof animation === 'string') {\n          transitionName = '' + animation;\n        } else if (animation && animation.props && animation.props.name) {\n          transitionName = animation.props.name;\n        }\n      }\n      return transitionName;\n    },\n    getClassName: function getClassName(currentAlignClassName) {\n      return this.$props.prefixCls + ' ' + this.$props.popupClassName + ' ' + currentAlignClassName;\n    },\n    getPopupElement: function getPopupElement() {\n      var _this3 = this;\n\n      var h = this.$createElement;\n      var props = this.$props,\n          $slots = this.$slots,\n          $listeners = this.$listeners,\n          getTransitionName = this.getTransitionName;\n      var _$data2 = this.$data,\n          stretchChecked = _$data2.stretchChecked,\n          targetHeight = _$data2.targetHeight,\n          targetWidth = _$data2.targetWidth;\n      var align = props.align,\n          visible = props.visible,\n          prefixCls = props.prefixCls,\n          animation = props.animation,\n          popupStyle = props.popupStyle,\n          getClassNameFromAlign = props.getClassNameFromAlign,\n          destroyPopupOnHide = props.destroyPopupOnHide,\n          stretch = props.stretch;\n      // const { mouseenter, mouseleave } = $listeners\n\n      var className = this.getClassName(this.currentAlignClassName || getClassNameFromAlign(align));\n      // const hiddenClassName = `${prefixCls}-hidden`\n      if (!visible) {\n        this.currentAlignClassName = null;\n      }\n      var sizeStyle = {};\n      if (stretch) {\n        // Stretch with target\n        if (stretch.indexOf('height') !== -1) {\n          sizeStyle.height = typeof targetHeight === 'number' ? targetHeight + 'px' : targetHeight;\n        } else if (stretch.indexOf('minHeight') !== -1) {\n          sizeStyle.minHeight = typeof targetHeight === 'number' ? targetHeight + 'px' : targetHeight;\n        }\n        if (stretch.indexOf('width') !== -1) {\n          sizeStyle.width = typeof targetWidth === 'number' ? targetWidth + 'px' : targetWidth;\n        } else if (stretch.indexOf('minWidth') !== -1) {\n          sizeStyle.minWidth = typeof targetWidth === 'number' ? targetWidth + 'px' : targetWidth;\n        }\n\n        // Delay force align to makes ui smooth\n        if (!stretchChecked) {\n          // sizeStyle.visibility = 'hidden'\n          setTimeout(function () {\n            if (_this3.$refs.alignInstance) {\n              _this3.$refs.alignInstance.forceAlign();\n            }\n          }, 0);\n        }\n      }\n      var popupInnerProps = {\n        props: {\n          prefixCls: prefixCls,\n          visible: visible\n          // hiddenClassName,\n        },\n        'class': className,\n        on: $listeners,\n        ref: 'popupInstance',\n        style: _extends({}, sizeStyle, popupStyle, this.getZIndexStyle())\n      };\n      var transitionProps = {\n        props: _extends({\n          appear: true,\n          css: false\n        })\n      };\n      var transitionName = getTransitionName();\n      var useTransition = !!transitionName;\n      var transitionEvent = {\n        beforeEnter: function beforeEnter() {\n          // el.style.display = el.__vOriginalDisplay\n          // this.$refs.alignInstance.forceAlign()\n        },\n        enter: function enter(el, done) {\n          // align updated后执行动画\n          _this3.$nextTick(function () {\n            if (_this3.$refs.alignInstance) {\n              _this3.$refs.alignInstance.$nextTick(function () {\n                animate(el, transitionName + '-enter', done);\n              });\n            }\n          });\n        },\n        leave: function leave(el, done) {\n          animate(el, transitionName + '-leave', done);\n        }\n      };\n\n      if ((typeof animation === 'undefined' ? 'undefined' : _typeof(animation)) === 'object') {\n        useTransition = true;\n\n        var _animation$on = animation.on,\n            on = _animation$on === undefined ? {} : _animation$on,\n            _animation$props = animation.props,\n            _props = _animation$props === undefined ? {} : _animation$props;\n\n        transitionProps.props = _extends({}, transitionProps.props, _props);\n        transitionProps.on = _extends({}, transitionEvent, on);\n      } else {\n        transitionProps.on = transitionEvent;\n      }\n      if (!useTransition) {\n        transitionProps = {};\n      }\n      if (destroyPopupOnHide) {\n        return h(\n          'transition',\n          transitionProps,\n          [visible ? h(\n            Align,\n            {\n              attrs: {\n                target: this.getAlignTarget(),\n\n                monitorWindowResize: true,\n                align: align\n              },\n              key: 'popup',\n              ref: 'alignInstance', on: {\n                'align': this.onAlign\n              }\n            },\n            [h(\n              PopupInner,\n              popupInnerProps,\n              [$slots['default']]\n            )]\n          ) : null]\n        );\n      }\n      return h(\n        'transition',\n        transitionProps,\n        [h(\n          Align,\n          {\n            directives: [{\n              name: 'show',\n              value: visible\n            }],\n            attrs: {\n              target: this.getAlignTarget(),\n\n              monitorWindowResize: true,\n              disabled: !visible,\n              align: align\n            },\n            key: 'popup',\n            ref: 'alignInstance', on: {\n              'align': this.onAlign\n            }\n          },\n          [h(\n            PopupInner,\n            popupInnerProps,\n            [$slots['default']]\n          )]\n        )]\n      );\n    },\n    getZIndexStyle: function getZIndexStyle() {\n      var style = {};\n      var props = this.$props;\n      if (props.zIndex !== undefined) {\n        style.zIndex = props.zIndex;\n      }\n      return style;\n    },\n    getMaskElement: function getMaskElement() {\n      var h = this.$createElement;\n\n      var props = this.$props;\n      var maskElement = null;\n      if (props.mask) {\n        var maskTransition = this.getMaskTransitionName();\n        maskElement = h(LazyRenderBox, {\n          directives: [{\n            name: 'show',\n            value: props.visible\n          }],\n\n          style: this.getZIndexStyle(),\n          key: 'mask',\n          'class': props.prefixCls + '-mask',\n          attrs: { visible: props.visible\n          }\n        });\n        if (maskTransition) {\n          maskElement = h(\n            'transition',\n            {\n              attrs: { appear: true, name: maskTransition }\n            },\n            [maskElement]\n          );\n        }\n      }\n      return maskElement;\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var getMaskElement = this.getMaskElement,\n        getPopupElement = this.getPopupElement;\n\n    return h('div', [getMaskElement(), getPopupElement()]);\n  }\n};"],"sourceRoot":""}