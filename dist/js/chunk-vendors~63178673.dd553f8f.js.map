{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-slick/src/utils/innerSliderUtils.js"],"names":["__webpack_require__","d","__webpack_exports__","getOnDemandLazySlides","lazyStartIndex","lazyEndIndex","getHeight","canGoNext","extractObject","initializedState","slideHandler","changeSlide","keyHandler","swipeStart","swipeMove","swipeEnd","getTrackCSS","getTrackLeft","getPreClones","getPostClones","canUseDOM","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","spec","onDemandSlides","startIndex","endIndex","slideIndex","lazyLoadedList","indexOf","push","currentSlide","lazySlidesOnLeft","lazySlidesOnRight","centerMode","Math","floor","slidesToShow","parseInt","centerPadding","getWidth","elem","offsetWidth","offsetHeight","getSwipeDirection","touchObject","verticalSwiping","arguments","length","undefined","swipeAngle","xDist","startX","curX","yDist","startY","curY","r","atan2","round","PI","abs","canGo","infinite","slideCount","keys","newObject","forEach","key","children","listWidth","ceil","listRef","trackWidth","trackRef","slideWidth","vertical","centerPaddingAdj","slice","slideHeight","querySelector","listHeight","initialSlide","rtl","slidesToLoad","concat","state","autoplaying","autoplay","waitForAnimate","animating","fade","index","lazyLoad","slidesToScroll","useCSS","animationSlide","finalSlide","animationLeft","finalLeft","nextState","trackStyle","getTrackAnimateCSS","left","swipeLeft","options","previousInt","slideOffset","targetSlide","unevenOffset","indexOffset","message","direction","siblingDirection","Number","e","accessibility","target","tagName","match","keyCode","swipe","draggable","preventDefault","type","dragging","touches","pageX","clientX","pageY","clientY","scrolling","swipeToSlide","edgeFriction","edgeDragged","onEdge","swiped","swiping","swipeEvent","curLeft","swipeLength","sqrt","pow","verticalSwipeLength","positionOffset","dotCount","swipeDirection","touchSwipeLength","touchThreshold","onSwipe","minSwipe","newSlide","getSlideCount","checkNavigable","currentLeft","getNavigableIndexes","max","breakpoint","counter","indexes","min","navigables","prevNavigable","centerOffset","swipedSlide","slickList","slides","querySelectorAll","Array","from","every","slide","offsetTop","offsetLeft","currentIndex","slidesTraversed","dataset","checkSpecKeys","keysArray","reduce","value","hasOwnProperty","console","error","trackHeight","trackChildren","getTotalSlides","style","opacity","transition","WebkitTransition","useTransform","WebkitTransform","transform","msTransform","width","height","window","addEventListener","attachEvent","marginTop","marginLeft","speed","cssEase","unslick","variableWidth","targetLeft","verticalOffset","slidesToOffset","targetSlideIndex","trackElem","childNodes","slidesOnRight","slidesOnLeft","_ref","right","_ref2","document","createElement"],"mappings":"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","file":"js/chunk-vendors~63178673.dd553f8f.js","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nexport var getOnDemandLazySlides = function getOnDemandLazySlides(spec) {\n  var onDemandSlides = [];\n  var startIndex = lazyStartIndex(spec);\n  var endIndex = lazyEndIndex(spec);\n  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {\n    if (spec.lazyLoadedList.indexOf(slideIndex) < 0) {\n      onDemandSlides.push(slideIndex);\n    }\n  }\n  return onDemandSlides;\n};\n\n// return list of slides that need to be present\nexport var getRequiredLazySlides = function getRequiredLazySlides(spec) {\n  var requiredSlides = [];\n  var startIndex = lazyStartIndex(spec);\n  var endIndex = lazyEndIndex(spec);\n  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {\n    requiredSlides.push(slideIndex);\n  }\n  return requiredSlides;\n};\n\n// startIndex that needs to be present\nexport var lazyStartIndex = function lazyStartIndex(spec) {\n  return spec.currentSlide - lazySlidesOnLeft(spec);\n};\nexport var lazyEndIndex = function lazyEndIndex(spec) {\n  return spec.currentSlide + lazySlidesOnRight(spec);\n};\nexport var lazySlidesOnLeft = function lazySlidesOnLeft(spec) {\n  return spec.centerMode ? Math.floor(spec.slidesToShow / 2) + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : 0;\n};\nexport var lazySlidesOnRight = function lazySlidesOnRight(spec) {\n  return spec.centerMode ? Math.floor((spec.slidesToShow - 1) / 2) + 1 + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : spec.slidesToShow;\n};\n\n// get width of an element\nexport var getWidth = function getWidth(elem) {\n  return elem && elem.offsetWidth || 0;\n};\nexport var getHeight = function getHeight(elem) {\n  return elem && elem.offsetHeight || 0;\n};\nexport var getSwipeDirection = function getSwipeDirection(touchObject) {\n  var verticalSwiping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var swipeAngle = void 0;\n  var xDist = touchObject.startX - touchObject.curX;\n  var yDist = touchObject.startY - touchObject.curY;\n  var r = Math.atan2(yDist, xDist);\n  swipeAngle = Math.round(r * 180 / Math.PI);\n  if (swipeAngle < 0) {\n    swipeAngle = 360 - Math.abs(swipeAngle);\n  }\n  if (swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315) {\n    return 'left';\n  }\n  if (swipeAngle >= 135 && swipeAngle <= 225) {\n    return 'right';\n  }\n  if (verticalSwiping === true) {\n    if (swipeAngle >= 35 && swipeAngle <= 135) {\n      return 'up';\n    } else {\n      return 'down';\n    }\n  }\n\n  return 'vertical';\n};\n\n// whether or not we can go next\nexport var canGoNext = function canGoNext(spec) {\n  var canGo = true;\n  if (!spec.infinite) {\n    if (spec.centerMode && spec.currentSlide >= spec.slideCount - 1) {\n      canGo = false;\n    } else if (spec.slideCount <= spec.slidesToShow || spec.currentSlide >= spec.slideCount - spec.slidesToShow) {\n      canGo = false;\n    }\n  }\n  return canGo;\n};\n\n// given an object and a list of keys, return new object with given keys\nexport var extractObject = function extractObject(spec, keys) {\n  var newObject = {};\n  keys.forEach(function (key) {\n    return newObject[key] = spec[key];\n  });\n  return newObject;\n};\n\n// get initialized state\nexport var initializedState = function initializedState(spec) {\n  // spec also contains listRef, trackRef\n  var slideCount = spec.children.length;\n  var listWidth = Math.ceil(getWidth(spec.listRef));\n  var trackWidth = Math.ceil(getWidth(spec.trackRef));\n  var slideWidth = void 0;\n  if (!spec.vertical) {\n    var centerPaddingAdj = spec.centerMode && parseInt(spec.centerPadding) * 2;\n    if (typeof spec.centerPadding === 'string' && spec.centerPadding.slice(-1) === '%') {\n      centerPaddingAdj *= listWidth / 100;\n    }\n    slideWidth = Math.ceil((listWidth - centerPaddingAdj) / spec.slidesToShow);\n  } else {\n    slideWidth = listWidth;\n  }\n  var slideHeight = spec.listRef && getHeight(spec.listRef.querySelector('[data-index=\"0\"]'));\n  var listHeight = slideHeight * spec.slidesToShow;\n  var currentSlide = spec.currentSlide === undefined ? spec.initialSlide : spec.currentSlide;\n  if (spec.rtl && spec.currentSlide === undefined) {\n    currentSlide = slideCount - 1 - spec.initialSlide;\n  }\n  var lazyLoadedList = spec.lazyLoadedList || [];\n  var slidesToLoad = getOnDemandLazySlides({ currentSlide: currentSlide, lazyLoadedList: lazyLoadedList }, spec);\n  lazyLoadedList.concat(slidesToLoad);\n\n  var state = {\n    slideCount: slideCount,\n    slideWidth: slideWidth,\n    listWidth: listWidth,\n    trackWidth: trackWidth,\n    currentSlide: currentSlide,\n    slideHeight: slideHeight,\n    listHeight: listHeight,\n    lazyLoadedList: lazyLoadedList\n  };\n\n  if (spec.autoplaying === null && spec.autoplay) {\n    state['autoplaying'] = 'playing';\n  }\n\n  return state;\n};\n\nexport var slideHandler = function slideHandler(spec) {\n  var waitForAnimate = spec.waitForAnimate,\n      animating = spec.animating,\n      fade = spec.fade,\n      infinite = spec.infinite,\n      index = spec.index,\n      slideCount = spec.slideCount,\n      lazyLoadedList = spec.lazyLoadedList,\n      lazyLoad = spec.lazyLoad,\n      currentSlide = spec.currentSlide,\n      centerMode = spec.centerMode,\n      slidesToScroll = spec.slidesToScroll,\n      slidesToShow = spec.slidesToShow,\n      useCSS = spec.useCSS;\n\n  if (waitForAnimate && animating) return {};\n  var animationSlide = index;\n  var finalSlide = void 0;\n  var animationLeft = void 0;\n  var finalLeft = void 0;\n  var state = {};\n  var nextState = {};\n  if (fade) {\n    if (!infinite && (index < 0 || index >= slideCount)) return {};\n    if (index < 0) {\n      animationSlide = index + slideCount;\n    } else if (index >= slideCount) {\n      animationSlide = index - slideCount;\n    }\n    if (lazyLoad && lazyLoadedList.indexOf(animationSlide) < 0) {\n      lazyLoadedList.push(animationSlide);\n    }\n    state = {\n      animating: true,\n      currentSlide: animationSlide,\n      lazyLoadedList: lazyLoadedList\n    };\n    nextState = { animating: false };\n  } else {\n    finalSlide = animationSlide;\n    if (animationSlide < 0) {\n      finalSlide = animationSlide + slideCount;\n      if (!infinite) finalSlide = 0;else if (slideCount % slidesToScroll !== 0) {\n        finalSlide = slideCount - slideCount % slidesToScroll;\n      }\n    } else if (!canGoNext(spec) && animationSlide > currentSlide) {\n      animationSlide = finalSlide = currentSlide;\n    } else if (centerMode && animationSlide >= slideCount) {\n      animationSlide = infinite ? slideCount : slideCount - 1;\n      finalSlide = infinite ? 0 : slideCount - 1;\n    } else if (animationSlide >= slideCount) {\n      finalSlide = animationSlide - slideCount;\n      if (!infinite) finalSlide = slideCount - slidesToShow;else if (slideCount % slidesToScroll !== 0) finalSlide = 0;\n    }\n    animationLeft = getTrackLeft(_extends({}, spec, { slideIndex: animationSlide }));\n    finalLeft = getTrackLeft(_extends({}, spec, { slideIndex: finalSlide }));\n    if (!infinite) {\n      if (animationLeft === finalLeft) animationSlide = finalSlide;\n      animationLeft = finalLeft;\n    }\n    lazyLoad && lazyLoadedList.concat(getOnDemandLazySlides(_extends({}, spec, { currentSlide: animationSlide })));\n    if (!useCSS) {\n      state = {\n        currentSlide: finalSlide,\n        trackStyle: getTrackCSS(_extends({}, spec, { left: finalLeft })),\n        lazyLoadedList: lazyLoadedList\n      };\n    } else {\n      state = {\n        animating: true,\n        currentSlide: finalSlide,\n        trackStyle: getTrackAnimateCSS(_extends({}, spec, { left: animationLeft })),\n        lazyLoadedList: lazyLoadedList\n      };\n      nextState = {\n        animating: false,\n        currentSlide: finalSlide,\n        trackStyle: getTrackCSS(_extends({}, spec, { left: finalLeft })),\n        swipeLeft: null\n      };\n    }\n  }\n  return { state: state, nextState: nextState };\n};\n\nexport var changeSlide = function changeSlide(spec, options) {\n  var previousInt = void 0,\n      slideOffset = void 0,\n      targetSlide = void 0;\n  var slidesToScroll = spec.slidesToScroll,\n      slidesToShow = spec.slidesToShow,\n      slideCount = spec.slideCount,\n      currentSlide = spec.currentSlide,\n      lazyLoad = spec.lazyLoad,\n      infinite = spec.infinite;\n\n  var unevenOffset = slideCount % slidesToScroll !== 0;\n  var indexOffset = unevenOffset ? 0 : (slideCount - currentSlide) % slidesToScroll;\n\n  if (options.message === 'previous') {\n    slideOffset = indexOffset === 0 ? slidesToScroll : slidesToShow - indexOffset;\n    targetSlide = currentSlide - slideOffset;\n    if (lazyLoad && !infinite) {\n      previousInt = currentSlide - slideOffset;\n      targetSlide = previousInt === -1 ? slideCount - 1 : previousInt;\n    }\n  } else if (options.message === 'next') {\n    slideOffset = indexOffset === 0 ? slidesToScroll : indexOffset;\n    targetSlide = currentSlide + slideOffset;\n    if (lazyLoad && !infinite) {\n      targetSlide = (currentSlide + slidesToScroll) % slideCount + indexOffset;\n    }\n  } else if (options.message === 'dots') {\n    // Click on dots\n    targetSlide = options.index * options.slidesToScroll;\n    if (targetSlide === options.currentSlide) {\n      return null;\n    }\n  } else if (options.message === 'children') {\n    // Click on the slides\n    targetSlide = options.index;\n    if (targetSlide === options.currentSlide) {\n      return null;\n    }\n    if (infinite) {\n      var direction = siblingDirection(_extends({}, spec, { targetSlide: targetSlide }));\n      if (targetSlide > options.currentSlide && direction === 'left') {\n        targetSlide = targetSlide - slideCount;\n      } else if (targetSlide < options.currentSlide && direction === 'right') {\n        targetSlide = targetSlide + slideCount;\n      }\n    }\n  } else if (options.message === 'index') {\n    targetSlide = Number(options.index);\n    if (targetSlide === options.currentSlide) {\n      return null;\n    }\n  }\n  return targetSlide;\n};\nexport var keyHandler = function keyHandler(e, accessibility, rtl) {\n  if (e.target.tagName.match('TEXTAREA|INPUT|SELECT') || !accessibility) {\n    return '';\n  }\n  if (e.keyCode === 37) return rtl ? 'next' : 'previous';\n  if (e.keyCode === 39) return rtl ? 'previous' : 'next';\n  return '';\n};\n\nexport var swipeStart = function swipeStart(e, swipe, draggable) {\n  e.target.tagName === 'IMG' && e.preventDefault();\n  if (!swipe || !draggable && e.type.indexOf('mouse') !== -1) return '';\n  return {\n    dragging: true,\n    touchObject: {\n      startX: e.touches ? e.touches[0].pageX : e.clientX,\n      startY: e.touches ? e.touches[0].pageY : e.clientY,\n      curX: e.touches ? e.touches[0].pageX : e.clientX,\n      curY: e.touches ? e.touches[0].pageY : e.clientY\n    }\n  };\n};\nexport var swipeMove = function swipeMove(e, spec) {\n  // spec also contains, trackRef and slideIndex\n  var scrolling = spec.scrolling,\n      animating = spec.animating,\n      vertical = spec.vertical,\n      swipeToSlide = spec.swipeToSlide,\n      verticalSwiping = spec.verticalSwiping,\n      rtl = spec.rtl,\n      currentSlide = spec.currentSlide,\n      edgeFriction = spec.edgeFriction,\n      edgeDragged = spec.edgeDragged,\n      onEdge = spec.onEdge,\n      swiped = spec.swiped,\n      swiping = spec.swiping,\n      slideCount = spec.slideCount,\n      slidesToScroll = spec.slidesToScroll,\n      infinite = spec.infinite,\n      touchObject = spec.touchObject,\n      swipeEvent = spec.swipeEvent,\n      listHeight = spec.listHeight,\n      listWidth = spec.listWidth;\n\n  if (scrolling) return;\n  if (animating) return e.preventDefault();\n  if (vertical && swipeToSlide && verticalSwiping) e.preventDefault();\n  var swipeLeft = void 0;\n  var state = {};\n  var curLeft = getTrackLeft(spec);\n  touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;\n  touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;\n  touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));\n  var verticalSwipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));\n  if (!verticalSwiping && !swiping && verticalSwipeLength > 10) {\n    return { scrolling: true };\n  }\n  if (verticalSwiping) touchObject.swipeLength = verticalSwipeLength;\n  var positionOffset = (!rtl ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);\n  if (verticalSwiping) {\n    positionOffset = touchObject.curY > touchObject.startY ? 1 : -1;\n  }\n\n  var dotCount = Math.ceil(slideCount / slidesToScroll);\n  var swipeDirection = getSwipeDirection(spec.touchObject, verticalSwiping);\n  var touchSwipeLength = touchObject.swipeLength;\n  if (!infinite) {\n    if (currentSlide === 0 && swipeDirection === 'right' || currentSlide + 1 >= dotCount && swipeDirection === 'left' || !canGoNext(spec) && swipeDirection === 'left') {\n      touchSwipeLength = touchObject.swipeLength * edgeFriction;\n      if (edgeDragged === false && onEdge) {\n        onEdge(swipeDirection);\n        state['edgeDragged'] = true;\n      }\n    }\n  }\n  if (!swiped && swipeEvent) {\n    swipeEvent(swipeDirection);\n    state['swiped'] = true;\n  }\n  if (!vertical) {\n    if (!rtl) {\n      swipeLeft = curLeft + touchSwipeLength * positionOffset;\n    } else {\n      swipeLeft = curLeft - touchSwipeLength * positionOffset;\n    }\n  } else {\n    swipeLeft = curLeft + touchSwipeLength * (listHeight / listWidth) * positionOffset;\n  }\n  if (verticalSwiping) {\n    swipeLeft = curLeft + touchSwipeLength * positionOffset;\n  }\n  state = _extends({}, state, {\n    touchObject: touchObject,\n    swipeLeft: swipeLeft,\n    trackStyle: getTrackCSS(_extends({}, spec, { left: swipeLeft }))\n  });\n  if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {\n    return state;\n  }\n  if (touchObject.swipeLength > 10) {\n    state['swiping'] = true;\n    e.preventDefault();\n  }\n  return state;\n};\nexport var swipeEnd = function swipeEnd(e, spec) {\n  var dragging = spec.dragging,\n      swipe = spec.swipe,\n      touchObject = spec.touchObject,\n      listWidth = spec.listWidth,\n      touchThreshold = spec.touchThreshold,\n      verticalSwiping = spec.verticalSwiping,\n      listHeight = spec.listHeight,\n      currentSlide = spec.currentSlide,\n      swipeToSlide = spec.swipeToSlide,\n      scrolling = spec.scrolling,\n      onSwipe = spec.onSwipe;\n\n  if (!dragging) {\n    if (swipe) e.preventDefault();\n    return {};\n  }\n  var minSwipe = verticalSwiping ? listHeight / touchThreshold : listWidth / touchThreshold;\n  var swipeDirection = getSwipeDirection(touchObject, verticalSwiping);\n  // reset the state of touch related state variables.\n  var state = {\n    dragging: false,\n    edgeDragged: false,\n    scrolling: false,\n    swiping: false,\n    swiped: false,\n    swipeLeft: null,\n    touchObject: {}\n  };\n  if (scrolling) {\n    return state;\n  }\n  if (!touchObject.swipeLength) {\n    return state;\n  }\n  if (touchObject.swipeLength > minSwipe) {\n    e.preventDefault();\n    if (onSwipe) {\n      onSwipe(swipeDirection);\n    }\n    var slideCount = void 0,\n        newSlide = void 0;\n    switch (swipeDirection) {\n      case 'left':\n      case 'up':\n        newSlide = currentSlide + getSlideCount(spec);\n        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;\n        state['currentDirection'] = 0;\n        break;\n      case 'right':\n      case 'down':\n        newSlide = currentSlide - getSlideCount(spec);\n        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;\n        state['currentDirection'] = 1;\n        break;\n      default:\n        slideCount = currentSlide;\n    }\n    state['triggerSlideHandler'] = slideCount;\n  } else {\n    // Adjust the track back to it's original position.\n    var currentLeft = getTrackLeft(spec);\n    state['trackStyle'] = getTrackAnimateCSS(_extends({}, spec, { left: currentLeft }));\n  }\n  return state;\n};\nexport var getNavigableIndexes = function getNavigableIndexes(spec) {\n  var max = spec.infinite ? spec.slideCount * 2 : spec.slideCount;\n  var breakpoint = spec.infinite ? spec.slidesToShow * -1 : 0;\n  var counter = spec.infinite ? spec.slidesToShow * -1 : 0;\n  var indexes = [];\n  while (breakpoint < max) {\n    indexes.push(breakpoint);\n    breakpoint = counter + spec.slidesToScroll;\n    counter += Math.min(spec.slidesToScroll, spec.slidesToShow);\n  }\n  return indexes;\n};\nexport var checkNavigable = function checkNavigable(spec, index) {\n  var navigables = getNavigableIndexes(spec);\n  var prevNavigable = 0;\n  if (index > navigables[navigables.length - 1]) {\n    index = navigables[navigables.length - 1];\n  } else {\n    for (var n in navigables) {\n      if (index < navigables[n]) {\n        index = prevNavigable;\n        break;\n      }\n      prevNavigable = navigables[n];\n    }\n  }\n  return index;\n};\nexport var getSlideCount = function getSlideCount(spec) {\n  var centerOffset = spec.centerMode ? spec.slideWidth * Math.floor(spec.slidesToShow / 2) : 0;\n  if (spec.swipeToSlide) {\n    var swipedSlide = void 0;\n    var slickList = spec.listRef;\n    var slides = slickList.querySelectorAll('.slick-slide');\n    Array.from(slides).every(function (slide) {\n      if (!spec.vertical) {\n        if (slide.offsetLeft - centerOffset + getWidth(slide) / 2 > spec.swipeLeft * -1) {\n          swipedSlide = slide;\n          return false;\n        }\n      } else {\n        if (slide.offsetTop + getHeight(slide) / 2 > spec.swipeLeft * -1) {\n          swipedSlide = slide;\n          return false;\n        }\n      }\n\n      return true;\n    });\n\n    if (!swipedSlide) {\n      return 0;\n    }\n    var currentIndex = spec.rtl === true ? spec.slideCount - spec.currentSlide : spec.currentSlide;\n    var slidesTraversed = Math.abs(swipedSlide.dataset.index - currentIndex) || 1;\n    return slidesTraversed;\n  } else {\n    return spec.slidesToScroll;\n  }\n};\n\nexport var checkSpecKeys = function checkSpecKeys(spec, keysArray) {\n  return keysArray.reduce(function (value, key) {\n    return value && spec.hasOwnProperty(key);\n  }, true) ? null : console.error('Keys Missing:', spec);\n};\n\nexport var getTrackCSS = function getTrackCSS(spec) {\n  checkSpecKeys(spec, ['left', 'variableWidth', 'slideCount', 'slidesToShow', 'slideWidth']);\n  var trackWidth = void 0,\n      trackHeight = void 0;\n  var trackChildren = spec.slideCount + 2 * spec.slidesToShow;\n  if (!spec.vertical) {\n    trackWidth = getTotalSlides(spec) * spec.slideWidth;\n  } else {\n    trackHeight = trackChildren * spec.slideHeight;\n  }\n  var style = {\n    opacity: 1,\n    transition: '',\n    WebkitTransition: ''\n  };\n  if (spec.useTransform) {\n    var WebkitTransform = !spec.vertical ? 'translate3d(' + spec.left + 'px, 0px, 0px)' : 'translate3d(0px, ' + spec.left + 'px, 0px)';\n    var transform = !spec.vertical ? 'translate3d(' + spec.left + 'px, 0px, 0px)' : 'translate3d(0px, ' + spec.left + 'px, 0px)';\n    var msTransform = !spec.vertical ? 'translateX(' + spec.left + 'px)' : 'translateY(' + spec.left + 'px)';\n    style = _extends({}, style, {\n      WebkitTransform: WebkitTransform,\n      transform: transform,\n      msTransform: msTransform\n    });\n  } else {\n    if (spec.vertical) {\n      style['top'] = spec.left;\n    } else {\n      style['left'] = spec.left;\n    }\n  }\n  if (spec.fade) style = { opacity: 1 };\n  if (trackWidth) style.width = trackWidth + 'px';\n  if (trackHeight) style.height = trackHeight + 'px';\n\n  // Fallback for IE8\n  if (window && !window.addEventListener && window.attachEvent) {\n    if (!spec.vertical) {\n      style.marginLeft = spec.left + 'px';\n    } else {\n      style.marginTop = spec.left + 'px';\n    }\n  }\n\n  return style;\n};\nexport var getTrackAnimateCSS = function getTrackAnimateCSS(spec) {\n  checkSpecKeys(spec, ['left', 'variableWidth', 'slideCount', 'slidesToShow', 'slideWidth', 'speed', 'cssEase']);\n  var style = getTrackCSS(spec);\n  // useCSS is true by default so it can be undefined\n  if (spec.useTransform) {\n    style.WebkitTransition = '-webkit-transform ' + spec.speed + 'ms ' + spec.cssEase;\n    style.transition = 'transform ' + spec.speed + 'ms ' + spec.cssEase;\n  } else {\n    if (spec.vertical) {\n      style.transition = 'top ' + spec.speed + 'ms ' + spec.cssEase;\n    } else {\n      style.transition = 'left ' + spec.speed + 'ms ' + spec.cssEase;\n    }\n  }\n  return style;\n};\nexport var getTrackLeft = function getTrackLeft(spec) {\n  if (spec.unslick) {\n    return 0;\n  }\n\n  checkSpecKeys(spec, ['slideIndex', 'trackRef', 'infinite', 'centerMode', 'slideCount', 'slidesToShow', 'slidesToScroll', 'slideWidth', 'listWidth', 'variableWidth', 'slideHeight']);\n\n  var slideIndex = spec.slideIndex,\n      trackRef = spec.trackRef,\n      infinite = spec.infinite,\n      centerMode = spec.centerMode,\n      slideCount = spec.slideCount,\n      slidesToShow = spec.slidesToShow,\n      slidesToScroll = spec.slidesToScroll,\n      slideWidth = spec.slideWidth,\n      listWidth = spec.listWidth,\n      variableWidth = spec.variableWidth,\n      slideHeight = spec.slideHeight,\n      fade = spec.fade,\n      vertical = spec.vertical;\n\n\n  var slideOffset = 0;\n  var targetLeft = void 0;\n  var targetSlide = void 0;\n  var verticalOffset = 0;\n\n  if (fade || spec.slideCount === 1) {\n    return 0;\n  }\n\n  var slidesToOffset = 0;\n  if (infinite) {\n    slidesToOffset = -getPreClones(spec); // bring active slide to the beginning of visual area\n    // if next scroll doesn't have enough children, just reach till the end of original slides instead of shifting slidesToScroll children\n    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {\n      slidesToOffset = -(slideIndex > slideCount ? slidesToShow - (slideIndex - slideCount) : slideCount % slidesToScroll);\n    }\n    // shift current slide to center of the frame\n    if (centerMode) {\n      slidesToOffset += parseInt(slidesToShow / 2);\n    }\n  } else {\n    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {\n      slidesToOffset = slidesToShow - slideCount % slidesToScroll;\n    }\n    if (centerMode) {\n      slidesToOffset = parseInt(slidesToShow / 2);\n    }\n  }\n  slideOffset = slidesToOffset * slideWidth;\n  verticalOffset = slidesToOffset * slideHeight;\n\n  if (!vertical) {\n    targetLeft = slideIndex * slideWidth * -1 + slideOffset;\n  } else {\n    targetLeft = slideIndex * slideHeight * -1 + verticalOffset;\n  }\n\n  if (variableWidth === true) {\n    var targetSlideIndex = void 0;\n    var trackElem = trackRef;\n    targetSlideIndex = slideIndex + getPreClones(spec);\n    targetSlide = trackElem && trackElem.childNodes[targetSlideIndex];\n    targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;\n    if (centerMode === true) {\n      targetSlideIndex = infinite ? slideIndex + getPreClones(spec) : slideIndex;\n      targetSlide = trackElem && trackElem.children[targetSlideIndex];\n      targetLeft = 0;\n      for (var slide = 0; slide < targetSlideIndex; slide++) {\n        targetLeft -= trackElem && trackElem.children[slide] && trackElem.children[slide].offsetWidth;\n      }\n      targetLeft -= parseInt(spec.centerPadding);\n      targetLeft += targetSlide && (listWidth - targetSlide.offsetWidth) / 2;\n    }\n  }\n\n  return targetLeft;\n};\n\nexport var getPreClones = function getPreClones(spec) {\n  if (spec.unslick || !spec.infinite) {\n    return 0;\n  }\n  if (spec.variableWidth) {\n    return spec.slideCount;\n  }\n  return spec.slidesToShow + (spec.centerMode ? 1 : 0);\n};\n\nexport var getPostClones = function getPostClones(spec) {\n  if (spec.unslick || !spec.infinite) {\n    return 0;\n  }\n  return spec.slideCount;\n};\n\nexport var getTotalSlides = function getTotalSlides(spec) {\n  return spec.slideCount === 1 ? 1 : getPreClones(spec) + spec.slideCount + getPostClones(spec);\n};\nexport var siblingDirection = function siblingDirection(spec) {\n  if (spec.targetSlide > spec.currentSlide) {\n    if (spec.targetSlide > spec.currentSlide + slidesOnRight(spec)) {\n      return 'left';\n    }\n    return 'right';\n  } else {\n    if (spec.targetSlide < spec.currentSlide - slidesOnLeft(spec)) {\n      return 'right';\n    }\n    return 'left';\n  }\n};\n\nexport var slidesOnRight = function slidesOnRight(_ref) {\n  var slidesToShow = _ref.slidesToShow,\n      centerMode = _ref.centerMode,\n      rtl = _ref.rtl,\n      centerPadding = _ref.centerPadding;\n\n  // returns no of slides on the right of active slide\n  if (centerMode) {\n    var right = (slidesToShow - 1) / 2 + 1;\n    if (parseInt(centerPadding) > 0) right += 1;\n    if (rtl && slidesToShow % 2 === 0) right += 1;\n    return right;\n  }\n  if (rtl) {\n    return 0;\n  }\n  return slidesToShow - 1;\n};\n\nexport var slidesOnLeft = function slidesOnLeft(_ref2) {\n  var slidesToShow = _ref2.slidesToShow,\n      centerMode = _ref2.centerMode,\n      rtl = _ref2.rtl,\n      centerPadding = _ref2.centerPadding;\n\n  // returns no of slides on the left of active slide\n  if (centerMode) {\n    var left = (slidesToShow - 1) / 2 + 1;\n    if (parseInt(centerPadding) > 0) left += 1;\n    if (!rtl && slidesToShow % 2 === 0) left += 1;\n    return left;\n  }\n  if (rtl) {\n    return slidesToShow - 1;\n  }\n  return 0;\n};\n\nexport var canUseDOM = function canUseDOM() {\n  return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n};"],"sourceRoot":""}