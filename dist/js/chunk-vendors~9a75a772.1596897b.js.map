{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-tabs/src/ScrollableTabBarNode.js"],"names":["babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2___default","add_dom_event_listener__WEBPACK_IMPORTED_MODULE_3__","add_dom_event_listener__WEBPACK_IMPORTED_MODULE_3___default","lodash_debounce__WEBPACK_IMPORTED_MODULE_4__","lodash_debounce__WEBPACK_IMPORTED_MODULE_4___default","_util_vue_types__WEBPACK_IMPORTED_MODULE_5__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_6__","_util_props_util__WEBPACK_IMPORTED_MODULE_7__","_utils__WEBPACK_IMPORTED_MODULE_8__","noop","__webpack_exports__","name","mixins","props","saveRef","func","def","getRef","tabBarPosition","oneOf","prefixCls","string","scrollAnimated","bool","navWrapper","arg","activeKey","any","prevIcon","nextIcon","data","this","offset","prevProps","$props","next","prev","watch","_this","tabBarPositionChange","$nextTick","setOffset","mounted","_this2","updatedCal","debouncedResize","setNextPrev","scrollToActiveTab","resizeEvent","window","updated","_this3","beforeDestroy","remove","cancel","methods","_this4","isNextPrevShown","$data","$forceUpdate","navNode","navTabsContainer","navNodeWH","getScrollWH","containerWH","getOffsetWH","navWrapNodeWH","minOffset","realOffset","setNext","setPrev","node","prop","getOffsetLT","getBoundingClientRect","checkNextPrev","arguments","length","undefined","target","Math","min","navOffset","navStyle","style","transformSupported","Object","value","v","state","prevTransitionEnd","e","propertyName","container","currentTarget","activeTab","navWrap","needToSroll","lastNextPrevShown","activeTabWH","wrapOffset","activeTabOffset","prevClick","__emit","navWrapNode","nextClick","render","_ref","_ref2","_navClasses","_ref3","h","_$props","showNextPrev","prevButton","on","click","transitionend","attrs","unselectable","class","nextButton","navClassName","navClasses","key","directives","$slots"],"mappings":"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","file":"js/chunk-vendors~9a75a772.1596897b.js","sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport addDOMEventListener from 'add-dom-event-listener';\nimport debounce from 'lodash/debounce';\nimport PropTypes from '../../_util/vue-types';\nimport BaseMixin from '../../_util/BaseMixin';\nimport { getComponentFromProp } from '../../_util/props-util';\nimport { setTransform, isTransformSupported } from './utils';\n\nfunction noop() {}\nexport default {\n  name: 'ScrollableTabBarNode',\n  mixins: [BaseMixin],\n  props: {\n    saveRef: PropTypes.func.def(function () {}),\n    getRef: PropTypes.func.def(function () {}),\n    tabBarPosition: PropTypes.oneOf(['left', 'right', 'top', 'bottom']).def('left'),\n    prefixCls: PropTypes.string.def(''),\n    scrollAnimated: PropTypes.bool.def(true),\n    navWrapper: PropTypes.func.def(function (arg) {\n      return arg;\n    }),\n    activeKey: PropTypes.any,\n    prevIcon: PropTypes.any,\n    nextIcon: PropTypes.any\n  },\n\n  data: function data() {\n    this.offset = 0;\n    this.prevProps = _extends({}, this.$props);\n    return {\n      next: false,\n      prev: false\n    };\n  },\n\n  watch: {\n    tabBarPosition: function tabBarPosition() {\n      var _this = this;\n\n      this.tabBarPositionChange = true;\n      this.$nextTick(function () {\n        _this.setOffset(0);\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      _this2.updatedCal();\n      _this2.debouncedResize = debounce(function () {\n        _this2.setNextPrev();\n        _this2.scrollToActiveTab();\n      }, 200);\n      _this2.resizeEvent = addDOMEventListener(window, 'resize', _this2.debouncedResize);\n    });\n  },\n  updated: function updated() {\n    var _this3 = this;\n\n    this.$nextTick(function () {\n      _this3.updatedCal(_this3.prevProps);\n      _this3.prevProps = _extends({}, _this3.$props);\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.resizeEvent) {\n      this.resizeEvent.remove();\n    }\n    if (this.debouncedResize && this.debouncedResize.cancel) {\n      this.debouncedResize.cancel();\n    }\n  },\n\n  methods: {\n    updatedCal: function updatedCal(prevProps) {\n      var _this4 = this;\n\n      var props = this.$props;\n      if (prevProps && prevProps.tabBarPosition !== props.tabBarPosition) {\n        this.setOffset(0);\n        return;\n      }\n      // wait next, prev show hide\n      /* eslint react/no-did-update-set-state:0 */\n      if (this.isNextPrevShown(this.$data) !== this.isNextPrevShown(this.setNextPrev())) {\n        this.$forceUpdate();\n        this.$nextTick(function () {\n          _this4.scrollToActiveTab();\n        });\n      } else if (!prevProps || props.activeKey !== prevProps.activeKey) {\n        // can not use props.activeKey\n        this.scrollToActiveTab();\n      }\n    },\n    setNextPrev: function setNextPrev() {\n      var navNode = this.$props.getRef('nav');\n      var navTabsContainer = this.$props.getRef('navTabsContainer');\n      var navNodeWH = this.getScrollWH(navTabsContainer || navNode);\n      // Add 1px to fix `offsetWidth` with decimal in Chrome not correct handle\n      // https://github.com/ant-design/ant-design/issues/13423\n      var containerWH = this.getOffsetWH(this.$props.getRef('container')) + 1;\n      var navWrapNodeWH = this.getOffsetWH(this.$props.getRef('navWrap'));\n      var offset = this.offset;\n\n      var minOffset = containerWH - navNodeWH;\n      var next = this.next,\n          prev = this.prev;\n\n      if (minOffset >= 0) {\n        next = false;\n        this.setOffset(0, false);\n        offset = 0;\n      } else if (minOffset < offset) {\n        next = true;\n      } else {\n        next = false;\n        // Fix https://github.com/ant-design/ant-design/issues/8861\n        // Test with container offset which is stable\n        // and set the offset of the nav wrap node\n        var realOffset = navWrapNodeWH - navNodeWH;\n        this.setOffset(realOffset, false);\n        offset = realOffset;\n      }\n\n      if (offset < 0) {\n        prev = true;\n      } else {\n        prev = false;\n      }\n\n      this.setNext(next);\n      this.setPrev(prev);\n      return {\n        next: next,\n        prev: prev\n      };\n    },\n    getOffsetWH: function getOffsetWH(node) {\n      var tabBarPosition = this.$props.tabBarPosition;\n      var prop = 'offsetWidth';\n      if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n        prop = 'offsetHeight';\n      }\n      return node[prop];\n    },\n    getScrollWH: function getScrollWH(node) {\n      var tabBarPosition = this.tabBarPosition;\n      var prop = 'scrollWidth';\n      if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n        prop = 'scrollHeight';\n      }\n      return node[prop];\n    },\n    getOffsetLT: function getOffsetLT(node) {\n      var tabBarPosition = this.$props.tabBarPosition;\n      var prop = 'left';\n      if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n        prop = 'top';\n      }\n      return node.getBoundingClientRect()[prop];\n    },\n    setOffset: function setOffset(offset) {\n      var checkNextPrev = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      var target = Math.min(0, offset);\n      if (this.offset !== target) {\n        this.offset = target;\n        var navOffset = {};\n        var tabBarPosition = this.$props.tabBarPosition;\n        var navStyle = this.$props.getRef('nav').style;\n        var transformSupported = isTransformSupported(navStyle);\n        if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n          if (transformSupported) {\n            navOffset = {\n              value: 'translate3d(0,' + target + 'px,0)'\n            };\n          } else {\n            navOffset = {\n              name: 'top',\n              value: target + 'px'\n            };\n          }\n        } else if (transformSupported) {\n          navOffset = {\n            value: 'translate3d(' + target + 'px,0,0)'\n          };\n        } else {\n          navOffset = {\n            name: 'left',\n            value: target + 'px'\n          };\n        }\n        if (transformSupported) {\n          setTransform(navStyle, navOffset.value);\n        } else {\n          navStyle[navOffset.name] = navOffset.value;\n        }\n        if (checkNextPrev) {\n          this.setNextPrev();\n        }\n      }\n    },\n    setPrev: function setPrev(v) {\n      if (this.prev !== v) {\n        this.prev = v;\n      }\n    },\n    setNext: function setNext(v) {\n      if (!v) {\n        // debugger\n      }\n      if (this.next !== v) {\n        this.next = v;\n      }\n    },\n    isNextPrevShown: function isNextPrevShown(state) {\n      if (state) {\n        return state.next || state.prev;\n      }\n      return this.next || this.prev;\n    },\n    prevTransitionEnd: function prevTransitionEnd(e) {\n      if (e.propertyName !== 'opacity') {\n        return;\n      }\n      var container = this.$props.getRef('container');\n      this.scrollToActiveTab({\n        target: container,\n        currentTarget: container\n      });\n    },\n    scrollToActiveTab: function scrollToActiveTab(e) {\n      var activeTab = this.$props.getRef('activeTab');\n      var navWrap = this.$props.getRef('navWrap');\n      if (e && e.target !== e.currentTarget || !activeTab) {\n        return;\n      }\n\n      // when not scrollable or enter scrollable first time, don't emit scrolling\n      var needToSroll = this.isNextPrevShown() && this.lastNextPrevShown;\n      this.lastNextPrevShown = this.isNextPrevShown();\n      if (!needToSroll) {\n        return;\n      }\n\n      var activeTabWH = this.getScrollWH(activeTab);\n      var navWrapNodeWH = this.getOffsetWH(navWrap);\n      var offset = this.offset;\n\n      var wrapOffset = this.getOffsetLT(navWrap);\n      var activeTabOffset = this.getOffsetLT(activeTab);\n      if (wrapOffset > activeTabOffset) {\n        offset += wrapOffset - activeTabOffset;\n        this.setOffset(offset);\n      } else if (wrapOffset + navWrapNodeWH < activeTabOffset + activeTabWH) {\n        offset -= activeTabOffset + activeTabWH - (wrapOffset + navWrapNodeWH);\n        this.setOffset(offset);\n      }\n    },\n    prevClick: function prevClick(e) {\n      this.__emit('prevClick', e);\n      var navWrapNode = this.$props.getRef('navWrap');\n      var navWrapNodeWH = this.getOffsetWH(navWrapNode);\n      var offset = this.offset;\n\n      this.setOffset(offset + navWrapNodeWH);\n    },\n    nextClick: function nextClick() {\n      // this.__emit('nextClick', e)\n      var navWrapNode = this.$props.getRef('navWrap');\n      var navWrapNodeWH = this.getOffsetWH(navWrapNode);\n      var offset = this.offset;\n\n      this.setOffset(offset - navWrapNodeWH);\n    }\n  },\n  render: function render() {\n    var _ref, _ref2, _navClasses, _ref3;\n\n    var h = arguments[0];\n    var next = this.next,\n        prev = this.prev;\n    var _$props = this.$props,\n        prefixCls = _$props.prefixCls,\n        scrollAnimated = _$props.scrollAnimated,\n        navWrapper = _$props.navWrapper;\n\n    var prevIcon = getComponentFromProp(this, 'prevIcon');\n    var nextIcon = getComponentFromProp(this, 'nextIcon');\n    var showNextPrev = prev || next;\n\n    var prevButton = h(\n      'span',\n      {\n        on: {\n          'click': prev ? this.prevClick : noop,\n          'transitionend': this.prevTransitionEnd\n        },\n        attrs: {\n          unselectable: 'unselectable'\n        },\n        'class': (_ref = {}, _defineProperty(_ref, prefixCls + '-tab-prev', 1), _defineProperty(_ref, prefixCls + '-tab-btn-disabled', !prev), _defineProperty(_ref, prefixCls + '-tab-arrow-show', showNextPrev), _ref)\n      },\n      [prevIcon || h('span', { 'class': prefixCls + '-tab-prev-icon' })]\n    );\n\n    var nextButton = h(\n      'span',\n      {\n        on: {\n          'click': next ? this.nextClick : noop\n        },\n        attrs: {\n          unselectable: 'unselectable'\n        },\n        'class': (_ref2 = {}, _defineProperty(_ref2, prefixCls + '-tab-next', 1), _defineProperty(_ref2, prefixCls + '-tab-btn-disabled', !next), _defineProperty(_ref2, prefixCls + '-tab-arrow-show', showNextPrev), _ref2)\n      },\n      [nextIcon || h('span', { 'class': prefixCls + '-tab-next-icon' })]\n    );\n\n    var navClassName = prefixCls + '-nav';\n    var navClasses = (_navClasses = {}, _defineProperty(_navClasses, navClassName, true), _defineProperty(_navClasses, scrollAnimated ? navClassName + '-animated' : navClassName + '-no-animated', true), _navClasses);\n\n    return h(\n      'div',\n      _mergeJSXProps([{\n        'class': (_ref3 = {}, _defineProperty(_ref3, prefixCls + '-nav-container', 1), _defineProperty(_ref3, prefixCls + '-nav-container-scrolling', showNextPrev), _ref3),\n        key: 'container'\n      }, {\n        directives: [{\n          name: 'ant-ref',\n          value: this.saveRef('container')\n        }]\n      }]),\n      [prevButton, nextButton, h(\n        'div',\n        _mergeJSXProps([{\n          'class': prefixCls + '-nav-wrap'\n        }, {\n          directives: [{\n            name: 'ant-ref',\n            value: this.saveRef('navWrap')\n          }]\n        }]),\n        [h(\n          'div',\n          { 'class': prefixCls + '-nav-scroll' },\n          [h(\n            'div',\n            _mergeJSXProps([{\n              'class': navClasses\n            }, {\n              directives: [{\n                name: 'ant-ref',\n                value: this.saveRef('nav')\n              }]\n            }]),\n            [navWrapper(this.$slots['default'])]\n          )]\n        )]\n      )]\n    );\n  }\n};"],"sourceRoot":""}