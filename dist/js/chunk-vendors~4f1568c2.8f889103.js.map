{"version":3,"sources":["webpack:///./node_modules/moment/locale/uk.js"],"names":["global","factory","__webpack_require__","this","moment","plural","word","num","forms","split","relativeTimeWithPlural","number","withoutSuffix","key","format","ss","mm","hh","dd","MM","yy","weekdaysCaseReplace","m","weekdays","nominative","accusative","genitive","slice","concat","nounCase","test","day","processHoursFunction","str","hours","uk","defineLocale","months","standalone","monthsShort","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","lastDay","nextWeek","lastWeek","call","sameElse","relativeTime","future","past","s","h","d","M","y","meridiemParse","isPM","input","meridiem","hour","minute","isLower","dayOfMonthOrdinalParse","ordinal","period","week","dow","doy"],"mappings":"4GAEC,SAAAA,EAAAC,GAEsCA,EAAWC,EAAQ,UAFzD,CAKAC,EAAA,SAAAC,GAA2B,aAG5B,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAG,MAAA,KACA,OAAAF,EAAA,QAAAA,EAAA,SAAAC,EAAA,GAAAD,EAAA,OAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,SAAAC,EAAA,GAAAA,EAAA,GAEA,SAAAE,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,CACAC,GAAAH,EAAA,kDACAI,GAAAJ,EAAA,kDACAK,GAAAL,EAAA,4CACAM,GAAA,gBACAC,GAAA,wBACAC,GAAA,kBAEA,YAAAP,EACAD,EAAA,oBAEA,MAAAC,EACAD,EAAA,kBAGAD,EAAA,IAAAN,EAAAS,EAAAD,IAAAF,GAGA,SAAAU,EAAAC,EAAAR,GACA,IAAAS,EAAA,CACAC,WAAA,0DAAAf,MAAA,KACAgB,WAAA,0DAAAhB,MAAA,KACAiB,SAAA,4DAAAjB,MAAA,MAGA,QAAAa,EACA,OAAAC,EAAA,cAAAI,MAAA,KAAAC,OAAAL,EAAA,cAAAI,MAAA,MAEA,IAAAL,EACA,OAAAC,EAAA,cAGA,IAAAM,EAAA,qBAAAC,KAAAhB,GACA,aACA,sCAAAgB,KAAAhB,GACA,WACA,aACA,OAAAS,EAAAM,GAAAP,EAAAS,OAEA,SAAAC,EAAAC,GACA,kBACA,OAAAA,EAAA,UAAA9B,KAAA+B,QAAA,gBAIA,IAAAC,EAAA/B,EAAAgC,aAAA,MACAC,OAAA,CACAvB,OAAA,yFAAAL,MAAA,KACA6B,WAAA,iGAAA7B,MAAA,MAEA8B,YAAA,yDAAA9B,MAAA,KACAc,SAAAF,EACAmB,cAAA,uBAAA/B,MAAA,KACAgC,YAAA,uBAAAhC,MAAA,KACAiC,eAAA,CACAC,GAAA,QACAC,IAAA,WACAC,EAAA,aACAC,GAAA,iBACAC,IAAA,wBACAC,KAAA,+BAEAC,SAAA,CACAC,QAAAlB,EAAA,cACAmB,QAAAnB,EAAA,YACAoB,QAAApB,EAAA,WACAqB,SAAArB,EAAA,cACAsB,SAAA,WACA,OAAAnD,KAAA4B,OACA,OACA,OACA,OACA,OACA,OAAAC,EAAA,oBAAAuB,KAAApD,MACA,OACA,OACA,OACA,OAAA6B,EAAA,qBAAAuB,KAAApD,QAGAqD,SAAA,KAEAC,aAAA,CACAC,OAAA,QACAC,KAAA,UACAC,EAAA,kBACA7C,GAAAL,EACAY,EAAAZ,EACAM,GAAAN,EACAmD,EAAA,SACA5C,GAAAP,EACAoD,EAAA,OACA5C,GAAAR,EACAqD,EAAA,SACA5C,GAAAT,EACAsD,EAAA,MACA5C,GAAAV,GAGAuD,cAAA,wBACAC,KAAA,SAAAC,GACA,uBAAArC,KAAAqC,IAEAC,SAAA,SAAAC,EAAAC,EAAAC,GACA,OAAAF,EAAA,EACA,OACaA,EAAA,GACb,QACaA,EAAA,GACb,MAEA,UAGAG,uBAAA,iBACAC,QAAA,SAAA9D,EAAA+D,GACA,OAAAA,GACA,QACA,QACA,UACA,QACA,QACA,OAAA/D,EAAA,KACA,QACA,OAAAA,EAAA,MACA,QACA,OAAAA,IAGAgE,KAAA,CACAC,IAAA,EACAC,IAAA,KAIA,OAAA1C","file":"js/chunk-vendors~4f1568c2.8f889103.js","sourcesContent":["//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n            'dd': 'день_дні_днів',\n            'MM': 'місяць_місяці_місяців',\n            'yy': 'рік_роки_років'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n        };\n\n        if (m === true) {\n            return weekdays['nominative'].slice(1, 7).concat(weekdays['nominative'].slice(0, 1));\n        }\n        if (!m) {\n            return weekdays['nominative'];\n        }\n\n        var nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n            'accusative' :\n            ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n                'genitive' :\n                'nominative');\n        return weekdays[nounCase][m.day()];\n    }\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    var uk = moment.defineLocale('uk', {\n        months : {\n            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n        },\n        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY р.',\n            LLL : 'D MMMM YYYY р., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY р., HH:mm'\n        },\n        calendar : {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return processHoursFunction('[Минулої] dddd [').call(this);\n                    case 1:\n                    case 2:\n                    case 4:\n                        return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past : '%s тому',\n            s : 'декілька секунд',\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'годину',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'місяць',\n            MM : relativeTimeWithPlural,\n            y : 'рік',\n            yy : relativeTimeWithPlural\n        },\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n        meridiemParse: /ночі|ранку|дня|вечора/,\n        isPM: function (input) {\n            return /^(дня|вечора)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return uk;\n\n})));\n"],"sourceRoot":""}