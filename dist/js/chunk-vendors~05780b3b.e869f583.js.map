{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-input-number/src/index.js"],"names":["babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","_util_vue_types__WEBPACK_IMPORTED_MODULE_2__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_3__","_util_props_util__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","is_negative_zero__WEBPACK_IMPORTED_MODULE_6__","is_negative_zero__WEBPACK_IMPORTED_MODULE_6___default","_util_KeyCode__WEBPACK_IMPORTED_MODULE_7__","_InputHandler__WEBPACK_IMPORTED_MODULE_8__","noop","preventDefault","e","defaultParser","input","replace","SPEED","DELAY","MAX_SAFE_INTEGER","Number","Math","pow","inputNumberProps","value","oneOfType","number","string","defaultValue","focusOnUpDown","bool","autoFocus","prefixCls","tabIndex","placeholder","disabled","readOnly","max","min","step","upHandler","any","downHandler","useTouch","formatter","func","parser","precision","required","pattern","decimalSeparator","autoComplete","title","__webpack_exports__","name","mixins","model","prop","event","props","Object","data","this","toNumber","inputValue","toPrecisionAsStep","sValue","focused","mounted","_this","$nextTick","focus","updatedFunc","beforeUpdate","_this2","start","$refs","inputRef","selectionStart","end","selectionEnd","updated","_this3","beforeDestroy","stop","watch","val","getValidValue","setState","inputting","nextValue","__emit","methods","inputElem","undefined","cursorStart","partRestoreByAfter","cursorAfter","currentValue","lastKeyCode","BACKSPACE","fixCaret","DELETE","pos","length","pressingUpOrDown","document","activeElement","onKeyDown","keyCode","UP","ratio","getRatio","up","DOWN","_ratio","down","recordCursorPosition","_len","arguments","args","Array","_key","$emit","apply","concat","onKeyUp","_len2","_key2","onChange","getValueFromEvent","toNumberWhenUserInput","onFocus","_len3","_key3","onBlur","_this4","_len4","_key4","getCurrentValidValue","setValue","isNotCompleteNumber","parseFloat","metaKey","ctrlKey","shiftKey","target","trim","isNaN","v","callback","newValue","changed","getPrecision","valueString","toString","indexOf","parseInt","slice","getMaxPrecision","ratioPrecision","stepPrecision","currentValuePrecision","getPrecisionFactor","getInputDisplayValue","inputDisplayValue","cursorEnd","cursorBefore","substring","currentStart","currentEnd","setSelectionRange","restoreByAfter","str","fullStr","index","lastIndexOf","_this5","prototype","some","call","_","partStr","blur","formatWrapper","num","abs","toFixed","test","upStep","rat","precisionFactor","result","Infinity","downStep","stepFn","type","_this6","recursive","outOfRange","autoStepTimer","setTimeout","clearTimeout","handleInputClick","render","_classNames","h","_$props","$props","classes","upDisabledClass","downDisabledClass","editable","upEvents","downEvents","touchstart","touchend","mousedown","mouseup","mouseleave","inputDisplayValueFormat","isUpDisabled","isDownDisabled","_$listeners","$listeners","_$listeners$mouseente","mouseenter","_$listeners$mouseleav","_$listeners$mouseover","mouseover","_$listeners$mouseout","mouseout","contentProps","on","class","attrs","upHandlerProps","unselectable","role","aria-label","aria-disabled","ref","downHandlerProps","click","aria-valuemin","aria-valuemax","aria-valuenow","maxLength","id","keydown","keyup","domProps"],"mappings":"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","file":"js/chunk-vendors~05780b3b.e869f583.js","sourcesContent":["import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\n// based on rc-input-number 4.3.8\nimport PropTypes from '../../_util/vue-types';\nimport BaseMixin from '../../_util/BaseMixin';\nimport { initDefaultProps, hasProp, getOptionProps } from '../../_util/props-util';\nimport classNames from 'classnames';\nimport isNegativeZero from 'is-negative-zero';\nimport KeyCode from '../../_util/KeyCode';\nimport InputHandler from './InputHandler';\n\nfunction noop() {}\n\nfunction preventDefault(e) {\n  e.preventDefault();\n}\n\nfunction defaultParser(input) {\n  return input.replace(/[^\\w\\.-]+/g, '');\n}\n\n/**\n * When click and hold on a button - the speed of auto changin the value.\n */\nvar SPEED = 200;\n\n/**\n * When click and hold on a button - the delay before auto changin the value.\n */\nvar DELAY = 600;\n\n/**\n * Max Safe Integer -- on IE this is not available, so manually set the number in that case.\n * The reason this is used, instead of Infinity is because numbers above the MSI are unstable\n */\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\nvar inputNumberProps = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  focusOnUpDown: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  // onChange: PropTypes.func,\n  // onKeyDown: PropTypes.func,\n  // onKeyUp: PropTypes.func,\n  prefixCls: PropTypes.string,\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  // onFocus: PropTypes.func,\n  // onBlur: PropTypes.func,\n  readOnly: PropTypes.bool,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  step: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  upHandler: PropTypes.any,\n  downHandler: PropTypes.any,\n  useTouch: PropTypes.bool,\n  formatter: PropTypes.func,\n  parser: PropTypes.func,\n  // onMouseEnter: PropTypes.func,\n  // onMouseLeave: PropTypes.func,\n  // onMouseOver: PropTypes.func,\n  // onMouseOut: PropTypes.func,\n  precision: PropTypes.number,\n  required: PropTypes.bool,\n  pattern: PropTypes.string,\n  decimalSeparator: PropTypes.string,\n  autoComplete: PropTypes.string,\n  title: PropTypes.string\n};\n\nexport default {\n  name: 'InputNumber',\n  mixins: [BaseMixin],\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: initDefaultProps(inputNumberProps, {\n    focusOnUpDown: true,\n    useTouch: false,\n    prefixCls: 'rc-input-number',\n    min: -MAX_SAFE_INTEGER,\n    step: 1,\n    parser: defaultParser,\n    required: false,\n    autoComplete: 'off'\n  }),\n  data: function data() {\n    var value = void 0;\n    if (hasProp(this, 'value')) {\n      value = this.value;\n    } else {\n      value = this.defaultValue;\n    }\n    value = this.toNumber(value);\n\n    return {\n      inputValue: this.toPrecisionAsStep(value),\n      sValue: value,\n      focused: this.autoFocus\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      if (_this.autoFocus && !_this.disabled) {\n        _this.focus();\n      }\n      _this.updatedFunc();\n    });\n  },\n  beforeUpdate: function beforeUpdate() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      try {\n        _this2.start = _this2.$refs.inputRef.selectionStart;\n        _this2.end = _this2.$refs.inputRef.selectionEnd;\n      } catch (e) {\n        // Fix error in Chrome:\n        // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n        // http://stackoverflow.com/q/21177489/3040605\n      }\n    });\n  },\n  updated: function updated() {\n    var _this3 = this;\n\n    this.$nextTick(function () {\n      _this3.updatedFunc();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.stop();\n  },\n\n  watch: {\n    value: function value(val) {\n      var value = this.focused ? val : this.getValidValue(val, this.min, this.max);\n      this.setState({\n        sValue: val,\n        inputValue: this.inputting ? value : this.toPrecisionAsStep(value)\n      });\n    },\n    max: function max(val) {\n      var props = getOptionProps(this);\n      // Trigger onChange when max or min change\n      // https://github.com/ant-design/ant-design/issues/11574\n      var nextValue = 'value' in props ? props.value : this.sValue;\n      // ref: null < 20 === true\n      // https://github.com/ant-design/ant-design/issues/14277\n      if (typeof nextValue === 'number' && nextValue > val) {\n        this.__emit('change', val);\n      }\n    },\n    min: function min(val) {\n      var props = getOptionProps(this);\n      var nextValue = 'value' in props ? props.value : this.sValue;\n      if (typeof nextValue === 'number' && nextValue < val) {\n        this.__emit('change', val);\n      }\n    }\n  },\n  methods: {\n    updatedFunc: function updatedFunc() {\n      var inputElem = this.$refs.inputRef;\n      // Restore cursor\n      try {\n        // Firefox set the input cursor after it get focused.\n        // This caused that if an input didn't init with the selection,\n        // set will cause cursor not correct when first focus.\n        // Safari will focus input if set selection. We need skip this.\n        if (this.cursorStart !== undefined && this.focused) {\n          // In most cases, the string after cursor is stable.\n          // We can move the cursor before it\n\n          if (\n          // If not match full str, try to match part of str\n          !this.partRestoreByAfter(this.cursorAfter) && this.sValue !== this.value) {\n            // If not match any of then, let's just keep the position\n            // TODO: Logic should not reach here, need check if happens\n            var pos = this.cursorStart + 1;\n\n            // If not have last string, just position to the end\n            if (!this.cursorAfter) {\n              pos = inputElem.value.length;\n            } else if (this.lastKeyCode === KeyCode.BACKSPACE) {\n              pos = this.cursorStart - 1;\n            } else if (this.lastKeyCode === KeyCode.DELETE) {\n              pos = this.cursorStart;\n            }\n            this.fixCaret(pos, pos);\n          } else if (this.currentValue === inputElem.value) {\n            // Handle some special key code\n            switch (this.lastKeyCode) {\n              case KeyCode.BACKSPACE:\n                this.fixCaret(this.cursorStart - 1, this.cursorStart - 1);\n                break;\n              case KeyCode.DELETE:\n                this.fixCaret(this.cursorStart + 1, this.cursorStart + 1);\n                break;\n              default:\n              // Do nothing\n            }\n          }\n        }\n      } catch (e) {}\n      // Do nothing\n\n      // Reset last key\n      this.lastKeyCode = null;\n\n      // pressingUpOrDown is true means that someone just click up or down button\n      if (!this.pressingUpOrDown) {\n        return;\n      }\n      if (this.focusOnUpDown && this.focused) {\n        if (document.activeElement !== inputElem) {\n          this.focus();\n        }\n      }\n\n      this.pressingUpOrDown = false;\n    },\n    onKeyDown: function onKeyDown(e) {\n      if (e.keyCode === KeyCode.UP) {\n        var ratio = this.getRatio(e);\n        this.up(e, ratio);\n        this.stop();\n      } else if (e.keyCode === KeyCode.DOWN) {\n        var _ratio = this.getRatio(e);\n        this.down(e, _ratio);\n        this.stop();\n      }\n      // Trigger user key down\n      this.recordCursorPosition();\n      this.lastKeyCode = e.keyCode;\n\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      this.$emit.apply(this, ['keydown', e].concat(_toConsumableArray(args)));\n    },\n    onKeyUp: function onKeyUp(e) {\n      this.stop();\n\n      this.recordCursorPosition();\n\n      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      this.$emit.apply(this, ['keyup', e].concat(_toConsumableArray(args)));\n    },\n    onChange: function onChange(e) {\n      if (this.focused) {\n        this.inputting = true;\n      }\n      var input = this.parser(this.getValueFromEvent(e));\n      this.setState({ inputValue: input });\n      this.$emit('change', this.toNumberWhenUserInput(input)); // valid number or invalid string\n    },\n    onFocus: function onFocus() {\n      this.setState({\n        focused: true\n      });\n\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this.$emit.apply(this, ['focus'].concat(_toConsumableArray(args)));\n    },\n    onBlur: function onBlur(e) {\n      var _this4 = this;\n\n      for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n\n      this.inputting = false;\n      this.setState({\n        focused: false\n      });\n      var value = this.getCurrentValidValue(this.inputValue);\n      // todo\n      // e.persist() // fix https://github.com/react-component/input-number/issues/51\n      this.setValue(value, function () {\n        _this4.$emit.apply(_this4, ['blur', e].concat(_toConsumableArray(args)));\n      });\n    },\n    getCurrentValidValue: function getCurrentValidValue(value) {\n      var val = value;\n      if (val === '') {\n        val = '';\n      } else if (!this.isNotCompleteNumber(parseFloat(val, 10))) {\n        val = this.getValidValue(val);\n      } else {\n        val = this.sValue;\n      }\n      return this.toNumber(val);\n    },\n    getRatio: function getRatio(e) {\n      var ratio = 1;\n      if (e.metaKey || e.ctrlKey) {\n        ratio = 0.1;\n      } else if (e.shiftKey) {\n        ratio = 10;\n      }\n      return ratio;\n    },\n    getValueFromEvent: function getValueFromEvent(e) {\n      // optimize for chinese input expierence\n      // https://github.com/ant-design/ant-design/issues/8196\n      var value = e.target.value.trim().replace(/。/g, '.');\n\n      if (this.decimalSeparator !== undefined) {\n        value = value.replace(this.decimalSeparator, '.');\n      }\n\n      return value;\n    },\n    getValidValue: function getValidValue(value) {\n      var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.min;\n      var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.max;\n\n      var val = parseFloat(value, 10);\n      // https://github.com/ant-design/ant-design/issues/7358\n      if (isNaN(val)) {\n        return value;\n      }\n      if (val < min) {\n        val = min;\n      }\n      if (val > max) {\n        val = max;\n      }\n      return val;\n    },\n    setValue: function setValue(v, callback) {\n      // trigger onChange\n      var newValue = this.isNotCompleteNumber(parseFloat(v, 10)) ? undefined : parseFloat(v, 10);\n      var changed = newValue !== this.sValue || '' + newValue !== '' + this.inputValue; // https://github.com/ant-design/ant-design/issues/7363\n      if (!hasProp(this, 'value')) {\n        this.setState({\n          sValue: newValue,\n          inputValue: this.toPrecisionAsStep(v)\n        }, callback);\n      } else {\n        // always set input value same as value\n        this.setState({\n          inputValue: this.toPrecisionAsStep(this.sValue)\n        }, callback);\n      }\n      if (changed) {\n        this.$emit('change', newValue);\n      }\n    },\n    getPrecision: function getPrecision(value) {\n      if (hasProp(this, 'precision')) {\n        return this.precision;\n      }\n      var valueString = value.toString();\n      if (valueString.indexOf('e-') >= 0) {\n        return parseInt(valueString.slice(valueString.indexOf('e-') + 2), 10);\n      }\n      var precision = 0;\n      if (valueString.indexOf('.') >= 0) {\n        precision = valueString.length - valueString.indexOf('.') - 1;\n      }\n      return precision;\n    },\n\n    // step={1.0} value={1.51}\n    // press +\n    // then value should be 2.51, rather than 2.5\n    // if this.props.precision is undefined\n    // https://github.com/react-component/input-number/issues/39\n    getMaxPrecision: function getMaxPrecision(currentValue) {\n      var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      if (hasProp(this, 'precision')) {\n        return this.precision;\n      }\n      var step = this.step;\n\n      var ratioPrecision = this.getPrecision(ratio);\n      var stepPrecision = this.getPrecision(step);\n      var currentValuePrecision = this.getPrecision(currentValue);\n      if (!currentValue) {\n        return ratioPrecision + stepPrecision;\n      }\n      return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);\n    },\n    getPrecisionFactor: function getPrecisionFactor(currentValue) {\n      var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      var precision = this.getMaxPrecision(currentValue, ratio);\n      return Math.pow(10, precision);\n    },\n    getInputDisplayValue: function getInputDisplayValue() {\n      var focused = this.focused,\n          inputValue = this.inputValue,\n          sValue = this.sValue;\n\n      var inputDisplayValue = void 0;\n      if (focused) {\n        inputDisplayValue = inputValue;\n      } else {\n        inputDisplayValue = this.toPrecisionAsStep(sValue);\n      }\n\n      if (inputDisplayValue === undefined || inputDisplayValue === null) {\n        inputDisplayValue = '';\n      }\n\n      return inputDisplayValue;\n    },\n    recordCursorPosition: function recordCursorPosition() {\n      // Record position\n      try {\n        var inputElem = this.$refs.inputRef;\n        this.cursorStart = inputElem.selectionStart;\n        this.cursorEnd = inputElem.selectionEnd;\n        this.currentValue = inputElem.value;\n        this.cursorBefore = inputElem.value.substring(0, this.cursorStart);\n        this.cursorAfter = inputElem.value.substring(this.cursorEnd);\n      } catch (e) {\n        // Fix error in Chrome:\n        // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n        // http://stackoverflow.com/q/21177489/3040605\n      }\n    },\n    fixCaret: function fixCaret(start, end) {\n      if (start === undefined || end === undefined || !this.input || !this.input.value) {\n        return;\n      }\n\n      try {\n        var inputElem = this.$refs.inputRef;\n        var currentStart = inputElem.selectionStart;\n        var currentEnd = inputElem.selectionEnd;\n\n        if (start !== currentStart || end !== currentEnd) {\n          inputElem.setSelectionRange(start, end);\n        }\n      } catch (e) {\n        // Fix error in Chrome:\n        // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n        // http://stackoverflow.com/q/21177489/3040605\n      }\n    },\n    restoreByAfter: function restoreByAfter(str) {\n      if (str === undefined) return false;\n\n      var fullStr = this.$refs.inputRef.value;\n      var index = fullStr.lastIndexOf(str);\n\n      if (index === -1) return false;\n\n      if (index + str.length === fullStr.length) {\n        this.fixCaret(index, index);\n\n        return true;\n      }\n      return false;\n    },\n    partRestoreByAfter: function partRestoreByAfter(str) {\n      var _this5 = this;\n\n      if (str === undefined) return false;\n\n      // For loop from full str to the str with last char to map. e.g. 123\n      // -> 123\n      // -> 23\n      // -> 3\n      return Array.prototype.some.call(str, function (_, start) {\n        var partStr = str.substring(start);\n\n        return _this5.restoreByAfter(partStr);\n      });\n    },\n    focus: function focus() {\n      this.$refs.inputRef.focus();\n      this.recordCursorPosition();\n    },\n    blur: function blur() {\n      this.$refs.inputRef.blur();\n    },\n    formatWrapper: function formatWrapper(num) {\n      // http://2ality.com/2012/03/signedzero.html\n      // https://github.com/ant-design/ant-design/issues/9439\n      if (isNegativeZero(num)) {\n        return '-0';\n      }\n      if (this.formatter) {\n        return this.formatter(num);\n      }\n      return num;\n    },\n    toPrecisionAsStep: function toPrecisionAsStep(num) {\n      if (this.isNotCompleteNumber(num) || num === '') {\n        return num;\n      }\n      var precision = Math.abs(this.getMaxPrecision(num));\n      if (precision === 0) {\n        return num.toString();\n      }\n      if (!isNaN(precision)) {\n        return Number(num).toFixed(precision);\n      }\n      return num.toString();\n    },\n\n    // '1.' '1x' 'xx' '' => are not complete numbers\n    isNotCompleteNumber: function isNotCompleteNumber(num) {\n      return isNaN(num) || num === '' || num === null || num && num.toString().indexOf('.') === num.toString().length - 1;\n    },\n    toNumber: function toNumber(num) {\n      if (this.isNotCompleteNumber(num)) {\n        return num;\n      }\n      if (hasProp(this, 'precision')) {\n        return Number(Number(num).toFixed(this.precision));\n      }\n      return Number(num);\n    },\n\n    // '1.0' '1.00'  => may be a inputing number\n    toNumberWhenUserInput: function toNumberWhenUserInput(num) {\n      // num.length > 16 => prevent input large number will became Infinity\n      if ((/\\.\\d*0$/.test(num) || num.length > 16) && this.focused) {\n        return num;\n      }\n      return this.toNumber(num);\n    },\n    upStep: function upStep(val, rat) {\n      var step = this.step,\n          min = this.min;\n\n      var precisionFactor = this.getPrecisionFactor(val, rat);\n      var precision = Math.abs(this.getMaxPrecision(val, rat));\n      var result = void 0;\n      if (typeof val === 'number') {\n        result = ((precisionFactor * val + precisionFactor * step * rat) / precisionFactor).toFixed(precision);\n      } else {\n        result = min === -Infinity ? step : min;\n      }\n      return this.toNumber(result);\n    },\n    downStep: function downStep(val, rat) {\n      var step = this.step,\n          min = this.min;\n\n      var precisionFactor = this.getPrecisionFactor(val, rat);\n      var precision = Math.abs(this.getMaxPrecision(val, rat));\n      var result = void 0;\n      if (typeof val === 'number') {\n        result = ((precisionFactor * val - precisionFactor * step * rat) / precisionFactor).toFixed(precision);\n      } else {\n        result = min === -Infinity ? -step : min;\n      }\n      return this.toNumber(result);\n    },\n    stepFn: function stepFn(type, e) {\n      var _this6 = this;\n\n      var ratio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var recursive = arguments[3];\n\n      this.stop();\n      if (e) {\n        // e.persist()\n        e.preventDefault();\n      }\n      if (this.disabled) {\n        return;\n      }\n      var max = this.max,\n          min = this.min;\n\n      var value = this.getCurrentValidValue(this.inputValue) || 0;\n      if (this.isNotCompleteNumber(value)) {\n        return;\n      }\n      var val = this[type + 'Step'](value, ratio);\n      var outOfRange = val > max || val < min;\n      if (val > max) {\n        val = max;\n      } else if (val < min) {\n        val = min;\n      }\n      this.setValue(val);\n      this.setState({\n        focused: true\n      });\n      if (outOfRange) {\n        return;\n      }\n      this.autoStepTimer = setTimeout(function () {\n        _this6[type](e, ratio, true);\n      }, recursive ? SPEED : DELAY);\n    },\n    stop: function stop() {\n      if (this.autoStepTimer) {\n        clearTimeout(this.autoStepTimer);\n      }\n    },\n    down: function down(e, ratio, recursive) {\n      this.pressingUpOrDown = true;\n      this.stepFn('down', e, ratio, recursive);\n    },\n    up: function up(e, ratio, recursive) {\n      this.pressingUpOrDown = true;\n      this.stepFn('up', e, ratio, recursive);\n    },\n    handleInputClick: function handleInputClick() {\n      this.$emit('click');\n    }\n  },\n  render: function render() {\n    var _classNames;\n\n    var h = arguments[0];\n    var _$props = this.$props,\n        prefixCls = _$props.prefixCls,\n        disabled = _$props.disabled,\n        readOnly = _$props.readOnly,\n        useTouch = _$props.useTouch,\n        autoComplete = _$props.autoComplete,\n        upHandler = _$props.upHandler,\n        downHandler = _$props.downHandler;\n\n    var classes = classNames((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, prefixCls + '-disabled', disabled), _defineProperty(_classNames, prefixCls + '-focused', this.focused), _classNames));\n    var upDisabledClass = '';\n    var downDisabledClass = '';\n    var sValue = this.sValue;\n\n    if (sValue || sValue === 0) {\n      if (!isNaN(sValue)) {\n        var val = Number(sValue);\n        if (val >= this.max) {\n          upDisabledClass = prefixCls + '-handler-up-disabled';\n        }\n        if (val <= this.min) {\n          downDisabledClass = prefixCls + '-handler-down-disabled';\n        }\n      } else {\n        upDisabledClass = prefixCls + '-handler-up-disabled';\n        downDisabledClass = prefixCls + '-handler-down-disabled';\n      }\n    }\n\n    var editable = !this.readOnly && !this.disabled;\n\n    // focus state, show input value\n    // unfocus state, show valid value\n    var inputDisplayValue = void 0;\n    if (this.focused) {\n      inputDisplayValue = this.inputValue;\n    } else {\n      inputDisplayValue = this.toPrecisionAsStep(this.sValue);\n    }\n\n    if (inputDisplayValue === undefined || inputDisplayValue === null) {\n      inputDisplayValue = '';\n    }\n\n    var upEvents = void 0;\n    var downEvents = void 0;\n    if (useTouch) {\n      upEvents = {\n        touchstart: editable && !upDisabledClass ? this.up : noop,\n        touchend: this.stop\n      };\n      downEvents = {\n        touchstart: editable && !downDisabledClass ? this.down : noop,\n        touchend: this.stop\n      };\n    } else {\n      upEvents = {\n        mousedown: editable && !upDisabledClass ? this.up : noop,\n        mouseup: this.stop,\n        mouseleave: this.stop\n      };\n      downEvents = {\n        mousedown: editable && !downDisabledClass ? this.down : noop,\n        mouseup: this.stop,\n        mouseleave: this.stop\n      };\n    }\n    var inputDisplayValueFormat = this.formatWrapper(inputDisplayValue);\n    if (this.decimalSeparator !== undefined) {\n      inputDisplayValueFormat = inputDisplayValueFormat.toString().replace('.', this.decimalSeparator);\n    }\n    var isUpDisabled = !!upDisabledClass || disabled || readOnly;\n    var isDownDisabled = !!downDisabledClass || disabled || readOnly;\n    var _$listeners = this.$listeners,\n        _$listeners$mouseente = _$listeners.mouseenter,\n        mouseenter = _$listeners$mouseente === undefined ? noop : _$listeners$mouseente,\n        _$listeners$mouseleav = _$listeners.mouseleave,\n        mouseleave = _$listeners$mouseleav === undefined ? noop : _$listeners$mouseleav,\n        _$listeners$mouseover = _$listeners.mouseover,\n        mouseover = _$listeners$mouseover === undefined ? noop : _$listeners$mouseover,\n        _$listeners$mouseout = _$listeners.mouseout,\n        mouseout = _$listeners$mouseout === undefined ? noop : _$listeners$mouseout;\n\n    var contentProps = {\n      on: { mouseenter: mouseenter, mouseleave: mouseleave, mouseover: mouseover, mouseout: mouseout },\n      'class': classes,\n      attrs: { title: this.$props.title }\n    };\n    var upHandlerProps = {\n      props: {\n        disabled: isUpDisabled,\n        prefixCls: prefixCls\n      },\n      attrs: {\n        unselectable: 'unselectable',\n        role: 'button',\n        'aria-label': 'Increase Value',\n        'aria-disabled': !!isUpDisabled\n      },\n      'class': prefixCls + '-handler ' + prefixCls + '-handler-up ' + upDisabledClass,\n      on: upEvents,\n      ref: 'up'\n    };\n    var downHandlerProps = {\n      props: {\n        disabled: isDownDisabled,\n        prefixCls: prefixCls\n      },\n      attrs: {\n        unselectable: 'unselectable',\n        role: 'button',\n        'aria-label': 'Decrease Value',\n        'aria-disabled': !!isDownDisabled\n      },\n      'class': prefixCls + '-handler ' + prefixCls + '-handler-down ' + downDisabledClass,\n      on: downEvents,\n      ref: 'down'\n    };\n    // ref for test\n    return h(\n      'div',\n      contentProps,\n      [h(\n        'div',\n        { 'class': prefixCls + '-handler-wrap' },\n        [h(\n          InputHandler,\n          upHandlerProps,\n          [upHandler || h('span', {\n            attrs: {\n              unselectable: 'unselectable'\n            },\n            'class': prefixCls + '-handler-up-inner',\n            on: {\n              'click': preventDefault\n            }\n          })]\n        ), h(\n          InputHandler,\n          downHandlerProps,\n          [downHandler || h('span', {\n            attrs: {\n              unselectable: 'unselectable'\n            },\n            'class': prefixCls + '-handler-down-inner',\n            on: {\n              'click': preventDefault\n            }\n          })]\n        )]\n      ), h(\n        'div',\n        {\n          'class': prefixCls + '-input-wrap',\n          attrs: { role: 'spinbutton',\n            'aria-valuemin': this.min,\n            'aria-valuemax': this.max,\n            'aria-valuenow': sValue\n          }\n        },\n        [h('input', {\n          attrs: {\n            required: this.required,\n            type: this.type,\n            placeholder: this.placeholder,\n\n            tabIndex: this.tabIndex,\n            autoComplete: autoComplete,\n\n            maxLength: this.maxLength,\n            readOnly: this.readOnly,\n            disabled: this.disabled,\n            max: this.max,\n            min: this.min,\n            step: this.step,\n            name: this.name,\n            id: this.id,\n\n            pattern: this.pattern\n          },\n          on: {\n            'click': this.handleInputClick,\n            'focus': this.onFocus,\n            'blur': this.onBlur,\n            'keydown': editable ? this.onKeyDown : noop,\n            'keyup': editable ? this.onKeyUp : noop,\n            'input': this.onChange\n          },\n\n          'class': prefixCls + '-input',\n          ref: 'inputRef',\n          domProps: {\n            'value': inputDisplayValueFormat\n          }\n        })]\n      )]\n    );\n  }\n};"],"sourceRoot":""}