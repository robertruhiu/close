{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/tooltip/placements.js"],"names":["__webpack_require__","d","__webpack_exports__","getPlacements","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","_vc_tooltip_placements__WEBPACK_IMPORTED_MODULE_1__","autoAdjustOverflowEnabled","adjustX","adjustY","autoAdjustOverflowDisabled","targetOffset","getOverflowOptions","autoAdjustOverflow","config","_config$arrowWidth","arrowWidth","undefined","_config$horizontalArr","horizontalArrowShift","_config$verticalArrow","verticalArrowShift","_config$autoAdjustOve","placementMap","left","points","offset","right","top","bottom","topLeft","leftTop","topRight","rightTop","bottomRight","rightBottom","bottomLeft","leftBottom","Object","keys","forEach","key","arrowPointAtCenter","overflow","ignoreShake"],"mappings":"0HAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,QAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,QAGAQ,EAAA,CACAC,QAAA,EACAC,QAAA,GAGAC,EAAA,CACAF,QAAA,EACAC,QAAA,GAGAE,EAAA,MAEO,SAAAC,EAAAC,GACP,yBAAAA,EACAA,EAAAN,EAAAG,EAESN,IAAQ,GAAGM,EAAAG,GAGL,SAAAX,EAAAY,GACf,IAAAC,EAAAD,EAAAE,WACAA,OAAAC,IAAAF,EAAA,EAAAA,EACAG,EAAAJ,EAAAK,qBACAA,OAAAF,IAAAC,EAAA,GAAAA,EACAE,EAAAN,EAAAO,mBACAA,OAAAJ,IAAAG,EAAA,GAAAA,EACAE,EAAAR,EAAAD,mBACAA,OAAAI,IAAAK,KAEAC,EAAA,CACAC,KAAA,CACAC,OAAA,YACAC,OAAA,QAEAC,MAAA,CACAF,OAAA,YACAC,OAAA,OAEAE,IAAA,CACAH,OAAA,YACAC,OAAA,QAEAG,OAAA,CACAJ,OAAA,YACAC,OAAA,OAEAI,QAAA,CACAL,OAAA,YACAC,OAAA,GAAAP,EAAAH,IAAA,IAEAe,QAAA,CACAN,OAAA,YACAC,OAAA,MAAAL,EAAAL,KAEAgB,SAAA,CACAP,OAAA,YACAC,OAAA,CAAAP,EAAAH,GAAA,IAEAiB,SAAA,CACAR,OAAA,YACAC,OAAA,KAAAL,EAAAL,KAEAkB,YAAA,CACAT,OAAA,YACAC,OAAA,CAAAP,EAAAH,EAAA,IAEAmB,YAAA,CACAV,OAAA,YACAC,OAAA,GAAAL,EAAAL,IAEAoB,WAAA,CACAX,OAAA,YACAC,OAAA,GAAAP,EAAAH,GAAA,IAEAqB,WAAA,CACAZ,OAAA,YACAC,OAAA,IAAAL,EAAAL,KAYA,OATAsB,OAAAC,KAAAhB,GAAAiB,QAAA,SAAAC,GACAlB,EAAAkB,GAAA3B,EAAA4B,mBAAoDtC,IAAQ,GAAGmB,EAAAkB,GAAA,CAC/DE,SAAA/B,EAAAC,GACAF,iBACSP,IAAQ,GAAKE,EAAA,KAAYmC,GAAA,CAClCE,SAAA/B,EAAAC,KAEAU,EAAAkB,GAAAG,aAAA,IAEArB","file":"js/chunk-vendors~92bbc9e6.a4806481.js","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport { placements as rcPlacements } from '../vc-tooltip/placements';\n\nvar autoAdjustOverflowEnabled = {\n  adjustX: 1,\n  adjustY: 1\n};\n\nvar autoAdjustOverflowDisabled = {\n  adjustX: 0,\n  adjustY: 0\n};\n\nvar targetOffset = [0, 0];\n\nexport function getOverflowOptions(autoAdjustOverflow) {\n  if (typeof autoAdjustOverflow === 'boolean') {\n    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n  }\n  return _extends({}, autoAdjustOverflowDisabled, autoAdjustOverflow);\n}\n\nexport default function getPlacements(config) {\n  var _config$arrowWidth = config.arrowWidth,\n      arrowWidth = _config$arrowWidth === undefined ? 5 : _config$arrowWidth,\n      _config$horizontalArr = config.horizontalArrowShift,\n      horizontalArrowShift = _config$horizontalArr === undefined ? 16 : _config$horizontalArr,\n      _config$verticalArrow = config.verticalArrowShift,\n      verticalArrowShift = _config$verticalArrow === undefined ? 12 : _config$verticalArrow,\n      _config$autoAdjustOve = config.autoAdjustOverflow,\n      autoAdjustOverflow = _config$autoAdjustOve === undefined ? true : _config$autoAdjustOve;\n\n  var placementMap = {\n    left: {\n      points: ['cr', 'cl'],\n      offset: [-4, 0]\n    },\n    right: {\n      points: ['cl', 'cr'],\n      offset: [4, 0]\n    },\n    top: {\n      points: ['bc', 'tc'],\n      offset: [0, -4]\n    },\n    bottom: {\n      points: ['tc', 'bc'],\n      offset: [0, 4]\n    },\n    topLeft: {\n      points: ['bl', 'tc'],\n      offset: [-(horizontalArrowShift + arrowWidth), -4]\n    },\n    leftTop: {\n      points: ['tr', 'cl'],\n      offset: [-4, -(verticalArrowShift + arrowWidth)]\n    },\n    topRight: {\n      points: ['br', 'tc'],\n      offset: [horizontalArrowShift + arrowWidth, -4]\n    },\n    rightTop: {\n      points: ['tl', 'cr'],\n      offset: [4, -(verticalArrowShift + arrowWidth)]\n    },\n    bottomRight: {\n      points: ['tr', 'bc'],\n      offset: [horizontalArrowShift + arrowWidth, 4]\n    },\n    rightBottom: {\n      points: ['bl', 'cr'],\n      offset: [4, verticalArrowShift + arrowWidth]\n    },\n    bottomLeft: {\n      points: ['tl', 'bc'],\n      offset: [-(horizontalArrowShift + arrowWidth), 4]\n    },\n    leftBottom: {\n      points: ['br', 'cl'],\n      offset: [-4, verticalArrowShift + arrowWidth]\n    }\n  };\n  Object.keys(placementMap).forEach(function (key) {\n    placementMap[key] = config.arrowPointAtCenter ? _extends({}, placementMap[key], {\n      overflow: getOverflowOptions(autoAdjustOverflow),\n      targetOffset: targetOffset\n    }) : _extends({}, rcPlacements[key], {\n      overflow: getOverflowOptions(autoAdjustOverflow)\n    });\n    placementMap[key].ignoreShake = true;\n  });\n  return placementMap;\n}"],"sourceRoot":""}