{"version":3,"sources":["webpack:///src/components/frontend/homepages/jobdetails.vue"],"names":["__webpack_exports__","name","data","job","skills","currentUserProfile","applied","myjobs","components","ACol","ant_design_vue_es_grid_Col__WEBPACK_IMPORTED_MODULE_6__","ARow","ant_design_vue_es_grid_Row__WEBPACK_IMPORTED_MODULE_5__","Pageheader","_components_layout_Header_vue__WEBPACK_IMPORTED_MODULE_4__","mounted","_mounted","Object","_home_frenx_Desktop_antd_demo_node_modules_babel_runtime_corejs2_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","regeneratorRuntime","mark","_callee","auth","i","wrap","_context","prev","next","headers","Authorization","this","$store","state","token","_services_UsersService__WEBPACK_IMPORTED_MODULE_3__","currentuser","user","pk","sent","_services_Marketplace__WEBPACK_IMPORTED_MODULE_7__","jobdetails","$route","params","jobId","tech_stack","split","candidatejobs","length","id","stop","apply","arguments","methods","ApplyJob","dev","recruiter","applyjob","candidate","stage","selected","then","catch","error"],"mappings":"8MAuEAA,EAAA,MACAC,KAAA,aACAC,KAFA,WAGA,OACAC,IAAA,GACAC,OAAA,KACAC,mBAAA,GACAC,SAAA,EACAC,OAAA,KAIAC,WAAA,CACAC,KAAAC,EAAA,KACAC,KAAAC,EAAA,KACAC,WAAAC,EAAA,MAEAC,QAjBA,eAAAC,EAAAC,OAAAC,EAAA,KAAAD,CAAAE,mBAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,mBAAAK,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAkBAL,EAAA,CACAM,QAAA,CAAAC,cAAA,OAAAC,KAAAC,OAAAC,MAAAC,QAnBAR,EAAAE,KAAA,EAsBAO,EAAA,KAAAC,YAAAL,KAAAC,OAAAC,MAAAI,KAAAC,GAAAf,GAtBA,cAsBAQ,KAAAzB,mBAtBAoB,EAAAa,KAsBApC,KAtBAuB,EAAAE,KAAA,EAuBAY,EAAA,KAAAC,WAAAV,KAAAW,OAAAC,OAAAC,MAAArB,GAvBA,cAuBAQ,KAAA3B,IAvBAsB,EAAAa,KAuBApC,KACA4B,KAAA1B,OAAA0B,KAAA3B,IAAAyC,WAAAC,MAAA,KAxBApB,EAAAE,KAAA,GAyBAY,EAAA,KAAAO,cAAAhB,KAAAC,OAAAC,MAAAI,KAAAC,GAAAf,GAzBA,QA0BA,GADAQ,KAAAvB,OAzBAkB,EAAAa,KAyBApC,KACA4B,KAAAvB,OAAAwC,OAAA,EACA,IAAAxB,EAAA,EAAAA,EAAAO,KAAAvB,OAAAwC,OAAAxB,IACAO,KAAA3B,IAAA6C,KAAAlB,KAAAvB,OAAAgB,GAAApB,MACA2B,KAAAxB,SAAA,GA7BA,yBAAAmB,EAAAwB,SAAA5B,EAAAS,SAAA,SAAAf,IAAA,OAAAC,EAAAkC,MAAApB,KAAAqB,WAAA,OAAApC,EAAA,GAoCAqC,QAAA,CAEAC,SAFA,SAEAlD,EAAAmD,EAAAC,GACA,IAAAjC,EAAA,CACAM,QAAA,CAAAC,cAAA,OAAAC,KAAAC,OAAAC,MAAAC,QAGAM,EAAA,KAAAiB,SACA,CACArD,MACAsD,UAAAH,EACAC,YACAG,MAAA,MACAC,UAAA,GAEArC,GAEAsC,KAEA9B,KAAAxB,SAAA,GAEAuD,MAAA,SAAAC,GACA,OAAAA","file":"js/app~57b0c31b.18227298.js","sourcesContent":["<template>\n    <a-layout id=\"components-layout-demo-side\" style=\"min-height: 100vh;background-color:#F8FAFB \">\n        <pageheader></pageheader>\n\n\n        <a-layout :style=\"{backgroundColor:'#F8FAFB',marginTop: '1rem' }\">\n\n\n            <a-layout-content style=\"margin-top: 5%\">\n\n                <a-row>\n                    <a-col :span=\"16\" :offset=\"4\" class=\"jobdetails\">\n                        <div style=\"border-bottom: 1px solid #e8e8e8;margin-bottom: 1%;padding-bottom: 3%;\">\n                            <span>\n                                <span style=\"font-weight: 700;font-size: large\">{{job.title}}</span>\n\n                                <span style=\"float: right\"\n                                      v-if=\"currentUserProfile.user_type ==='developer' && applied === false  \">\n                                    <a-button type=\"primary\"\n                                              @click=\"ApplyJob(job.id,currentUserProfile.user,job.posted_by)\">Apply</a-button>\n\n                                </span>\n                                <span style=\"float: right\"\n                                      v-if=\"currentUserProfile.user_type ==='developer' && applied === true  \">\n                                    <a-button type=\"primary\"\n                                              >Manage Job application</a-button>\n\n                                </span>\n                            </span>\n\n                        </div>\n                        <div>\n                            <a-alert v-if=\"currentUserProfile.user_type ==='developer' && applied \" message=\"Job application successful\" type=\"success\" closeText=\"Close Now\" />\n                            <p><strong>Company name:</strong> {{job.company}}\n                                <span style=\"margin-left: 5%\">\n                                    Location : {{job.location}}\n                                </span>\n\n                            </p>\n                            <p>Monthly renumeration * : {{job.remuneration}}</p>\n\n                            <p>\n                                Skills looking for :\n                                <span style=\"\" v-for=\"skill in skills\" v-bind:key=\"skill\">\n                                    <a-tag color=\"#F0F6FD\" style=\"color:#007BFF;\">{{skill}}</a-tag>\n                                </span>\n                            </p>\n                            <p>Application Deadline : {{job.deadline}}</p>\n                        </div>\n                        <div>\n                            <p style=\"font-weight: 700\">Job Details</p>\n                            <p>{{job.description}}</p>\n                        </div>\n                    </a-col>\n                </a-row>\n\n\n            </a-layout-content>\n        </a-layout>\n    </a-layout>\n\n</template>\n\n<script>\n\n    import UsersService from '@/services/UsersService'\n    import Pageheader from '@/components/layout/Header.vue'\n    import ARow from \"ant-design-vue/es/grid/Row\";\n    import ACol from \"ant-design-vue/es/grid/Col\";\n    import MarketPlaceService from '@/services/Marketplace'\n\n    export default {\n        name: \"jobdetails\",\n        data() {\n            return {\n                job: {},\n                skills: null,\n                currentUserProfile: {},\n                applied: false,\n                myjobs:[]\n\n            }\n        },\n        components: {\n            ACol,\n            ARow,\n            Pageheader\n        },\n        async mounted() {\n            const auth = {\n                headers: {Authorization: 'JWT ' + this.$store.state.token}\n\n            }\n            this.currentUserProfile = (await UsersService.currentuser(this.$store.state.user.pk, auth)).data\n            this.job = (await MarketPlaceService.jobdetails(this.$route.params.jobId, auth)).data\n            this.skills = this.job.tech_stack.split(',');\n            this.myjobs = (await MarketPlaceService.candidatejobs(this.$store.state.user.pk, auth)).data\n            if(this.myjobs.length >0){\n                for(let i =0;i<this.myjobs.length;i++){\n                    if(this.job.id === this.myjobs[i].job){\n                        this.applied = true\n                    }\n                }\n            }\n\n\n        },\n        methods: {\n\n            ApplyJob(job, dev,recruiter) {\n                const auth = {\n                    headers: {Authorization: 'JWT ' + this.$store.state.token}\n\n                }\n                MarketPlaceService.applyjob(\n                    {\n                        job: job,\n                        candidate: dev,\n                        recruiter:recruiter,\n                        stage: 'new',\n                        selected: false\n                    },\n                    auth\n                )\n                    .then(\n\n                        this.applied = true\n                    )\n                    .catch(error => {\n                        return error\n\n\n                    });\n\n            }\n\n        }\n    }\n</script>\n\n<style scoped>\n    .jobdetails {\n        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n        background-color: white;\n        padding: 2%;\n\n    }\n</style>\n"],"sourceRoot":""}