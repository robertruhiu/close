{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/checkbox/Group.js"],"names":["babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","_Checkbox__WEBPACK_IMPORTED_MODULE_2__","_util_props_util__WEBPACK_IMPORTED_MODULE_3__","noop","__webpack_exports__","name","model","prop","props","prefixCls","default","type","String","defaultValue","undefined","Array","value","options","disabled","Boolean","provide","checkboxGroupContext","this","data","sValue","watch","val","methods","getOptions","$scopedSlots","map","option","label","toggleOption","optionIndex","indexOf","concat","push","splice","Object","$emit","render","h","arguments","$props","state","$data","$slots","children","groupPrefixCls","length","attrs","checked","key","toString","on","change","onChange","class"],"mappings":"0HAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,QAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,QAAAM,EAAAN,EAAA,QAIA,SAAAO,KACeC,EAAA,MACfC,KAAA,iBACAC,MAAA,CACAC,KAAA,SAEAC,MAAA,CACAC,UAAA,CACAC,QAAA,eACAC,KAAAC,QAEAC,aAAA,CACAH,aAAAI,EACAH,KAAAI,OAEAC,MAAA,CACAN,aAAAI,EACAH,KAAAI,OAEAE,QAAA,CACAP,QAAA,WACA,UAEAC,KAAAI,OAEAG,SAAAC,SAEAC,QAAA,WACA,OACAC,qBAAAC,OAGAC,KAAA,WACA,IAAAP,EAAAM,KAAAN,MACAH,EAAAS,KAAAT,aAEA,OACAW,OAAAR,GAAAH,GAAA,KAIAY,MAAA,CACAT,MAAA,SAAAU,GACAJ,KAAAE,OAAAE,IAGAC,QAAA,CACAC,WAAA,WACA,IAAAX,EAAAK,KAAAL,QACAY,EAAAP,KAAAO,aAEA,OAAAZ,EAAAa,IAAA,SAAAC,GACA,qBAAAA,EACA,OACAC,MAAAD,EACAf,MAAAe,GAGA,IAAAC,EAAAD,EAAAC,MAIA,YAHAlB,IAAAkB,GAAAH,EAAAG,QACAA,EAAAH,EAAAG,MAAAD,IAEe/B,IAAQ,GAAG+B,EAAA,CAAWC,aAGrCC,aAAA,SAAAF,GACA,IAAAG,EAAAZ,KAAAE,OAAAW,QAAAJ,EAAAf,OACAA,EAAA,GAAAoB,OAA4BvC,IAAkByB,KAAAE,UAC9C,IAAAU,EACAlB,EAAAqB,KAAAN,EAAAf,OAEAA,EAAAsB,OAAAJ,EAAA,GAEWK,OAAArC,EAAA,KAAAqC,CAAOjB,KAAA,WAClBA,KAAAE,OAAAR,GAEAM,KAAAkB,MAAA,QAAAxB,GACAM,KAAAkB,MAAA,SAAAxB,KAGAyB,OAAA,WACA,IAAAC,EAAAC,UAAA,GACAnC,EAAAc,KAAAsB,OACAC,EAAAvB,KAAAwB,MACAC,EAAAzB,KAAAyB,OACAtC,EAAAD,EAAAC,UACAQ,EAAAT,EAAAS,QAEA+B,EAAAD,EAAA,WACAE,EAAAxC,EAAA,SAuBA,OAtBAQ,KAAAiC,OAAA,IACAF,EAAA1B,KAAAM,aAAAE,IAAA,SAAAC,GACA,OAAAW,EACUzC,EAAA,KACV,CACAkD,MAAA,CACA1C,YAEAS,SAAA,aAAAa,IAAAb,SAAAV,EAAAU,SACAF,MAAAe,EAAAf,MACAoC,SAAA,IAAAP,EAAArB,OAAAW,QAAAJ,EAAAf,QAEAqC,IAAAtB,EAAAf,MAAAsC,WAAAC,GAAA,CACAC,OAAAzB,EAAA0B,UAAAtD,GAGAuD,MAAAT,EAAA,SAEA,CAAAlB,EAAAC,WAIAU,EACA,MACA,CAAOgB,MAAAT,GACP,CAAAD","file":"js/chunk-vendors~ad626ddb.2b8e78d6.js","sourcesContent":["import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport Checkbox from './Checkbox';\nimport hasProp from '../_util/props-util';\nfunction noop() {}\nexport default {\n  name: 'ACheckboxGroup',\n  model: {\n    prop: 'value'\n  },\n  props: {\n    prefixCls: {\n      'default': 'ant-checkbox',\n      type: String\n    },\n    defaultValue: {\n      'default': undefined,\n      type: Array\n    },\n    value: {\n      'default': undefined,\n      type: Array\n    },\n    options: {\n      'default': function _default() {\n        return [];\n      },\n      type: Array\n    },\n    disabled: Boolean\n  },\n  provide: function provide() {\n    return {\n      checkboxGroupContext: this\n    };\n  },\n  data: function data() {\n    var value = this.value,\n        defaultValue = this.defaultValue;\n\n    return {\n      sValue: value || defaultValue || []\n    };\n  },\n\n  watch: {\n    value: function value(val) {\n      this.sValue = val;\n    }\n  },\n  methods: {\n    getOptions: function getOptions() {\n      var options = this.options,\n          $scopedSlots = this.$scopedSlots;\n\n      return options.map(function (option) {\n        if (typeof option === 'string') {\n          return {\n            label: option,\n            value: option\n          };\n        }\n        var label = option.label;\n        if (label === undefined && $scopedSlots.label) {\n          label = $scopedSlots.label(option);\n        }\n        return _extends({}, option, { label: label });\n      });\n    },\n    toggleOption: function toggleOption(option) {\n      var optionIndex = this.sValue.indexOf(option.value);\n      var value = [].concat(_toConsumableArray(this.sValue));\n      if (optionIndex === -1) {\n        value.push(option.value);\n      } else {\n        value.splice(optionIndex, 1);\n      }\n      if (!hasProp(this, 'value')) {\n        this.sValue = value;\n      }\n      this.$emit('input', value);\n      this.$emit('change', value);\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var props = this.$props,\n        state = this.$data,\n        $slots = this.$slots;\n    var prefixCls = props.prefixCls,\n        options = props.options;\n\n    var children = $slots['default'];\n    var groupPrefixCls = prefixCls + '-group';\n    if (options && options.length > 0) {\n      children = this.getOptions().map(function (option) {\n        return h(\n          Checkbox,\n          {\n            attrs: {\n              prefixCls: prefixCls,\n\n              disabled: 'disabled' in option ? option.disabled : props.disabled,\n              value: option.value,\n              checked: state.sValue.indexOf(option.value) !== -1\n            },\n            key: option.value.toString(), on: {\n              'change': option.onChange || noop\n            },\n\n            'class': groupPrefixCls + '-item'\n          },\n          [option.label]\n        );\n      });\n    }\n    return h(\n      'div',\n      { 'class': groupPrefixCls },\n      [children]\n    );\n  }\n};"],"sourceRoot":""}