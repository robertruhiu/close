{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/_util/store/connect.js"],"names":["__webpack_require__","d","__webpack_exports__","connect","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","shallowequal__WEBPACK_IMPORTED_MODULE_2__","shallowequal__WEBPACK_IMPORTED_MODULE_2___default","omit_js__WEBPACK_IMPORTED_MODULE_3__","_props_util__WEBPACK_IMPORTED_MODULE_4__","_vue_types__WEBPACK_IMPORTED_MODULE_5__","_proxyComponent__WEBPACK_IMPORTED_MODULE_6__","getDisplayName","WrappedComponent","name","defaultMapStateToProps","mapStateToProps","shouldSubscribe","finnalMapStateToProps","tempProps","Object","props","__propsSymbol__","any","keys","forEach","k","required","Connect","inject","storeContext","default","data","this","store","preProps","subscribed","getState","$props","watch","length","mounted","trySubscribe","beforeDestroy","tryUnsubscribe","methods","handleChange","unsubscribe","nextSubscribed","subscribe","getWrappedInstance","$refs","wrappedInstance","render","h","arguments","$listeners","_$slots","$slots","undefined","$attrs","$scopedSlots","wrapProps","on","attrs","scopedSlots","ref","map","slot"],"mappings":"wHAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,QAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,QAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,QAAAU,EAAAV,EAAAM,EAAAG,GAAAE,EAAAX,EAAA,QAAAY,EAAAZ,EAAA,QAAAa,EAAAb,EAAA,QAAAc,EAAAd,EAAA,QAQA,SAAAe,EAAAC,GACA,OAAAA,EAAAC,MAAA,YAGA,IAAAC,EAAA,WACA,UAEe,SAAAf,EAAAgB,GACf,IAAAC,IAAAD,EACAE,EAAAF,GAAAD,EACA,gBAAAF,GACA,IAAAM,EAAoBC,OAAAZ,EAAA,KAAAY,CAAIP,EAAAQ,OAAA,GAA6B,WACrDA,EAAA,CACAC,gBAAuBZ,EAAA,KAASa,KAEhCH,OAAAI,KAAAL,GAAAM,QAAA,SAAAC,GACAL,EAAAK,GAAiBrB,IAAQ,GAAGqB,EAAA,CAAMC,UAAA,MAElC,IAAAC,EAAA,CACAd,KAAA,WAAAF,EAAAC,GACAQ,QACAQ,OAAA,CACAC,aAAA,CAAuBC,QAAA,WACvB,YAGAC,KAAA,WAGA,OAFAC,KAAAC,MAAAD,KAAAH,aAAAI,MACAD,KAAAE,SAAwBf,OAAAZ,EAAA,KAAAY,CAAKA,OAAAX,EAAA,KAAAW,CAAca,MAAA,qBAC3C,CACAG,WAAAlB,EAAAe,KAAAC,MAAAG,WAAAJ,KAAAK,UAIAC,MAAA,CACAjB,gBAAA,WACAN,GAAA,IAAAA,EAAAwB,SACAP,KAAAG,WAAAlB,EAAAe,KAAAC,MAAAG,WAAAJ,KAAAK,WAIAG,QAAA,WACAR,KAAAS,gBAEAC,cAAA,WACAV,KAAAW,kBAGAC,QAAA,CACAC,aAAA,WACA,GAAAb,KAAAc,YAAA,CAGA,IAAA1B,EAAsBD,OAAAZ,EAAA,KAAAY,CAAKA,OAAAX,EAAA,KAAAW,CAAca,MAAA,qBACzCe,EAAA9B,EAAAe,KAAAC,MAAAG,WAAAhB,GACed,IAAY0B,KAAAE,SAAAd,IAA2Bd,IAAY0B,KAAAG,WAAAY,KAClEf,KAAAG,WAAAY,KAGAN,aAAA,WACAzB,IACAgB,KAAAc,YAAAd,KAAAC,MAAAe,UAAAhB,KAAAa,cACAb,KAAAa,iBAGAF,eAAA,WACAX,KAAAc,cACAd,KAAAc,cACAd,KAAAc,YAAA,OAGAG,mBAAA,WACA,OAAAjB,KAAAkB,MAAAC,kBAGAC,OAAA,WACA,IAAAC,EAAAC,UAAA,GAEAtB,KAAAE,SAAwB9B,IAAQ,GAAG4B,KAAAK,QACnC,IAAAkB,EAAAvB,KAAAuB,WACAC,EAAAxB,KAAAyB,OACAA,OAAAC,IAAAF,EAAA,GAA+CA,EAC/CG,EAAA3B,KAAA2B,OACAC,EAAA5B,KAAA4B,aACAzB,EAAAH,KAAAG,WACAF,EAAAD,KAAAC,MAEAb,EAAoBD,OAAAX,EAAA,KAAAW,CAAca,MAClCA,KAAAE,SAAwB9B,IAAQ,GAAKe,OAAAZ,EAAA,KAAAY,CAAIC,EAAA,sBACzC,IAAAyC,EAAA,CACAzC,MAAiBhB,IAAQ,GAAGgB,EAAAe,EAAA,CAC5BF,UAEA6B,GAAAP,EACAQ,MAAAJ,EACAK,YAAAJ,GAEA,OAAAP,EACAzC,EACUX,IAAc,CAAA4D,EAAA,CAAcI,IAAA,qBACtC,CAAA9C,OAAAI,KAAAkC,GAAAS,IAAA,SAAArD,GACA,OAAAwC,EACA,WACA,CAAec,KAAAtD,GACf,CAAA4C,EAAA5C,WAMA,OAAWM,OAAAT,EAAA,KAAAS,CAAcQ","file":"js/chunk-vendors~2b8f6f49.26287c91.js","sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _extends from 'babel-runtime/helpers/extends';\nimport shallowEqual from 'shallowequal';\nimport omit from 'omit.js';\nimport { getOptionProps } from '../props-util';\nimport PropTypes from '../vue-types';\nimport proxyComponent from '../proxyComponent';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.name || 'Component';\n}\n\nvar defaultMapStateToProps = function defaultMapStateToProps() {\n  return {};\n};\nexport default function connect(mapStateToProps) {\n  var shouldSubscribe = !!mapStateToProps;\n  var finnalMapStateToProps = mapStateToProps || defaultMapStateToProps;\n  return function wrapWithConnect(WrappedComponent) {\n    var tempProps = omit(WrappedComponent.props || {}, ['store']);\n    var props = {\n      __propsSymbol__: PropTypes.any\n    };\n    Object.keys(tempProps).forEach(function (k) {\n      props[k] = _extends({}, k, { required: false });\n    });\n    var Connect = {\n      name: 'Connect_' + getDisplayName(WrappedComponent),\n      props: props,\n      inject: {\n        storeContext: { 'default': function _default() {\n            return {};\n          } }\n      },\n      data: function data() {\n        this.store = this.storeContext.store;\n        this.preProps = omit(getOptionProps(this), ['__propsSymbol__']);\n        return {\n          subscribed: finnalMapStateToProps(this.store.getState(), this.$props)\n        };\n      },\n\n      watch: {\n        __propsSymbol__: function __propsSymbol__() {\n          if (mapStateToProps && mapStateToProps.length === 2) {\n            this.subscribed = finnalMapStateToProps(this.store.getState(), this.$props);\n          }\n        }\n      },\n      mounted: function mounted() {\n        this.trySubscribe();\n      },\n      beforeDestroy: function beforeDestroy() {\n        this.tryUnsubscribe();\n      },\n\n      methods: {\n        handleChange: function handleChange() {\n          if (!this.unsubscribe) {\n            return;\n          }\n          var props = omit(getOptionProps(this), ['__propsSymbol__']);\n          var nextSubscribed = finnalMapStateToProps(this.store.getState(), props);\n          if (!shallowEqual(this.preProps, props) || !shallowEqual(this.subscribed, nextSubscribed)) {\n            this.subscribed = nextSubscribed;\n          }\n        },\n        trySubscribe: function trySubscribe() {\n          if (shouldSubscribe) {\n            this.unsubscribe = this.store.subscribe(this.handleChange);\n            this.handleChange();\n          }\n        },\n        tryUnsubscribe: function tryUnsubscribe() {\n          if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = null;\n          }\n        },\n        getWrappedInstance: function getWrappedInstance() {\n          return this.$refs.wrappedInstance;\n        }\n      },\n      render: function render() {\n        var h = arguments[0];\n\n        this.preProps = _extends({}, this.$props);\n        var $listeners = this.$listeners,\n            _$slots = this.$slots,\n            $slots = _$slots === undefined ? {} : _$slots,\n            $attrs = this.$attrs,\n            $scopedSlots = this.$scopedSlots,\n            subscribed = this.subscribed,\n            store = this.store;\n\n        var props = getOptionProps(this);\n        this.preProps = _extends({}, omit(props, ['__propsSymbol__']));\n        var wrapProps = {\n          props: _extends({}, props, subscribed, {\n            store: store\n          }),\n          on: $listeners,\n          attrs: $attrs,\n          scopedSlots: $scopedSlots\n        };\n        return h(\n          WrappedComponent,\n          _mergeJSXProps([wrapProps, { ref: 'wrappedInstance' }]),\n          [Object.keys($slots).map(function (name) {\n            return h(\n              'template',\n              { slot: name },\n              [$slots[name]]\n            );\n          })]\n        );\n      }\n    };\n    return proxyComponent(Connect);\n  };\n}"],"sourceRoot":""}