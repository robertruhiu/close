{"version":3,"sources":["webpack:///./node_modules/@ant-design/colors/lib/generate.js"],"names":["__importDefault","this","mod","__esModule","default","Object","defineProperty","exports","value","tinycolor2_1","__webpack_require__","hueStep","saturationStep","saturationStep2","brightnessStep1","brightnessStep2","lightColorCount","darkColorCount","getHue","hsv","i","light","hue","Math","round","h","getSaturation","s","saturation","getValue","v","generate","color","patterns","pColor","toHsv","colorString","toHexString","push"],"mappings":"wHACA,IAAAA,EAAAC,WAAAD,iBAAA,SAAAE,GACA,OAAAA,KAAAC,WAAAD,EAAA,CAA4CE,QAAAF,IAE5CG,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAAT,EAAmCU,EAAQ,SAC3CC,EAAA,EACAC,EAAA,GACAC,EAAA,EACAC,EAAA,EACAC,EAAA,GACAC,EAAA,EACAC,EAAA,EACA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAcA,OAXAA,EADAC,KAAAC,MAAAL,EAAAM,IAAA,IAAAF,KAAAC,MAAAL,EAAAM,IAAA,IACAJ,EAAAE,KAAAC,MAAAL,EAAAM,GAAAd,EAAAS,EAAAG,KAAAC,MAAAL,EAAAM,GAAAd,EAAAS,EAGAC,EAAAE,KAAAC,MAAAL,EAAAM,GAAAd,EAAAS,EAAAG,KAAAC,MAAAL,EAAAM,GAAAd,EAAAS,EAEAE,EAAA,EACAA,GAAA,IAEAA,GAAA,MACAA,GAAA,KAEAA,EAEA,SAAAI,EAAAP,EAAAC,EAAAC,GAEA,WAAAF,EAAAM,GAAA,IAAAN,EAAAQ,EACAR,EAAAQ,GAIAC,EADAP,EACAE,KAAAC,MAAA,IAAAL,EAAAQ,GAAAf,EAAAQ,EAEAA,IAAAH,EACAM,KAAAC,MAAA,IAAAL,EAAAQ,GAAAf,EAGAW,KAAAC,MAAA,IAAAL,EAAAQ,GAAAd,EAAAO,EAGAQ,EAAA,MACAA,EAAA,KAGAP,GAAAD,IAAAJ,GAAAY,EAAA,KACAA,EAAA,IAEAA,EAAA,IACAA,EAAA,GAEAA,GArBA,IAAAA,EAuBA,SAAAC,EAAAV,EAAAC,EAAAC,GACA,OAAAA,EACAE,KAAAC,MAAA,IAAAL,EAAAW,GAAAhB,EAAAM,EAEAG,KAAAC,MAAA,IAAAL,EAAAW,GAAAf,EAAAK,EAEA,SAAAW,EAAAC,GAGA,IAFA,IAAAC,EAAA,GACAC,EAAAzB,EAAAL,QAAA4B,GACAZ,EAAAJ,EAAiCI,EAAA,EAAOA,GAAA,GACxC,IAAAD,EAAAe,EAAAC,QACAC,EAAA3B,EAAAL,QAAA,CACAqB,EAAAP,EAAAC,EAAAC,GAAA,GACAO,EAAAD,EAAAP,EAAAC,GAAA,GACAU,EAAAD,EAAAV,EAAAC,GAAA,KACSiB,cACTJ,EAAAK,KAAAF,GAEAH,EAAAK,KAAAJ,EAAAG,eACA,IAAAjB,EAAA,EAAmBA,GAAAH,EAAqBG,GAAA,GACxCD,EAAAe,EAAAC,QACAC,EAAA3B,EAAAL,QAAA,CACAqB,EAAAP,EAAAC,EAAAC,GACAO,EAAAD,EAAAP,EAAAC,GACAU,EAAAD,EAAAV,EAAAC,KACSiB,cACTJ,EAAAK,KAAAF,GAEA,OAAAH,EAEA1B,EAAAH,QAAA2B","file":"js/chunk-vendors~fd9f5240.2571fc10.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tinycolor2_1 = __importDefault(require(\"tinycolor2\"));\nvar hueStep = 2; // 色相阶梯\nvar saturationStep = 16; // 饱和度阶梯，浅色部分\nvar saturationStep2 = 5; // 饱和度阶梯，深色部分\nvar brightnessStep1 = 5; // 亮度阶梯，浅色部分\nvar brightnessStep2 = 15; // 亮度阶梯，深色部分\nvar lightColorCount = 5; // 浅色数量，主色上\nvar darkColorCount = 4; // 深色数量，主色下\nfunction getHue(hsv, i, light) {\n    var hue;\n    // 根据色相不同，色相转向不同\n    if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n        hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n    }\n    else {\n        hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n    }\n    if (hue < 0) {\n        hue += 360;\n    }\n    else if (hue >= 360) {\n        hue -= 360;\n    }\n    return hue;\n}\nfunction getSaturation(hsv, i, light) {\n    // grey color don't change saturation\n    if (hsv.h === 0 && hsv.s === 0) {\n        return hsv.s;\n    }\n    var saturation;\n    if (light) {\n        saturation = Math.round(hsv.s * 100) - saturationStep * i;\n    }\n    else if (i === darkColorCount) {\n        saturation = Math.round(hsv.s * 100) + saturationStep;\n    }\n    else {\n        saturation = Math.round(hsv.s * 100) + saturationStep2 * i;\n    }\n    // 边界值修正\n    if (saturation > 100) {\n        saturation = 100;\n    }\n    // 第一格的 s 限制在 6-10 之间\n    if (light && i === lightColorCount && saturation > 10) {\n        saturation = 10;\n    }\n    if (saturation < 6) {\n        saturation = 6;\n    }\n    return saturation;\n}\nfunction getValue(hsv, i, light) {\n    if (light) {\n        return Math.round(hsv.v * 100) + brightnessStep1 * i;\n    }\n    return Math.round(hsv.v * 100) - brightnessStep2 * i;\n}\nfunction generate(color) {\n    var patterns = [];\n    var pColor = tinycolor2_1.default(color);\n    for (var i = lightColorCount; i > 0; i -= 1) {\n        var hsv = pColor.toHsv();\n        var colorString = tinycolor2_1.default({\n            h: getHue(hsv, i, true),\n            s: getSaturation(hsv, i, true),\n            v: getValue(hsv, i, true),\n        }).toHexString();\n        patterns.push(colorString);\n    }\n    patterns.push(pColor.toHexString());\n    for (var i = 1; i <= darkColorCount; i += 1) {\n        var hsv = pColor.toHsv();\n        var colorString = tinycolor2_1.default({\n            h: getHue(hsv, i),\n            s: getSaturation(hsv, i),\n            v: getValue(hsv, i),\n        }).toHexString();\n        patterns.push(colorString);\n    }\n    return patterns;\n}\nexports.default = generate;\n"],"sourceRoot":""}