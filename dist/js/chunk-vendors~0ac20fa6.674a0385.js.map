{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-dialog/Dialog.js"],"names":["babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2___default","_util_props_util__WEBPACK_IMPORTED_MODULE_3__","_util_KeyCode__WEBPACK_IMPORTED_MODULE_4__","_util_Dom_contains__WEBPACK_IMPORTED_MODULE_5__","_LazyRenderBox__WEBPACK_IMPORTED_MODULE_6__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_7__","_util_getTransitionProps__WEBPACK_IMPORTED_MODULE_8__","_util_getScrollBarSize__WEBPACK_IMPORTED_MODULE_9__","_IDialogPropTypes__WEBPACK_IMPORTED_MODULE_10__","IDialogPropTypes","Object","uuid","openCount","noop","getScroll","w","top","ret","method","d","document","documentElement","body","setTransformOrigin","node","value","style","forEach","prefix","offset","el","rect","getBoundingClientRect","pos","left","doc","ownerDocument","defaultView","parentWindow","initDefaultProps","propTypes","defaultProps","keys","map","k","def","__webpack_exports__","mixins","props","mask","visible","keyboard","closable","maskClosable","destroyOnClose","prefixCls","data","destroyPopup","watch","val","_this","this","$nextTick","updatedCallback","beforeMount","inTransition","titleId","mounted","_this2","beforeDestroy","removeScrollingEffect","methods","mousePosition","openTime","Date","now","addScrollingEffect","tryFocus","dialogNode","$refs","dialog","$el","elOffset","x","y","lastOutSideFocusNode","focus","e","wrap","activeElement","sentinelStart","onAnimateLeave","afterClose","display","onMaskClick","target","currentTarget","close","onKeydown","$props","keyCode","ESC","stopPropagation","TAB","shiftKey","sentinelEnd","getDialogElement","h","$createElement","width","height","title","tempFooter","footer","bodyStyle","bodyProps","dest","undefined","key","class","ref","header","attrs","id","closer","closeIcon","on","click","aria-label","dialogStyle","sentinelStyle","overflow","cls","dialogClass","transitionName","getTransitionName","dialogElement","directives","name","role","tabIndex","$slots","dialogTransitionProps","afterLeave","getZIndexStyle","zIndex","getWrapStyle","wrapStyle","getMaskStyle","maskStyle","getMaskElement","maskElement","maskTransition","getMaskTransitionName","maskProps","maskTransitionProps","maskTransitionName","animation","maskAnimation","setScrollbar","bodyIsOverflowing","scrollbarWidth","paddingRight","checkScrollbar","resetScrollbar","__emit","fullWindowWidth","window","innerWidth","documentElementRect","right","Math","abs","clientWidth","adjustDialog","modalIsOverflowing","scrollHeight","clientHeight","paddingLeft","resetAdjustments","render","arguments","wrapClassName","wrapProps","aria-labelledby","keydown"],"mappings":"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","file":"js/chunk-vendors~0ac20fa6.674a0385.js","sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport { getComponentFromProp } from '../_util/props-util';\nimport KeyCode from '../_util/KeyCode';\nimport contains from '../_util/Dom/contains';\nimport LazyRenderBox from './LazyRenderBox';\nimport BaseMixin from '../_util/BaseMixin';\nimport getTransitionProps from '../_util/getTransitionProps';\nimport getScrollBarSize from '../_util/getScrollBarSize';\nimport getDialogPropTypes from './IDialogPropTypes';\nvar IDialogPropTypes = getDialogPropTypes();\n\nvar uuid = 0;\nvar openCount = 0;\n\n/* eslint react/no-is-mounted:0 */\nfunction noop() {}\nfunction getScroll(w, top) {\n  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];\n  var method = 'scroll' + (top ? 'Top' : 'Left');\n  if (typeof ret !== 'number') {\n    var d = w.document;\n    ret = d.documentElement[method];\n    if (typeof ret !== 'number') {\n      ret = d.body[method];\n    }\n  }\n  return ret;\n}\n\nfunction setTransformOrigin(node, value) {\n  var style = node.style;\n  ['Webkit', 'Moz', 'Ms', 'ms'].forEach(function (prefix) {\n    style[prefix + 'TransformOrigin'] = value;\n  });\n  style['transformOrigin'] = value;\n}\n\nfunction offset(el) {\n  var rect = el.getBoundingClientRect();\n  var pos = {\n    left: rect.left,\n    top: rect.top\n  };\n  var doc = el.ownerDocument;\n  var w = doc.defaultView || doc.parentWindow;\n  pos.left += getScroll(w);\n  pos.top += getScroll(w, true);\n  return pos;\n}\nvar initDefaultProps = function initDefaultProps(propTypes, defaultProps) {\n  return Object.keys(defaultProps).map(function (k) {\n    return propTypes[k].def(defaultProps[k]);\n  });\n};\nexport default {\n  mixins: [BaseMixin],\n  props: _extends({}, IDialogPropTypes, initDefaultProps(IDialogPropTypes, {\n    mask: true,\n    visible: false,\n    keyboard: true,\n    closable: true,\n    maskClosable: true,\n    destroyOnClose: false,\n    prefixCls: 'rc-dialog'\n  })),\n  data: function data() {\n    return {\n      destroyPopup: false\n    };\n  },\n\n\n  watch: {\n    visible: function visible(val) {\n      var _this = this;\n\n      if (val) {\n        this.destroyPopup = false;\n      }\n      this.$nextTick(function () {\n        _this.updatedCallback(!val);\n      });\n    }\n  },\n\n  // private inTransition: boolean;\n  // private titleId: string;\n  // private openTime: number;\n  // private lastOutSideFocusNode: HTMLElement | null;\n  // private wrap: HTMLElement;\n  // private dialog: any;\n  // private sentinel: HTMLElement;\n  // private bodyIsOverflowing: boolean;\n  // private scrollbarWidth: number;\n\n  beforeMount: function beforeMount() {\n    this.inTransition = false;\n    this.titleId = 'rcDialogTitle' + uuid++;\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      _this2.updatedCallback(false);\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.visible || this.inTransition) {\n      this.removeScrollingEffect();\n    }\n  },\n\n  methods: {\n    updatedCallback: function updatedCallback(visible) {\n      var mousePosition = this.mousePosition;\n      if (this.visible) {\n        // first show\n        if (!visible) {\n          this.openTime = Date.now();\n          // this.lastOutSideFocusNode = document.activeElement\n          this.addScrollingEffect();\n          // this.$refs.wrap.focus()\n          this.tryFocus();\n          var dialogNode = this.$refs.dialog.$el;\n          if (mousePosition) {\n            var elOffset = offset(dialogNode);\n            setTransformOrigin(dialogNode, mousePosition.x - elOffset.left + 'px ' + (mousePosition.y - elOffset.top) + 'px');\n          } else {\n            setTransformOrigin(dialogNode, '');\n          }\n        }\n      } else if (visible) {\n        this.inTransition = true;\n        if (this.mask && this.lastOutSideFocusNode) {\n          try {\n            this.lastOutSideFocusNode.focus();\n          } catch (e) {\n            this.lastOutSideFocusNode = null;\n          }\n          this.lastOutSideFocusNode = null;\n        }\n      }\n    },\n    tryFocus: function tryFocus() {\n      if (!contains(this.$refs.wrap, document.activeElement)) {\n        this.lastOutSideFocusNode = document.activeElement;\n        this.$refs.sentinelStart.focus();\n      }\n    },\n    onAnimateLeave: function onAnimateLeave() {\n      var afterClose = this.afterClose,\n          destroyOnClose = this.destroyOnClose;\n      // need demo?\n      // https://github.com/react-component/dialog/pull/28\n\n      if (this.$refs.wrap) {\n        this.$refs.wrap.style.display = 'none';\n      }\n      if (destroyOnClose) {\n        this.destroyPopup = true;\n      }\n      this.inTransition = false;\n      this.removeScrollingEffect();\n      if (afterClose) {\n        afterClose();\n      }\n    },\n    onMaskClick: function onMaskClick(e) {\n      // android trigger click on open (fastclick??)\n      if (Date.now() - this.openTime < 300) {\n        return;\n      }\n      if (e.target === e.currentTarget) {\n        this.close(e);\n      }\n    },\n    onKeydown: function onKeydown(e) {\n      var props = this.$props;\n      if (props.keyboard && e.keyCode === KeyCode.ESC) {\n        e.stopPropagation();\n        this.close(e);\n        return;\n      }\n      // keep focus inside dialog\n      if (props.visible) {\n        if (e.keyCode === KeyCode.TAB) {\n          var activeElement = document.activeElement;\n          var sentinelStart = this.$refs.sentinelStart;\n          if (e.shiftKey) {\n            if (activeElement === sentinelStart) {\n              this.$refs.sentinelEnd.focus();\n            }\n          } else if (activeElement === this.$refs.sentinelEnd) {\n            sentinelStart.focus();\n          }\n        }\n      }\n    },\n    getDialogElement: function getDialogElement() {\n      var h = this.$createElement;\n      var closable = this.closable,\n          prefixCls = this.prefixCls,\n          width = this.width,\n          height = this.height,\n          title = this.title,\n          tempFooter = this.footer,\n          bodyStyle = this.bodyStyle,\n          visible = this.visible,\n          bodyProps = this.bodyProps;\n\n      var dest = {};\n      if (width !== undefined) {\n        dest.width = typeof width === 'number' ? width + 'px' : width;\n      }\n      if (height !== undefined) {\n        dest.height = typeof height === 'number' ? height + 'px' : height;\n      }\n\n      var footer = void 0;\n      if (tempFooter) {\n        footer = h(\n          'div',\n          { key: 'footer', 'class': prefixCls + '-footer', ref: 'footer' },\n          [tempFooter]\n        );\n      }\n\n      var header = void 0;\n      if (title) {\n        header = h(\n          'div',\n          { key: 'header', 'class': prefixCls + '-header', ref: 'header' },\n          [h(\n            'div',\n            { 'class': prefixCls + '-title', attrs: { id: this.titleId }\n            },\n            [title]\n          )]\n        );\n      }\n\n      var closer = void 0;\n      if (closable) {\n        var closeIcon = getComponentFromProp(this, 'closeIcon');\n        closer = h(\n          'button',\n          {\n            key: 'close',\n            on: {\n              'click': this.close || noop\n            },\n            attrs: {\n              'aria-label': 'Close'\n            },\n            'class': prefixCls + '-close'\n          },\n          [closeIcon || h('span', { 'class': prefixCls + '-close-x' })]\n        );\n      }\n\n      var style = _extends({}, this.dialogStyle, dest);\n      var sentinelStyle = { width: 0, height: 0, overflow: 'hidden' };\n      var cls = _extends(_defineProperty({}, prefixCls, true), this.dialogClass);\n      var transitionName = this.getTransitionName();\n      var dialogElement = h(\n        LazyRenderBox,\n        {\n          directives: [{\n            name: 'show',\n            value: visible\n          }],\n\n          key: 'dialog-element',\n          attrs: { role: 'document'\n          },\n          ref: 'dialog',\n          style: style,\n          'class': cls\n        },\n        [h(\n          'div',\n          {\n            attrs: { tabIndex: 0 },\n            ref: 'sentinelStart', style: sentinelStyle },\n          ['sentinelStart']\n        ), h(\n          'div',\n          { 'class': prefixCls + '-content' },\n          [closer, header, h(\n            'div',\n            _mergeJSXProps([{ key: 'body', 'class': prefixCls + '-body', style: bodyStyle, ref: 'body' }, bodyProps]),\n            [this.$slots['default']]\n          ), footer]\n        ), h(\n          'div',\n          {\n            attrs: { tabIndex: 0 },\n            ref: 'sentinelEnd', style: sentinelStyle },\n          ['sentinelEnd']\n        )]\n      );\n      var dialogTransitionProps = getTransitionProps(transitionName, {\n        afterLeave: this.onAnimateLeave\n      });\n      return h(\n        'transition',\n        _mergeJSXProps([{ key: 'dialog' }, dialogTransitionProps]),\n        [visible || !this.destroyPopup ? dialogElement : null]\n      );\n    },\n    getZIndexStyle: function getZIndexStyle() {\n      var style = {};\n      var props = this.$props;\n      if (props.zIndex !== undefined) {\n        style.zIndex = props.zIndex;\n      }\n      return style;\n    },\n    getWrapStyle: function getWrapStyle() {\n      return _extends({}, this.getZIndexStyle(), this.wrapStyle);\n    },\n    getMaskStyle: function getMaskStyle() {\n      return _extends({}, this.getZIndexStyle(), this.maskStyle);\n    },\n    getMaskElement: function getMaskElement() {\n      var h = this.$createElement;\n\n      var props = this.$props;\n      var maskElement = void 0;\n      if (props.mask) {\n        var maskTransition = this.getMaskTransitionName();\n        maskElement = h(LazyRenderBox, _mergeJSXProps([{\n          directives: [{\n            name: 'show',\n            value: props.visible\n          }],\n\n          style: this.getMaskStyle(),\n          key: 'mask',\n          'class': props.prefixCls + '-mask'\n        }, props.maskProps]));\n        if (maskTransition) {\n          var maskTransitionProps = getTransitionProps(maskTransition);\n          maskElement = h(\n            'transition',\n            _mergeJSXProps([{ key: 'mask' }, maskTransitionProps]),\n            [maskElement]\n          );\n        }\n      }\n      return maskElement;\n    },\n    getMaskTransitionName: function getMaskTransitionName() {\n      var props = this.$props;\n      var transitionName = props.maskTransitionName;\n      var animation = props.maskAnimation;\n      if (!transitionName && animation) {\n        transitionName = props.prefixCls + '-' + animation;\n      }\n      return transitionName;\n    },\n    getTransitionName: function getTransitionName() {\n      var props = this.$props;\n      var transitionName = props.transitionName;\n      var animation = props.animation;\n      if (!transitionName && animation) {\n        transitionName = props.prefixCls + '-' + animation;\n      }\n      return transitionName;\n    },\n    setScrollbar: function setScrollbar() {\n      if (this.bodyIsOverflowing && this.scrollbarWidth !== undefined) {\n        document.body.style.paddingRight = this.scrollbarWidth + 'px';\n      }\n    },\n    addScrollingEffect: function addScrollingEffect() {\n      openCount++;\n      if (openCount !== 1) {\n        return;\n      }\n      this.checkScrollbar();\n      this.setScrollbar();\n      document.body.style.overflow = 'hidden';\n      // this.adjustDialog();\n    },\n    removeScrollingEffect: function removeScrollingEffect() {\n      openCount--;\n      if (openCount !== 0) {\n        return;\n      }\n      document.body.style.overflow = '';\n      this.resetScrollbar();\n      // this.resetAdjustments();\n    },\n    close: function close(e) {\n      this.__emit('close', e);\n    },\n    checkScrollbar: function checkScrollbar() {\n      var fullWindowWidth = window.innerWidth;\n      if (!fullWindowWidth) {\n        // workaround for missing window.innerWidth in IE8\n        var documentElementRect = document.documentElement.getBoundingClientRect();\n        fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n      }\n      this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\n      if (this.bodyIsOverflowing) {\n        this.scrollbarWidth = getScrollBarSize();\n      }\n    },\n    resetScrollbar: function resetScrollbar() {\n      document.body.style.paddingRight = '';\n    },\n    adjustDialog: function adjustDialog() {\n      if (this.$refs.wrap && this.scrollbarWidth !== undefined) {\n        var modalIsOverflowing = this.$refs.wrap.scrollHeight > document.documentElement.clientHeight;\n        this.$refs.wrap.style.paddingLeft = (!this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '') + 'px';\n        this.$refs.wrap.style.paddingRight = (this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : '') + 'px';\n      }\n    },\n    resetAdjustments: function resetAdjustments() {\n      if (this.$refs.wrap) {\n        this.$refs.wrap.style.paddingLeft = this.$refs.wrap.style.paddingLeft = '';\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var prefixCls = this.prefixCls,\n        maskClosable = this.maskClosable,\n        visible = this.visible,\n        wrapClassName = this.wrapClassName,\n        title = this.title,\n        wrapProps = this.wrapProps;\n\n    var style = this.getWrapStyle();\n    // clear hide display\n    // and only set display after async anim, not here for hide\n    if (visible) {\n      style.display = null;\n    }\n    return h('div', [this.getMaskElement(), h(\n      'div',\n      _mergeJSXProps([{\n        attrs: {\n          tabIndex: -1,\n\n          role: 'dialog',\n          'aria-labelledby': title ? this.titleId : null\n        },\n        on: {\n          'keydown': this.onKeydown,\n          'click': maskClosable ? this.onMaskClick : noop\n        },\n\n        'class': prefixCls + '-wrap ' + (wrapClassName || ''),\n        ref: 'wrap',\n        style: style\n      }, wrapProps]),\n      [this.getDialogElement()]\n    )]);\n  }\n};"],"sourceRoot":""}