{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/form/Form.js"],"names":["babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","_util_vue_types__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_3___default","vue__WEBPACK_IMPORTED_MODULE_4__","lodash_isRegExp__WEBPACK_IMPORTED_MODULE_5__","lodash_isRegExp__WEBPACK_IMPORTED_MODULE_5___default","_util_warning__WEBPACK_IMPORTED_MODULE_6__","_vc_form_src_createDOMForm__WEBPACK_IMPORTED_MODULE_7__","_vc_form_src_createFormField__WEBPACK_IMPORTED_MODULE_8__","_FormItem__WEBPACK_IMPORTED_MODULE_9__","_constants__WEBPACK_IMPORTED_MODULE_10__","_util_props_util__WEBPACK_IMPORTED_MODULE_11__","FormProps","func","any","bool","layout","oneOf","form","object","prefixCls","string","hideRequiredMark","autoFormCreate","options","Form","boolean","number","oneOfType","String","arrayOf","custom","a","name","props","Object","Item","createFormField","create","arguments","length","undefined","fieldNameProp","fieldMetaProp","fieldDataProp","createForm","context","templateContext","created","this","formItemContexts","Map","provide","_this","$props","collectFormItemContext","c","type","get","set","watch","$forceUpdate","beforeUpdate","forEach","updated","cleanUpUselessFields","methods","onSubmit","e","$listeners","submit","$emit","preventDefault","render","_classNames","_this2","h","$slots","_options","formClassName","DomForm","$vnode","decoratorFormProps","data","children","on","class","domForm","attrs","wrappedComponentRef","inst","__webpack_exports__"],"mappings":"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","file":"js/chunk-vendors~378e1d8a.2fe6536e.js","sourcesContent":["import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport PropTypes from '../_util/vue-types';\nimport classNames from 'classnames';\nimport Vue from 'vue';\nimport isRegExp from 'lodash/isRegExp';\nimport warning from '../_util/warning';\nimport createDOMForm from '../vc-form/src/createDOMForm';\nimport createFormField from '../vc-form/src/createFormField';\nimport FormItem from './FormItem';\nimport { FIELD_META_PROP, FIELD_DATA_PROP } from './constants';\nimport { initDefaultProps } from '../_util/props-util';\n\nexport var FormCreateOption = {\n  onFieldsChange: PropTypes.func,\n  onValuesChange: PropTypes.func,\n  mapPropsToFields: PropTypes.func,\n  validateMessages: PropTypes.any,\n  withRef: PropTypes.bool\n};\n\n// function create\nexport var WrappedFormUtils = {\n  /** 获取一组输入控件的值，如不传入参数，则获取全部组件的值 */\n  getFieldsValue: PropTypes.func,\n  /** 获取一个输入控件的值*/\n  getFieldValue: PropTypes.func,\n  /** 设置一组输入控件的值*/\n  setFieldsValue: PropTypes.func,\n  /** 设置一组输入控件的值*/\n  setFields: PropTypes.func,\n  /** 校验并获取一组输入域的值与 Error */\n  validateFields: PropTypes.func,\n  // validateFields(fieldNames: Array<string>, options: Object, callback: ValidateCallback): void;\n  // validateFields(fieldNames: Array<string>, callback: ValidateCallback): void;\n  // validateFields(options: Object, callback: ValidateCallback): void;\n  // validateFields(callback: ValidateCallback): void;\n  // validateFields(): void;\n  /** 与 `validateFields` 相似，但校验完后，如果校验不通过的菜单域不在可见范围内，则自动滚动进可见范围 */\n  validateFieldsAndScroll: PropTypes.func,\n  // validateFieldsAndScroll(fieldNames?: Array<string>, options?: Object, callback?: ValidateCallback): void;\n  // validateFieldsAndScroll(fieldNames?: Array<string>, callback?: ValidateCallback): void;\n  // validateFieldsAndScroll(options?: Object, callback?: ValidateCallback): void;\n  // validateFieldsAndScroll(callback?: ValidateCallback): void;\n  // validateFieldsAndScroll(): void;\n  /** 获取某个输入控件的 Error */\n  getFieldError: PropTypes.func,\n  getFieldsError: PropTypes.func,\n  /** 判断一个输入控件是否在校验状态*/\n  isFieldValidating: PropTypes.func,\n  isFieldTouched: PropTypes.func,\n  isFieldsTouched: PropTypes.func,\n  /** 重置一组输入控件的值与状态，如不传入参数，则重置所有组件 */\n  resetFields: PropTypes.func,\n\n  getFieldDecorator: PropTypes.func\n};\n\nexport var FormProps = {\n  layout: PropTypes.oneOf(['horizontal', 'inline', 'vertical']),\n  form: PropTypes.object,\n  // onSubmit: React.FormEventHandler<any>;\n  prefixCls: PropTypes.string,\n  hideRequiredMark: PropTypes.bool,\n  autoFormCreate: PropTypes.func,\n  options: PropTypes.object\n};\n\nexport var ValidationRule = {\n  /** validation error message */\n  message: PropTypes.string,\n  /** built-in validation type, available options: https://github.com/yiminghe/async-validator#type */\n  type: PropTypes.string,\n  /** indicates whether field is required */\n  required: PropTypes.boolean,\n  /** treat required fields that only contain whitespace as errors */\n  whitespace: PropTypes.boolean,\n  /** validate the exact length of a field */\n  len: PropTypes.number,\n  /** validate the min length of a field */\n  min: PropTypes.number,\n  /** validate the max length of a field */\n  max: PropTypes.number,\n  /** validate the value from a list of possible values */\n  'enum': PropTypes.oneOfType([String, PropTypes.arrayOf(String)]),\n  /** validate from a regular expression */\n  pattern: PropTypes.custom(isRegExp),\n  /** transform a value before validation */\n  transform: PropTypes.func,\n  /** custom validate function (Note: callback must be called) */\n  validator: PropTypes.func\n};\n\n// export type ValidateCallback = (errors: any, values: any) => void;\n\n// export type GetFieldDecoratorOptions = {\n//   /** 子节点的值的属性，如 Checkbox 的是 'checked' */\n//   valuePropName?: string;\n//   /** 子节点的初始值，类型、可选值均由子节点决定 */\n//   initialValue?: any;\n//   /** 收集子节点的值的时机 */\n//   trigger?: string;\n//   /** 可以把 onChange 的参数转化为控件的值，例如 DatePicker 可设为：(date, dateString) => dateString */\n//   getValueFromEvent?: (...args: any[]) => any;\n//   /** Get the component props according to field value. */\n//   getValueProps?: (value: any) => any;\n//   /** 校验子节点值的时机 */\n//   validateTrigger?: string | string[];\n//   /** 校验规则，参见 [async-validator](https://github.com/yiminghe/async-validator) */\n//   rules?: ValidationRule[];\n//   /** 是否和其他控件互斥，特别用于 Radio 单选控件 */\n//   exclusive?: boolean;\n//   /** Normalize value to form component */\n//   normalize?: (value: any, prevValue: any, allValues: any) => any;\n//   /** Whether stop validate on first rule of error for this field.  */\n//   validateFirst?: boolean;\n//   /** 是否一直保留子节点的信息 */\n//   preserve?: boolean;\n// };\n\nvar Form = {\n  name: 'AForm',\n  props: initDefaultProps(FormProps, {\n    prefixCls: 'ant-form',\n    layout: 'horizontal',\n    hideRequiredMark: false\n  }),\n\n  Item: FormItem,\n\n  createFormField: createFormField,\n\n  create: function create() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    return createDOMForm(_extends({\n      fieldNameProp: 'id'\n    }, options, {\n      fieldMetaProp: FIELD_META_PROP,\n      fieldDataProp: FIELD_DATA_PROP\n    }));\n  },\n  createForm: function createForm(context) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return new Vue(Form.create(_extends({}, options, { templateContext: context }))());\n  },\n  created: function created() {\n    this.formItemContexts = new Map();\n  },\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      FormProps: this.$props,\n      // https://github.com/vueComponent/ant-design-vue/issues/446\n      collectFormItemContext: this.form && this.form.templateContext ? function (c) {\n        var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'add';\n\n        var formItemContexts = _this.formItemContexts;\n        var number = formItemContexts.get(c) || 0;\n        if (type === 'delete') {\n          if (number <= 1) {\n            formItemContexts['delete'](c);\n          } else {\n            formItemContexts.set(c, number - 1);\n          }\n        } else {\n          if (c !== _this.form.templateContext) {\n            formItemContexts.set(c, number + 1);\n          }\n        }\n      } : function () {}\n    };\n  },\n\n  watch: {\n    form: function form() {\n      this.$forceUpdate();\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    this.formItemContexts.forEach(function (number, c) {\n      if (c.$forceUpdate) {\n        c.$forceUpdate();\n      }\n    });\n  },\n  updated: function updated() {\n    if (this.form && this.form.cleanUpUselessFields) {\n      this.form.cleanUpUselessFields();\n    }\n  },\n\n  methods: {\n    onSubmit: function onSubmit(e) {\n      var $listeners = this.$listeners;\n\n      if (!$listeners.submit) {\n        e.preventDefault();\n      } else {\n        this.$emit('submit', e);\n      }\n    }\n  },\n\n  render: function render() {\n    var _classNames,\n        _this2 = this;\n\n    var h = arguments[0];\n    var prefixCls = this.prefixCls,\n        hideRequiredMark = this.hideRequiredMark,\n        layout = this.layout,\n        onSubmit = this.onSubmit,\n        $slots = this.$slots,\n        autoFormCreate = this.autoFormCreate,\n        _options = this.options,\n        options = _options === undefined ? {} : _options;\n\n\n    var formClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-horizontal', layout === 'horizontal'), _defineProperty(_classNames, prefixCls + '-vertical', layout === 'vertical'), _defineProperty(_classNames, prefixCls + '-inline', layout === 'inline'), _defineProperty(_classNames, prefixCls + '-hide-required-mark', hideRequiredMark), _classNames));\n    if (autoFormCreate) {\n      warning(false, '`autoFormCreate` is deprecated. please use `form` instead.');\n      var DomForm = this.DomForm || createDOMForm(_extends({\n        fieldNameProp: 'id'\n      }, options, {\n        fieldMetaProp: FIELD_META_PROP,\n        fieldDataProp: FIELD_DATA_PROP,\n        templateContext: this.$vnode.context\n      }))({\n        provide: function provide() {\n          return {\n            decoratorFormProps: this.$props\n          };\n        },\n        data: function data() {\n          return {\n            children: $slots['default'],\n            formClassName: formClassName,\n            submit: onSubmit\n          };\n        },\n        created: function created() {\n          autoFormCreate(this.form);\n        },\n        render: function render() {\n          var h = arguments[0];\n          var children = this.children,\n              formClassName = this.formClassName,\n              submit = this.submit;\n\n          return h(\n            'form',\n            {\n              on: {\n                'submit': submit\n              },\n              'class': formClassName },\n            [children]\n          );\n        }\n      });\n      if (this.domForm) {\n        this.domForm.children = $slots['default'];\n        this.domForm.submit = onSubmit;\n        this.domForm.formClassName = formClassName;\n      }\n      this.DomForm = DomForm;\n\n      return h(DomForm, {\n        attrs: {\n          wrappedComponentRef: function wrappedComponentRef(inst) {\n            _this2.domForm = inst;\n          }\n        }\n      });\n    }\n    return h(\n      'form',\n      {\n        on: {\n          'submit': onSubmit\n        },\n        'class': formClassName },\n      [$slots['default']]\n    );\n  }\n};\n\nexport default Form;"],"sourceRoot":""}