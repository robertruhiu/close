{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/tag/Tag.js"],"names":["babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","_util_vue_types__WEBPACK_IMPORTED_MODULE_2__","_icon__WEBPACK_IMPORTED_MODULE_3__","_util_getTransitionProps__WEBPACK_IMPORTED_MODULE_4__","omit_js__WEBPACK_IMPORTED_MODULE_5__","_util_wave__WEBPACK_IMPORTED_MODULE_6__","_util_props_util__WEBPACK_IMPORTED_MODULE_7__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_8__","__webpack_exports__","name","mixins","model","prop","event","props","prefixCls","string","def","color","closable","bool","visible","afterClose","func","data","_visible","Object","this","watch","val","setState","methods","setVisible","e","$emit","defaultPrevented","handleIconClick","animationEnd","isPresetColor","test","getTagStyle","$props","backgroundColor","undefined","getTagClassName","_ref","_$props","renderCloseIcon","h","$createElement","attrs","type","on","click","render","arguments","$data","tag","directives","value","$listeners","class","style","$slots","transitionProps","appear","afterLeave"],"mappings":"wHAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,QAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,QAAAM,EAAAN,EAAA,QAAAO,EAAAP,EAAA,QAAAQ,EAAAR,EAAA,QAAAS,EAAAT,EAAA,QAAAU,EAAAV,EAAA,QAAAW,EAAAX,EAAA,QAUeY,EAAA,MACfC,KAAA,OACAC,OAAA,CAAWH,EAAA,MACXI,MAAA,CACAC,KAAA,UACAC,MAAA,iBAEAC,MAAA,CACAC,UAAed,EAAA,KAASe,OAAAC,IAAA,WACxBC,MAAWjB,EAAA,KAASe,OACpBG,SAAclB,EAAA,KAASmB,KAAAH,KAAA,GACvBI,QAAapB,EAAA,KAASmB,KACtBE,WAAgBrB,EAAA,KAASsB,MAEzBC,KAAA,WACA,IAAAC,GAAA,EAIA,OAHQC,OAAApB,EAAA,KAAAoB,CAAOC,KAAA,aACfF,EAAAE,KAAAN,SAEA,CACAI,aAIAG,MAAA,CACAP,QAAA,SAAAQ,GACAF,KAAAG,SAAA,CACAL,SAAAI,MAIAE,QAAA,CACAC,WAAA,SAAAX,EAAAY,GACAN,KAAAO,MAAA,QAAAD,GACAN,KAAAO,MAAA,oBACAD,EAAAE,kBAGWT,OAAApB,EAAA,KAAAoB,CAAOC,KAAA,YAClBA,KAAAG,SAAA,CAAuBL,SAAAJ,KAGvBe,gBAAA,SAAAH,GACAN,KAAAK,YAAA,EAAAC,IAEAI,aAAA,WACA,IAAAf,EAAAK,KAAAL,WACAA,GACAA,KAGAgB,cAAA,SAAApB,GACA,QAAAA,GAGA,kGAAAqB,KAAArB,IAGAsB,YAAA,WACA,IAAAtB,EAAAS,KAAAc,OAAAvB,MAEAoB,EAAAX,KAAAW,cAAApB,GACA,OACAwB,gBAAAxB,IAAAoB,EAAApB,OAAAyB,IAGAC,gBAAA,WACA,IAAAC,EAEAC,EAAAnB,KAAAc,OACA1B,EAAA+B,EAAA/B,UACAG,EAAA4B,EAAA5B,MAEAoB,EAAAX,KAAAW,cAAApB,GACA,OAAA2B,EAAA,GAAwB7C,IAAe6C,EAAA9B,GAAA,GAAyBf,IAAe6C,EAAA9B,EAAA,IAAAG,EAAAoB,GAAgDtC,IAAe6C,EAAA9B,EAAA,aAAAG,IAAAoB,GAAAO,GAE9IE,gBAAA,WACA,IAAAC,EAAArB,KAAAsB,eACA9B,EAAAQ,KAAAc,OAAAtB,SAEA,OAAAA,EAAA6B,EAA0B9C,EAAA,KAAI,CAC9BgD,MAAA,CAAgBC,KAAA,SAChBC,GAAA,CACAC,MAAA1B,KAAAS,mBAEO,OAIPkB,OAAA,WACA,IAAAN,EAAAO,UAAA,GACAxC,EAAAY,KAAAc,OAAA1B,UACAM,EAAAM,KAAA6B,MAAA/B,SAEAgC,EAAAT,EACA,MACMnD,IAAc,EACpB6D,WAAA,EACAjD,KAAA,OACAkD,MAAAtC,KAEO,CAAG+B,GAAK1B,OAAAtB,EAAA,KAAAsB,CAAIC,KAAAiC,WAAA,YAA8B,CACjDC,MAAAlC,KAAAiB,kBACAkB,MAAAnC,KAAAa,iBAEA,CAAAb,KAAAoC,OAAA,WAAApC,KAAAoB,oBAEAiB,EAA0BtC,OAAAvB,EAAA,KAAAuB,CAAkBX,EAAA,SAC5CkD,QAAA,EACAC,WAAAvC,KAAAU,eAEA,OAAAW,EAAa3C,EAAA,KAAI,CAAA2C,EACjB,aACAgB,EACA,CAAAP","file":"js/chunk-vendors~9b51831f.bc94f28b.js","sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport PropTypes from '../_util/vue-types';\nimport Icon from '../icon';\nimport getTransitionProps from '../_util/getTransitionProps';\nimport omit from 'omit.js';\nimport Wave from '../_util/wave';\nimport { hasProp } from '../_util/props-util';\nimport BaseMixin from '../_util/BaseMixin';\n\nexport default {\n  name: 'ATag',\n  mixins: [BaseMixin],\n  model: {\n    prop: 'visible',\n    event: 'close.visible'\n  },\n  props: {\n    prefixCls: PropTypes.string.def('ant-tag'),\n    color: PropTypes.string,\n    closable: PropTypes.bool.def(false),\n    visible: PropTypes.bool,\n    afterClose: PropTypes.func\n  },\n  data: function data() {\n    var _visible = true;\n    if (hasProp(this, 'visible')) {\n      _visible = this.visible;\n    }\n    return {\n      _visible: _visible\n    };\n  },\n\n  watch: {\n    visible: function visible(val) {\n      this.setState({\n        _visible: val\n      });\n    }\n  },\n  methods: {\n    setVisible: function setVisible(visible, e) {\n      this.$emit('close', e);\n      this.$emit('close.visible', false);\n      if (e.defaultPrevented) {\n        return;\n      }\n      if (!hasProp(this, 'visible')) {\n        this.setState({ _visible: visible });\n      }\n    },\n    handleIconClick: function handleIconClick(e) {\n      this.setVisible(false, e);\n    },\n    animationEnd: function animationEnd() {\n      var afterClose = this.afterClose;\n      if (afterClose) {\n        afterClose();\n      }\n    },\n    isPresetColor: function isPresetColor(color) {\n      if (!color) {\n        return false;\n      }\n      return (/^(pink|red|yellow|orange|cyan|green|blue|purple|geekblue|magenta|volcano|gold|lime)(-inverse)?$/.test(color)\n      );\n    },\n    getTagStyle: function getTagStyle() {\n      var color = this.$props.color;\n\n      var isPresetColor = this.isPresetColor(color);\n      return {\n        backgroundColor: color && !isPresetColor ? color : undefined\n      };\n    },\n    getTagClassName: function getTagClassName() {\n      var _ref;\n\n      var _$props = this.$props,\n          prefixCls = _$props.prefixCls,\n          color = _$props.color;\n\n      var isPresetColor = this.isPresetColor(color);\n      return _ref = {}, _defineProperty(_ref, prefixCls, true), _defineProperty(_ref, prefixCls + '-' + color, isPresetColor), _defineProperty(_ref, prefixCls + '-has-color', color && !isPresetColor), _ref;\n    },\n    renderCloseIcon: function renderCloseIcon() {\n      var h = this.$createElement;\n      var closable = this.$props.closable;\n\n      return closable ? h(Icon, {\n        attrs: { type: 'close' },\n        on: {\n          'click': this.handleIconClick\n        }\n      }) : null;\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var prefixCls = this.$props.prefixCls;\n    var visible = this.$data._visible;\n\n    var tag = h(\n      'div',\n      _mergeJSXProps([{\n        directives: [{\n          name: 'show',\n          value: visible\n        }]\n      }, { on: omit(this.$listeners, ['close']) }, {\n        'class': this.getTagClassName(),\n        style: this.getTagStyle()\n      }]),\n      [this.$slots['default'], this.renderCloseIcon()]\n    );\n    var transitionProps = getTransitionProps(prefixCls + '-zoom', {\n      appear: false,\n      afterLeave: this.animationEnd\n    });\n    return h(Wave, [h(\n      'transition',\n      transitionProps,\n      [tag]\n    )]);\n  }\n};"],"sourceRoot":""}