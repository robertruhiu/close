{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-tabs/src/TabContent.js"],"names":["babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","n","_util_vue_types__WEBPACK_IMPORTED_MODULE_1__","_util_vnode__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","__webpack_exports__","name","props","animated","type","Boolean","default","animatedWithMargin","prefixCls","String","activeKey","oneOfType","string","number","tabBarPosition","computed","classes","_ref","this","methods","getTabPanes","$props","children","$slots","newChildren","forEach","child","key","active","push","Object","destroyInactiveTabPane","rootPrefixCls","render","h","arguments","style","activeIndex","animatedStyle","display","class"],"mappings":"wHAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,QAAAI,EAAAJ,EAAA,QAAAK,EAAAL,EAAA,QAIeM,EAAA,MACfC,KAAA,aACAC,MAAA,CACAC,SAAA,CAAeC,KAAAC,QAAAC,SAAA,GACfC,mBAAA,CAAyBH,KAAAC,QAAAC,SAAA,GACzBE,UAAA,CACAF,QAAA,WACAF,KAAAK,QAEAC,UAAeb,EAAA,KAASc,UAAA,CAAYd,EAAA,KAASe,OAASf,EAAA,KAASgB,SAC/DC,eAAAL,QAEAM,SAAA,CACAC,QAAA,WACA,IAAAC,EAEAd,EAAAe,KAAAf,SACAK,EAAAU,KAAAV,UAEA,OAAAS,EAAA,GAAwBtB,IAAesB,EAAAT,EAAA,eAAsCb,IAAesB,EAAAd,EAAAK,EAAA,oBAAAA,EAAA,2BAAAS,IAG5FE,QAAA,CACAC,YAAA,WACA,IAAAlB,EAAAgB,KAAAG,OACAX,EAAAR,EAAAQ,UACAY,EAAAJ,KAAAK,OAAA,eACAC,EAAA,GAiBA,OAfAF,EAAAG,QAAA,SAAAC,GACA,GAAAA,EAAA,CAGA,IAAAC,EAAAD,EAAAC,IACAC,EAAAlB,IAAAiB,EACAH,EAAAK,KAAyBC,OAAAhC,EAAA,KAAAgC,CAAYJ,EAAA,CACrCxB,MAAA,CACA0B,SACAG,uBAAA7B,EAAA6B,uBACAC,cAAA9B,EAAAM,iBAKAgB,IAGAS,OAAA,WACA,IAAAC,EAAAC,UAAA,GACAzB,EAAAQ,KAAAR,UACAI,EAAAI,KAAAJ,eACAX,EAAAe,KAAAf,SACAI,EAAAW,KAAAX,mBACAS,EAAAE,KAAAF,QAEAoB,EAAA,GACA,GAAAjC,GAAAe,KAAAK,OAAA,YACA,IAAAc,EAAwBP,OAAA/B,EAAA,KAAA+B,CAAcZ,KAAAK,OAAA,WAAAb,GACtC,QAAA2B,EAAA,CACA,IAAAC,EAAA/B,EAAiDuB,OAAA/B,EAAA,KAAA+B,CAAcO,EAAAvB,GAAgCgB,OAAA/B,EAAA,KAAA+B,CAAsBA,OAAA/B,EAAA,KAAA+B,CAAmBO,EAAAvB,IACxIsB,EAAAE,OAEAF,EAAA,CACAG,QAAA,QAIA,OAAAL,EACA,MACA,CAAOM,MAAAxB,EAAAoB,SACP,CAAAlB,KAAAE","file":"js/chunk-vendors~40fd5139.33dce1a5.js","sourcesContent":["import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport PropTypes from '../../_util/vue-types';\nimport { cloneElement } from '../../_util/vnode';\nimport { getTransformByIndex, getActiveIndex, getTransformPropValue, getMarginStyle } from './utils';\nexport default {\n  name: 'TabContent',\n  props: {\n    animated: { type: Boolean, 'default': true },\n    animatedWithMargin: { type: Boolean, 'default': true },\n    prefixCls: {\n      'default': 'ant-tabs',\n      type: String\n    },\n    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    tabBarPosition: String\n  },\n  computed: {\n    classes: function classes() {\n      var _ref;\n\n      var animated = this.animated,\n          prefixCls = this.prefixCls;\n\n      return _ref = {}, _defineProperty(_ref, prefixCls + '-content', true), _defineProperty(_ref, animated ? prefixCls + '-content-animated' : prefixCls + '-content-no-animated', true), _ref;\n    }\n  },\n  methods: {\n    getTabPanes: function getTabPanes() {\n      var props = this.$props;\n      var activeKey = props.activeKey;\n      var children = this.$slots['default'] || [];\n      var newChildren = [];\n\n      children.forEach(function (child) {\n        if (!child) {\n          return;\n        }\n        var key = child.key;\n        var active = activeKey === key;\n        newChildren.push(cloneElement(child, {\n          props: {\n            active: active,\n            destroyInactiveTabPane: props.destroyInactiveTabPane,\n            rootPrefixCls: props.prefixCls\n          }\n        }));\n      });\n\n      return newChildren;\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var activeKey = this.activeKey,\n        tabBarPosition = this.tabBarPosition,\n        animated = this.animated,\n        animatedWithMargin = this.animatedWithMargin,\n        classes = this.classes;\n\n    var style = {};\n    if (animated && this.$slots['default']) {\n      var activeIndex = getActiveIndex(this.$slots['default'], activeKey);\n      if (activeIndex !== -1) {\n        var animatedStyle = animatedWithMargin ? getMarginStyle(activeIndex, tabBarPosition) : getTransformPropValue(getTransformByIndex(activeIndex, tabBarPosition));\n        style = animatedStyle;\n      } else {\n        style = {\n          display: 'none'\n        };\n      }\n    }\n    return h(\n      'div',\n      { 'class': classes, style: style },\n      [this.getTabPanes()]\n    );\n  }\n};"],"sourceRoot":""}