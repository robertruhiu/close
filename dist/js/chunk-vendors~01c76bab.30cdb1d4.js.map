{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/spin/Spin.js"],"names":["__webpack_require__","d","__webpack_exports__","SpinProps","setDefaultIndicator","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","_util_vue_types__WEBPACK_IMPORTED_MODULE_3__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_4__","_util_props_util__WEBPACK_IMPORTED_MODULE_5__","_util_vnode__WEBPACK_IMPORTED_MODULE_6__","SpinSize","oneOf","prefixCls","string","spinning","bool","size","wrapperClassName","tip","delay","number","indicator","any","defaultIndicator","shouldDelay","isNaN","Number","content","h","name","mixins","props","Object","data","this","debounceTimeout","delayTimeout","sSpinning","updated","_this","$nextTick","clearTimeout","window","setTimeout","setState","delayUpdateSpinning","beforeDestroy","methods","getChildren","$slots","renderIndicator","dotClassName","Array","isArray","length","class","render","_spinClassName","_$props","$props","restProps","spinClassName","spinElement","children","_containerClassName","containerClassName","on","$listeners","key"],"mappings":"wHAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,QAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,QAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,QAAAW,EAAAX,EAAAO,EAAAG,GAAAE,EAAAZ,EAAA,QAAAa,EAAAb,EAAA,QAAAc,EAAAd,EAAA,QAAAe,EAAAf,EAAA,QAQOgB,EAAeJ,EAAA,KAASK,MAAA,6BAExBd,EAAA,WACP,OACAe,UAAeN,EAAA,KAASO,OACxBC,SAAcR,EAAA,KAASS,KACvBC,KAAAN,EACAO,iBAAsBX,EAAA,KAASO,OAC/BK,IAASZ,EAAA,KAASO,OAClBM,MAAWb,EAAA,KAASc,OACpBC,UAAef,EAAA,KAASgB,MAKxBC,OAAA,EAEA,SAAAC,EAAAV,EAAAK,GACA,QAAAL,KAAAK,IAAAM,MAAAC,OAAAP,IAGO,SAAArB,EAAA6B,GACPJ,EAAA,oBAAAI,EAAAN,UAAAM,EAAAN,UAAA,SAAAO,GACA,OAAAA,EAAAD,EAAAN,YAIezB,EAAA,MACfiC,KAAA,QACAC,OAAA,CAAWvB,EAAA,MACXwB,MAASC,OAAAxB,EAAA,KAAAwB,CAAgBnC,IAAA,CACzBe,UAAA,WACAI,KAAA,UACAF,UAAA,EACAG,iBAAA,KAEAgB,KAAA,WACA,IAAAnB,EAAAoB,KAAApB,SACAK,EAAAe,KAAAf,MAIA,OAFAe,KAAAC,gBAAA,KACAD,KAAAE,aAAA,KACA,CACAC,UAAAvB,IAAAU,EAAAV,EAAAK,KAGAmB,QAAA,WACA,IAAAC,EAAAL,KAEAA,KAAAM,UAAA,WACA,IAAArB,EAAAoB,EAAApB,MACAL,EAAAyB,EAAAzB,SACAuB,EAAAE,EAAAF,UAEAA,IAAAvB,IAIAyB,EAAAJ,iBACAM,aAAAF,EAAAJ,iBAEAE,IAAAvB,GACAyB,EAAAJ,gBAAAO,OAAAC,WAAA,WACA,OAAAJ,EAAAK,SAAA,CAAiCP,UAAAvB,KACxB,KACTyB,EAAAH,cACAK,aAAAF,EAAAH,eAGAZ,EAAAV,EAAAK,IACAoB,EAAAH,cACAK,aAAAF,EAAAH,cAEAG,EAAAH,aAAAM,OAAAC,WAAAJ,EAAAM,oBAAA1B,IAEAoB,EAAAK,SAAA,CAA0BP,UAAAvB,QAK1BgC,cAAA,WACAZ,KAAAC,iBACAM,aAAAP,KAAAC,iBAEAD,KAAAE,cACAK,aAAAP,KAAAE,eAIAW,QAAA,CACAF,oBAAA,WACA,IAAA/B,EAAAoB,KAAApB,SACAuB,EAAAH,KAAAG,UAEAA,IAAAvB,GACAoB,KAAAU,SAAA,CAAuBP,UAAAvB,KAGvBkC,YAAA,WACA,OAAAd,KAAAe,QAAAf,KAAAe,OAAA,WACejB,OAAAxB,EAAA,KAAAwB,CAAWE,KAAAe,OAAA,YAE1B,MAEAC,gBAAA,SAAAtB,EAAAG,GAEA,IAAAnB,EAAAmB,EAAAnB,UAEAuC,EAAAvC,EAAA,OACAS,EAAsBW,OAAAxB,EAAA,KAAAwB,CAAoBE,KAAA,aAK1C,OAJAkB,MAAAC,QAAAhC,KACAA,EAAoBW,OAAAxB,EAAA,KAAAwB,CAAWX,GAC/BA,EAAA,IAAAA,EAAAiC,OAAAjC,EAAA,GAAAA,GAEUW,OAAAxB,EAAA,KAAAwB,CAAcX,GACTW,OAAAvB,EAAA,KAAAuB,CAAYX,EAAA,CAAakC,MAAAJ,IAGxC5B,GAA8BS,OAAAxB,EAAA,KAAAwB,CAAcT,EAAAK,IAC7BI,OAAAvB,EAAA,KAAAuB,CAAYT,EAAAK,GAAA,CAAuB2B,MAAAJ,IAGlDvB,EACA,OACA,CAAS2B,MAAAJ,EAAA,IAAAvC,EAAA,aACT,CAAAgB,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,SAIA4B,OAAA,SAAA5B,GACA,IAAA6B,EAEAC,EAAAxB,KAAAyB,OACA3C,EAAA0C,EAAA1C,KACAJ,EAAA8C,EAAA9C,UACAM,EAAAwC,EAAAxC,IACAD,EAAAyC,EAAAzC,iBACA2C,EAAoBvD,IAAwBqD,EAAA,+CAE5CrB,EAAAH,KAAAG,UAEAwB,GAAAJ,EAAA,GAA8CtD,IAAesD,EAAA7C,GAAA,GAAmCT,IAAesD,EAAA7C,EAAA,gBAAAI,GAAuDb,IAAesD,EAAA7C,EAAA,gBAAAI,GAAuDb,IAAesD,EAAA7C,EAAA,YAAAyB,GAAsDlC,IAAesD,EAAA7C,EAAA,eAAAM,GAAAuC,GAEhUK,EAAAlC,EACA,MACM5B,IAAc,CAAA4D,EAAA,CAAcL,MAAAM,KAClC,CAAA3B,KAAAgB,gBAAAtB,EAAAM,KAAAyB,QAAAzC,EAAAU,EACA,MACA,CAAS2B,MAAA3C,EAAA,SACT,CAAAM,IACA,OAEA6C,EAAA7B,KAAAc,cACA,GAAAe,EAAA,CACA,IAAAC,EAEAC,GAAAD,EAAA,GAA0D7D,IAAe6D,EAAApD,EAAA,iBAAuDT,IAAe6D,EAAApD,EAAA,QAAAyB,GAAA2B,GAE/I,OAAApC,EACA,MACQ5B,IAAc,EAAGkE,GAAAhC,KAAAiC,YAAsB,CAAGZ,MAAA,CAAA3C,EAAA,kBAAAK,MAClD,CAAAoB,GAAAT,EACA,MACA,CAAWwC,IAAA,WACX,CAAAN,IACAlC,EACA,MACA,CAAW2B,MAAAU,EAAAG,IAAA,aACX,CAAAL,MAIA,OAAAD","file":"js/chunk-vendors~01c76bab.30cdb1d4.js","sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport PropTypes from '../_util/vue-types';\nimport BaseMixin from '../_util/BaseMixin';\nimport { filterEmpty, initDefaultProps, isValidElement, getComponentFromProp } from '../_util/props-util';\nimport { cloneElement } from '../_util/vnode';\n\nexport var SpinSize = PropTypes.oneOf(['small', 'default', 'large']);\n\nexport var SpinProps = function SpinProps() {\n  return {\n    prefixCls: PropTypes.string,\n    spinning: PropTypes.bool,\n    size: SpinSize,\n    wrapperClassName: PropTypes.string,\n    tip: PropTypes.string,\n    delay: PropTypes.number,\n    indicator: PropTypes.any\n  };\n};\n\n// Render indicator\nvar defaultIndicator = void 0;\n\nfunction shouldDelay(spinning, delay) {\n  return !!spinning && !!delay && !isNaN(Number(delay));\n}\n\nexport function setDefaultIndicator(content) {\n  defaultIndicator = typeof content.indicator === 'function' ? content.indicator : function (h) {\n    return h(content.indicator);\n  };\n}\n\nexport default {\n  name: 'ASpin',\n  mixins: [BaseMixin],\n  props: initDefaultProps(SpinProps(), {\n    prefixCls: 'ant-spin',\n    size: 'default',\n    spinning: true,\n    wrapperClassName: ''\n  }),\n  data: function data() {\n    var spinning = this.spinning,\n        delay = this.delay;\n\n    this.debounceTimeout = null;\n    this.delayTimeout = null;\n    return {\n      sSpinning: spinning && !shouldDelay(spinning, delay)\n    };\n  },\n  updated: function updated() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      var delay = _this.delay,\n          spinning = _this.spinning,\n          sSpinning = _this.sSpinning;\n\n      if (sSpinning === spinning) {\n        return;\n      }\n\n      if (_this.debounceTimeout) {\n        clearTimeout(_this.debounceTimeout);\n      }\n      if (sSpinning && !spinning) {\n        _this.debounceTimeout = window.setTimeout(function () {\n          return _this.setState({ sSpinning: spinning });\n        }, 200);\n        if (_this.delayTimeout) {\n          clearTimeout(_this.delayTimeout);\n        }\n      } else {\n        if (shouldDelay(spinning, delay)) {\n          if (_this.delayTimeout) {\n            clearTimeout(_this.delayTimeout);\n          }\n          _this.delayTimeout = window.setTimeout(_this.delayUpdateSpinning, delay);\n        } else {\n          _this.setState({ sSpinning: spinning });\n        }\n      }\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.debounceTimeout) {\n      clearTimeout(this.debounceTimeout);\n    }\n    if (this.delayTimeout) {\n      clearTimeout(this.delayTimeout);\n    }\n  },\n\n  methods: {\n    delayUpdateSpinning: function delayUpdateSpinning() {\n      var spinning = this.spinning,\n          sSpinning = this.sSpinning;\n\n      if (sSpinning !== spinning) {\n        this.setState({ sSpinning: spinning });\n      }\n    },\n    getChildren: function getChildren() {\n      if (this.$slots && this.$slots['default']) {\n        return filterEmpty(this.$slots['default']);\n      }\n      return null;\n    },\n    renderIndicator: function renderIndicator(h, props) {\n      // const h = this.$createElement\n      var prefixCls = props.prefixCls;\n\n      var dotClassName = prefixCls + '-dot';\n      var indicator = getComponentFromProp(this, 'indicator');\n      if (Array.isArray(indicator)) {\n        indicator = filterEmpty(indicator);\n        indicator = indicator.length === 1 ? indicator[0] : indicator;\n      }\n      if (isValidElement(indicator)) {\n        return cloneElement(indicator, { 'class': dotClassName });\n      }\n\n      if (defaultIndicator && isValidElement(defaultIndicator(h))) {\n        return cloneElement(defaultIndicator(h), { 'class': dotClassName });\n      }\n\n      return h(\n        'span',\n        { 'class': dotClassName + ' ' + prefixCls + '-dot-spin' },\n        [h('i'), h('i'), h('i'), h('i')]\n      );\n    }\n  },\n  render: function render(h) {\n    var _spinClassName;\n\n    var _$props = this.$props,\n        size = _$props.size,\n        prefixCls = _$props.prefixCls,\n        tip = _$props.tip,\n        wrapperClassName = _$props.wrapperClassName,\n        restProps = _objectWithoutProperties(_$props, ['size', 'prefixCls', 'tip', 'wrapperClassName']);\n\n    var sSpinning = this.sSpinning;\n\n    var spinClassName = (_spinClassName = {}, _defineProperty(_spinClassName, prefixCls, true), _defineProperty(_spinClassName, prefixCls + '-sm', size === 'small'), _defineProperty(_spinClassName, prefixCls + '-lg', size === 'large'), _defineProperty(_spinClassName, prefixCls + '-spinning', sSpinning), _defineProperty(_spinClassName, prefixCls + '-show-text', !!tip), _spinClassName);\n\n    var spinElement = h(\n      'div',\n      _mergeJSXProps([restProps, { 'class': spinClassName }]),\n      [this.renderIndicator(h, this.$props), tip ? h(\n        'div',\n        { 'class': prefixCls + '-text' },\n        [tip]\n      ) : null]\n    );\n    var children = this.getChildren();\n    if (children) {\n      var _containerClassName;\n\n      var containerClassName = (_containerClassName = {}, _defineProperty(_containerClassName, prefixCls + '-container', true), _defineProperty(_containerClassName, prefixCls + '-blur', sSpinning), _containerClassName);\n\n      return h(\n        'div',\n        _mergeJSXProps([{ on: this.$listeners }, { 'class': [prefixCls + '-nested-loading', wrapperClassName] }]),\n        [sSpinning && h(\n          'div',\n          { key: 'loading' },\n          [spinElement]\n        ), h(\n          'div',\n          { 'class': containerClassName, key: 'container' },\n          [children]\n        )]\n      );\n    }\n    return spinElement;\n  }\n};"],"sourceRoot":""}