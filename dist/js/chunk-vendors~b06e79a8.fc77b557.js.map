{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/icon/IconFont.js"],"names":["__webpack_require__","d","__webpack_exports__","create","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","n","_index__WEBPACK_IMPORTED_MODULE_1__","_util_props_util__WEBPACK_IMPORTED_MODULE_2__","customCache","Set","options","scriptUrl","_options$extraCommonP","extraCommonProps","undefined","document","window","createElement","length","has","script","setAttribute","add","body","appendChild","Iconfont","functional","name","props","render","h","context","slots","listeners","data","type","restProps","slotsMap","children","content","attrs","xlink:href","iconProps","Object","on"],"mappings":"0HAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,QAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,QAAAQ,EAAAR,EAAA,QAIAS,EAAA,IAAAC,IAEe,SAAAP,EAAAQ,GACf,IAAAC,EAAAD,EAAAC,UACAC,EAAAF,EAAAG,iBACAA,OAAAC,IAAAF,EAAA,GAAiEA,EASjE,wBAAAG,UAAA,qBAAAC,QAAA,oBAAAD,SAAAE,eAAA,kBAAAN,KAAAO,SAAAV,EAAAW,IAAAR,GAAA,CACA,IAAAS,EAAAL,SAAAE,cAAA,UACAG,EAAAC,aAAA,MAAAV,GACAS,EAAAC,aAAA,iBAAAV,GACAH,EAAAc,IAAAX,GACAI,SAAAQ,KAAAC,YAAAJ,GAGA,IAAAK,EAAA,CACAC,YAAA,EACAC,KAAA,YACAC,MAAWtB,EAAA,KAAIsB,MACfC,OAAA,SAAAC,EAAAC,GACA,IAAAH,EAAAG,EAAAH,MACAI,EAAAD,EAAAC,MACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,KAEAC,EAAAP,EAAAO,KACAC,EAAsBhC,IAAwBwB,EAAA,UAE9CS,EAAAL,IACAM,EAAAD,EAAA,WAEAE,EAAA,KACAJ,IACAI,EAAAT,EAAA,OAA4BU,MAAA,CAASC,aAAA,IAAAN,MAErCG,IACAC,EAAAD,GAEA,IAAAI,EAAsBC,OAAApC,EAAA,KAAAoC,CAAU9B,EAAAqB,EAAA,CAA0BN,MAAAQ,EAAAQ,GAAAX,IAC1D,OAAAH,EACQxB,EAAA,KACRoC,EACA,CAAAH,MAIA,OAAAd","file":"js/chunk-vendors~b06e79a8.fc77b557.js","sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport Icon from './index';\nimport { mergeProps } from '../_util/props-util';\n\nvar customCache = new Set();\n\nexport default function create(options) {\n  var scriptUrl = options.scriptUrl,\n      _options$extraCommonP = options.extraCommonProps,\n      extraCommonProps = _options$extraCommonP === undefined ? {} : _options$extraCommonP;\n\n  /**\n   * DOM API required.\n   * Make sure in browser environment.\n   * The Custom Icon will create a <script/>\n   * that loads SVG symbols and insert the SVG Element into the document body.\n   */\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined' && typeof document.createElement === 'function' && typeof scriptUrl === 'string' && scriptUrl.length && !customCache.has(scriptUrl)) {\n    var script = document.createElement('script');\n    script.setAttribute('src', scriptUrl);\n    script.setAttribute('data-namespace', scriptUrl);\n    customCache.add(scriptUrl);\n    document.body.appendChild(script);\n  }\n\n  var Iconfont = {\n    functional: true,\n    name: 'AIconfont',\n    props: Icon.props,\n    render: function render(h, context) {\n      var props = context.props,\n          slots = context.slots,\n          listeners = context.listeners,\n          data = context.data;\n\n      var type = props.type,\n          restProps = _objectWithoutProperties(props, ['type']);\n\n      var slotsMap = slots();\n      var children = slotsMap['default'];\n      // component > children > type\n      var content = null;\n      if (type) {\n        content = h('use', { attrs: { 'xlink:href': '#' + type } });\n      }\n      if (children) {\n        content = children;\n      }\n      var iconProps = mergeProps(extraCommonProps, data, { props: restProps, on: listeners });\n      return h(\n        Icon,\n        iconProps,\n        [content]\n      );\n    }\n  };\n  return Iconfont;\n}"],"sourceRoot":""}