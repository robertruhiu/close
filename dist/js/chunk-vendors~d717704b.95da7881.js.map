{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/badge/ScrollNumber.js"],"names":["babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","_util_vue_types__WEBPACK_IMPORTED_MODULE_2__","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_3__","_util_props_util__WEBPACK_IMPORTED_MODULE_4__","omit_js__WEBPACK_IMPORTED_MODULE_5__","_util_vnode__WEBPACK_IMPORTED_MODULE_6__","getNumberArray","num","toString","split","reverse","map","i","Number","ScrollNumberProps","prefixCls","string","def","count","any","component","title","oneOfType","number","displayComponent","className","object","__webpack_exports__","mixins","props","data","animateStarted","sCount","this","watch","val","_this","lastCount","setState","setTimeout","$emit","methods","getPositionByNum","currentDigit","lastDigit","renderNumberList","position","h","$createElement","childrenToReturn","currentClassName","push","key","class","renderCurrentNumber","removeTransition","undefined","style","transition","msTransform","WebkitTransform","transform","renderNumberElement","_this2","isNaN","render","arguments","_component","Tag","Object","restProps","$props","newProps","attrs","borderColor","boxShadow"],"mappings":"0HAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,QAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,QAAAM,EAAAN,EAAA,QAAAO,EAAAP,EAAA,QAAAQ,EAAAR,EAAA,QAAAS,EAAAT,EAAA,QAQA,SAAAU,EAAAC,GACA,OAAAA,IAAAC,WAAAC,MAAA,IAAAC,UAAAC,IAAA,SAAAC,GACA,OAAAC,OAAAD,KACG,GAGH,IAAAE,EAAA,CACAC,UAAad,EAAA,KAASe,OAAAC,IAAA,qBACtBC,MAASjB,EAAA,KAASkB,IAClBC,UAAanB,EAAA,KAASe,OACtBK,MAASpB,EAAA,KAASqB,UAAA,CAAYrB,EAAA,KAASsB,OAAStB,EAAA,KAASe,OAAA,OACzDQ,iBAAoBvB,EAAA,KAASkB,IAC7BM,UAAaxB,EAAA,KAASyB,QAGPC,EAAA,MACfC,OAAA,CAAW1B,EAAA,MACX2B,MAAAf,EACAgB,KAAA,WACA,OACAC,gBAAA,EACAC,OAAAC,KAAAf,QAIAgB,MAAA,CACAhB,MAAA,SAAAiB,GACA,IAAAC,EAAAH,KAEAA,KAAAD,SAAAG,IACAF,KAAAI,UAAAJ,KAAAD,OAEAC,KAAAK,SAAA,CACAP,gBAAA,GACS,WAGTQ,WAAA,WACAH,EAAAE,SAAA,CACAP,gBAAA,EACAC,OAAAG,GACa,WACbC,EAAAI,MAAA,eAEW,QAKXC,QAAA,CACAC,iBAAA,SAAAnC,EAAAK,GACA,GAAAqB,KAAAF,eACA,UAAAxB,EAEA,IAAAoC,EAAArC,EAAA2B,KAAAD,QAAApB,GACAgC,EAAAtC,EAAA2B,KAAAI,WAAAzB,GAEA,OAAAqB,KAAAD,OAAAC,KAAAI,UACAM,GAAAC,EACA,GAAArC,EAEA,GAAAA,EAEAoC,GAAAC,EACA,GAAArC,EAEAA,GAEAsC,iBAAA,SAAAC,GAIA,IAHA,IAAAC,EAAAd,KAAAe,eAEAC,EAAA,GACArC,EAAA,EAAqBA,EAAA,GAAQA,IAAA,CAC7B,IAAAsC,EAAAJ,IAAAlC,EAAA,aACAqC,EAAAE,KAAAJ,EACA,IACA,CAAWK,IAAAxC,EAAAJ,WAAA6C,MAAAH,GACX,CAAAtC,EAAA,MAGA,OAAAqC,GAEAK,oBAAA,SAAA/C,EAAAK,GACA,IAAAmC,EAAAd,KAAAe,eAEAF,EAAAb,KAAAS,iBAAAnC,EAAAK,GACA2C,EAAAtB,KAAAF,qBAAAyB,IAAAlD,EAAA2B,KAAAI,WAAAzB,GACA6C,EAAA,CACAC,WAAAH,EAAA,YAAAC,EACAG,YAAA,mBAAAb,EAAA,KACAc,gBAAA,mBAAAd,EAAA,KACAe,UAAA,mBAAAf,EAAA,MAEA,OAAAC,EACA,OACA,CAASM,MAAApB,KAAAlB,UAAA,QAAA0C,QAAAL,IAAAxC,GACT,CAAAqB,KAAAY,iBAAAC,MAGAgB,oBAAA,WACA,IAAAC,EAAA9B,KAEAD,EAAAC,KAAAD,OAEA,OAAAA,GAAAgC,MAAAhC,GACAA,EAEA1B,EAAA0B,GAAArB,IAAA,SAAAJ,EAAAK,GACA,OAAAmD,EAAAT,oBAAA/C,EAAAK,KACOF,YAIPuD,OAAA,WACA,IAAAlB,EAAAmB,UAAA,GACAnD,EAAAkB,KAAAlB,UACAM,EAAAY,KAAAZ,MACA8C,EAAAlC,KAAAb,UACAgD,OAAAZ,IAAAW,EAAA,MAAAA,EACA3C,EAAAS,KAAAT,iBACAC,EAAAQ,KAAAR,UAEA,GAAAD,EACA,OAAa6C,OAAAhE,EAAA,KAAAgE,CAAY7C,EAAA,CACzB6B,MAAAtC,EAAA,sBAGA,IAAA0C,EAAgBY,OAAAlE,EAAA,KAAAkE,CAAQpC,MAAA,GAExBqC,EAAoBD,OAAAjE,EAAA,KAAAiE,CAAIpC,KAAAsC,OAAA,sDACxBC,EAAA,CACA3C,MAAahC,IAAQ,GAAGyE,GACxBG,MAAA,CACApD,SAEAoC,QACAJ,MAAerD,IAAUe,EAAAU,IASzB,OAJAgC,KAAAiB,cACAF,EAAAf,MAAAkB,UAAA,aAAAlB,EAAAiB,YAAA,UAGA3B,EACAqB,EACAI,EACA,CAAAvC,KAAA6B","file":"js/chunk-vendors~d717704b.95da7881.js","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport classNames from 'classnames';\nimport PropTypes from '../_util/vue-types';\nimport BaseMixin from '../_util/BaseMixin';\nimport { getStyle } from '../_util/props-util';\nimport omit from 'omit.js';\nimport { cloneElement } from '../_util/vnode';\n\nfunction getNumberArray(num) {\n  return num ? num.toString().split('').reverse().map(function (i) {\n    return Number(i);\n  }) : [];\n}\n\nvar ScrollNumberProps = {\n  prefixCls: PropTypes.string.def('ant-scroll-number'),\n  count: PropTypes.any,\n  component: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.number, PropTypes.string, null]),\n  displayComponent: PropTypes.any,\n  className: PropTypes.object\n};\n\nexport default {\n  mixins: [BaseMixin],\n  props: ScrollNumberProps,\n  data: function data() {\n    return {\n      animateStarted: true,\n      sCount: this.count\n    };\n  },\n\n  watch: {\n    count: function count(val) {\n      var _this = this;\n\n      if (this.sCount !== val) {\n        this.lastCount = this.sCount;\n        // 复原数字初始位置\n        this.setState({\n          animateStarted: true\n        }, function () {\n          // 等待数字位置复原完毕\n          // 开始设置完整的数字\n          setTimeout(function () {\n            _this.setState({\n              animateStarted: false,\n              sCount: val\n            }, function () {\n              _this.$emit('animated');\n            });\n          }, 5);\n        });\n      }\n    }\n  },\n  methods: {\n    getPositionByNum: function getPositionByNum(num, i) {\n      if (this.animateStarted) {\n        return 10 + num;\n      }\n      var currentDigit = getNumberArray(this.sCount)[i];\n      var lastDigit = getNumberArray(this.lastCount)[i];\n      // 同方向则在同一侧切换数字\n      if (this.sCount > this.lastCount) {\n        if (currentDigit >= lastDigit) {\n          return 10 + num;\n        }\n        return 20 + num;\n      }\n      if (currentDigit <= lastDigit) {\n        return 10 + num;\n      }\n      return num;\n    },\n    renderNumberList: function renderNumberList(position) {\n      var h = this.$createElement;\n\n      var childrenToReturn = [];\n      for (var i = 0; i < 30; i++) {\n        var currentClassName = position === i ? 'current' : '';\n        childrenToReturn.push(h(\n          'p',\n          { key: i.toString(), 'class': currentClassName },\n          [i % 10]\n        ));\n      }\n      return childrenToReturn;\n    },\n    renderCurrentNumber: function renderCurrentNumber(num, i) {\n      var h = this.$createElement;\n\n      var position = this.getPositionByNum(num, i);\n      var removeTransition = this.animateStarted || getNumberArray(this.lastCount)[i] === undefined;\n      var style = {\n        transition: removeTransition ? 'none' : undefined,\n        msTransform: 'translateY(' + -position * 100 + '%)',\n        WebkitTransform: 'translateY(' + -position * 100 + '%)',\n        transform: 'translateY(' + -position * 100 + '%)'\n      };\n      return h(\n        'span',\n        { 'class': this.prefixCls + '-only', style: style, key: i },\n        [this.renderNumberList(position)]\n      );\n    },\n    renderNumberElement: function renderNumberElement() {\n      var _this2 = this;\n\n      var sCount = this.sCount;\n\n      if (!sCount || isNaN(sCount)) {\n        return sCount;\n      }\n      return getNumberArray(sCount).map(function (num, i) {\n        return _this2.renderCurrentNumber(num, i);\n      }).reverse();\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var prefixCls = this.prefixCls,\n        title = this.title,\n        _component = this.component,\n        Tag = _component === undefined ? 'sup' : _component,\n        displayComponent = this.displayComponent,\n        className = this.className;\n\n    if (displayComponent) {\n      return cloneElement(displayComponent, {\n        'class': prefixCls + '-custom-component'\n      });\n    }\n    var style = getStyle(this, true);\n    // fix https://fb.me/react-unknown-prop\n    var restProps = omit(this.$props, ['count', 'component', 'prefixCls', 'displayComponent']);\n    var newProps = {\n      props: _extends({}, restProps),\n      attrs: {\n        title: title\n      },\n      style: style,\n      'class': classNames(prefixCls, className)\n    };\n    // allow specify the border\n    // mock border-color by box-shadow for compatible with old usage:\n    // <Badge count={4} style={{ backgroundColor: '#fff', color: '#999', borderColor: '#d9d9d9' }} />\n    if (style && style.borderColor) {\n      newProps.style.boxShadow = '0 0 0 1px ' + style.borderColor + ' inset';\n    }\n\n    return h(\n      Tag,\n      newProps,\n      [this.renderNumberElement()]\n    );\n  }\n};"],"sourceRoot":""}