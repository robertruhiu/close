{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/icon/utils.js"],"names":["__webpack_require__","d","__webpack_exports__","svgBaseProps","getThemeFromTypeName","removeTypeTheme","withThemeSuffix","alias","_util_warning__WEBPACK_IMPORTED_MODULE_0__","width","height","fill","aria-hidden","focusable","fillTester","outlineTester","twoToneTester","type","result","test","replace","theme","Object"],"mappings":"wHAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAA,IAAAC,EAAAR,EAAA,QAIOG,EAAA,CACPM,MAAA,MACAC,OAAA,MACAC,KAAA,eACAC,cAAA,OACAC,UAAA,SAGAC,EAAA,SACAC,EAAA,MACAC,EAAA,YAEO,SAAAZ,EAAAa,GACP,IAAAC,EAAA,KAQA,OAPAJ,EAAAK,KAAAF,GACAC,EAAA,SACGH,EAAAI,KAAAF,GACHC,EAAA,WACGF,EAAAG,KAAAF,KACHC,EAAA,WAEAA,EAGO,SAAAb,EAAAY,GACP,OAAAA,EAAAG,QAAAN,EAAA,IAAAM,QAAAL,EAAA,IAAAK,QAAAJ,EAAA,IAGO,SAAAV,EAAAW,EAAAI,GACP,IAAAH,EAAAD,EAUA,MATA,WAAAI,EACAH,GAAA,QACG,aAAAG,EACHH,GAAA,KACG,YAAAG,EACHH,GAAA,WAEII,OAAAd,EAAA,KAAAc,EAAO,gBAAAL,EAAA,wBAAAI,EAAA,KAEXH,EAIO,SAAAX,EAAAU,GACP,OAAAA,GACA,YACA,cACA,SAEA,OAAAA","file":"js/chunk-vendors~3a73b893.f6c13e57.js","sourcesContent":["import warning from '../_util/warning';\n\n// These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\nexport var svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': 'true',\n  focusable: 'false'\n};\n\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\n\nexport function getThemeFromTypeName(type) {\n  var result = null;\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n  return result;\n}\n\nexport function removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\n\nexport function withThemeSuffix(type, theme) {\n  var result = type;\n  if (theme === 'filled') {\n    result += '-fill';\n  } else if (theme === 'outlined') {\n    result += '-o';\n  } else if (theme === 'twoTone') {\n    result += '-twotone';\n  } else {\n    warning(false, 'This icon \\'' + type + '\\' has unknown theme \\'' + theme + '\\'');\n  }\n  return result;\n}\n\n// For alias or compatibility\nexport function alias(type) {\n  switch (type) {\n    case 'cross':\n      return 'close';\n    default:\n  }\n  return type;\n}"],"sourceRoot":""}