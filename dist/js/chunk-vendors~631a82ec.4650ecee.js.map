{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/_util/vnode.js"],"names":["__webpack_require__","d","__webpack_exports__","cloneVNodes","cloneElement","babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","_props_util__WEBPACK_IMPORTED_MODULE_2__","cloneVNode","vnode","deep","componentOptions","data","listeners","on","cloned","constructor","tag","children","text","elm","context","asyncFactory","ns","isStatic","key","isComment","fnContext","fnOptions","fnScopeId","isCloned","vnodes","len","length","res","Array","i","nodeProps","arguments","undefined","ele","isArray","Object","node","_nodeProps$props","props","_nodeProps$on","_nodeProps$directives","directives","cls","style","_nodeProps$attrs","attrs","ref","_nodeProps$domProps","domProps","_nodeProps$style","tempStyle","_nodeProps$class","tempCls","_nodeProps$scopedSlot","scopedSlots","trim","split","forEach","c","class","concat","propsData"],"mappings":"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","file":"js/chunk-vendors~631a82ec.4650ecee.js","sourcesContent":["import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport { filterEmpty, parseStyleText } from './props-util';\nexport function cloneVNode(vnode, deep) {\n  var componentOptions = vnode.componentOptions;\n  var data = vnode.data;\n\n  var listeners = {};\n  if (componentOptions && componentOptions.listeners) {\n    listeners = _extends({}, componentOptions.listeners);\n  }\n\n  var on = {};\n  if (data && data.on) {\n    on = _extends({}, data.on);\n  }\n\n  var cloned = new vnode.constructor(vnode.tag, data ? _extends({}, data, { on: on }) : data, vnode.children, vnode.text, vnode.elm, vnode.context, componentOptions ? _extends({}, componentOptions, { listeners: listeners }) : componentOptions, vnode.asyncFactory);\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  if (deep) {\n    if (vnode.children) {\n      cloned.children = cloneVNodes(vnode.children, true);\n    }\n    if (componentOptions && componentOptions.children) {\n      componentOptions.children = cloneVNodes(componentOptions.children, true);\n    }\n  }\n  return cloned;\n}\n\nexport function cloneVNodes(vnodes, deep) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i], deep);\n  }\n  return res;\n}\n\nexport function cloneElement(n) {\n  var nodeProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var deep = arguments[2];\n\n  var ele = n;\n  if (Array.isArray(n)) {\n    ele = filterEmpty(n)[0];\n  }\n  if (!ele) {\n    return null;\n  }\n  var node = cloneVNode(ele, deep);\n  var _nodeProps$props = nodeProps.props,\n      props = _nodeProps$props === undefined ? {} : _nodeProps$props,\n      key = nodeProps.key,\n      _nodeProps$on = nodeProps.on,\n      on = _nodeProps$on === undefined ? {} : _nodeProps$on,\n      children = nodeProps.children,\n      _nodeProps$directives = nodeProps.directives,\n      directives = _nodeProps$directives === undefined ? [] : _nodeProps$directives;\n\n  var data = node.data || {};\n  var cls = {};\n  var style = {};\n  var _nodeProps$attrs = nodeProps.attrs,\n      attrs = _nodeProps$attrs === undefined ? {} : _nodeProps$attrs,\n      ref = nodeProps.ref,\n      _nodeProps$domProps = nodeProps.domProps,\n      domProps = _nodeProps$domProps === undefined ? {} : _nodeProps$domProps,\n      _nodeProps$style = nodeProps.style,\n      tempStyle = _nodeProps$style === undefined ? {} : _nodeProps$style,\n      _nodeProps$class = nodeProps['class'],\n      tempCls = _nodeProps$class === undefined ? {} : _nodeProps$class,\n      _nodeProps$scopedSlot = nodeProps.scopedSlots,\n      scopedSlots = _nodeProps$scopedSlot === undefined ? {} : _nodeProps$scopedSlot;\n\n\n  if (typeof data.style === 'string') {\n    style = parseStyleText(data.style);\n  } else {\n    style = _extends({}, data.style, style);\n  }\n  if (typeof tempStyle === 'string') {\n    style = _extends({}, style, parseStyleText(style));\n  } else {\n    style = _extends({}, style, tempStyle);\n  }\n\n  if (typeof data['class'] === 'string' && data['class'].trim() !== '') {\n    data['class'].split(' ').forEach(function (c) {\n      cls[c.trim()] = true;\n    });\n  } else {\n    cls = _extends({}, data['class'], cls);\n  }\n  if (typeof tempCls === 'string' && tempCls.trim() !== '') {\n    tempCls.split(' ').forEach(function (c) {\n      cls[c.trim()] = true;\n    });\n  } else {\n    cls = _extends({}, cls, tempCls);\n  }\n  node.data = _extends({}, data, {\n    style: style,\n    attrs: _extends({}, data.attrs, attrs),\n    'class': cls,\n    domProps: _extends({}, data.domProps, domProps),\n    scopedSlots: _extends({}, data.scopedSlots, scopedSlots),\n    directives: [].concat(_toConsumableArray(data.directives || []), _toConsumableArray(directives))\n  });\n\n  if (node.componentOptions) {\n    node.componentOptions.propsData = node.componentOptions.propsData || {};\n    node.componentOptions.listeners = node.componentOptions.listeners || {};\n    node.componentOptions.propsData = _extends({}, node.componentOptions.propsData, props);\n    node.componentOptions.listeners = _extends({}, node.componentOptions.listeners, on);\n    if (children) {\n      node.componentOptions.children = children;\n    }\n  } else {\n    node.data.on = _extends({}, node.data.on || {}, on);\n  }\n\n  if (key !== undefined) {\n    node.key = key;\n    node.data.key = key;\n  }\n  if (typeof ref === 'string') {\n    node.data.ref = ref;\n  }\n  return node;\n}"],"sourceRoot":""}