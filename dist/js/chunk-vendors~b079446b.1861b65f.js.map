{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-tabs/src/Sentinel.js"],"names":["babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","_util_vue_types__WEBPACK_IMPORTED_MODULE_1__","_util_KeyCode__WEBPACK_IMPORTED_MODULE_2__","sentinelStyle","width","height","overflow","position","__webpack_exports__","name","props","setRef","func","prevElement","any","nextElement","methods","onKeyDown","_ref","target","which","shiftKey","_$props","this","$props","TAB","document","activeElement","focus","render","h","arguments","attrs","tabIndex","directives","value","style","on","keydown","role","$slots"],"mappings":"wHAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,QAAAI,EAAAJ,EAAA,QAIAK,EAAA,CAAqBC,MAAA,EAAAC,OAAA,EAAAC,SAAA,SAAAC,SAAA,YACNC,EAAA,MACfC,KAAA,WACAC,MAAA,CACAC,OAAYV,EAAA,KAASW,KACrBC,YAAiBZ,EAAA,KAASa,IAC1BC,YAAiBd,EAAA,KAASa,KAE1BE,QAAA,CACAC,UAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAC,OACAC,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,SACAC,EAAAC,KAAAC,OACAT,EAAAO,EAAAP,YACAF,EAAAS,EAAAT,YAEAO,IAAoBlB,EAAA,KAAOuB,KAAAC,SAAAC,gBAAAR,KAG3BE,GAAAN,GACAA,EAAAa,QAIAP,GAAAR,GACAA,EAAAe,WAIAC,OAAA,WACA,IAAAC,EAAAC,UAAA,GACApB,EAAAY,KAAAC,OAAAb,OAGA,OAAAmB,EACA,MACM/B,IAAc,EACpBiC,MAAA,CACAC,SAAA,IAEO,CACPC,WAAA,EACAzB,KAAA,UACA0B,MAAAxB,KAEO,CACPyB,MAAAjC,EACAkC,GAAA,CACAC,QAAAf,KAAAN,WAEAe,MAAA,CACAO,KAAA,mBAGA,CAAAhB,KAAAiB,OAAA","file":"js/chunk-vendors~b079446b.1861b65f.js","sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport PropTypes from '../../_util/vue-types';\nimport KeyCode from '../../_util/KeyCode';\n\nvar sentinelStyle = { width: 0, height: 0, overflow: 'hidden', position: 'absolute' };\nexport default {\n  name: 'Sentinel',\n  props: {\n    setRef: PropTypes.func,\n    prevElement: PropTypes.any,\n    nextElement: PropTypes.any\n  },\n  methods: {\n    onKeyDown: function onKeyDown(_ref) {\n      var target = _ref.target,\n          which = _ref.which,\n          shiftKey = _ref.shiftKey;\n      var _$props = this.$props,\n          nextElement = _$props.nextElement,\n          prevElement = _$props.prevElement;\n\n      if (which !== KeyCode.TAB || document.activeElement !== target) return;\n\n      // Tab next\n      if (!shiftKey && nextElement) {\n        nextElement.focus();\n      }\n\n      // Tab prev\n      if (shiftKey && prevElement) {\n        prevElement.focus();\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var setRef = this.$props.setRef;\n\n\n    return h(\n      'div',\n      _mergeJSXProps([{\n        attrs: {\n          tabIndex: 0\n        }\n      }, {\n        directives: [{\n          name: 'ant-ref',\n          value: setRef\n        }]\n      }, {\n        style: sentinelStyle,\n        on: {\n          'keydown': this.onKeyDown\n        },\n        attrs: {\n          role: 'presentation'\n        }\n      }]),\n      [this.$slots['default']]\n    );\n  }\n};"],"sourceRoot":""}