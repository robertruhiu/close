{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/_microtask.js"],"names":["global","__webpack_require__","macrotask","set","Observer","MutationObserver","WebKitMutationObserver","process","Promise","isNode","module","exports","head","last","notify","flush","parent","fn","domain","exit","next","e","undefined","enter","nextTick","navigator","standalone","resolve","promise","then","call","toggle","node","document","createTextNode","observe","characterData","data","task"],"mappings":"2GAAA,IAAAA,EAAaC,EAAQ,QACrBC,EAAgBD,EAAQ,QAASE,IACjCC,EAAAJ,EAAAK,kBAAAL,EAAAM,uBACAC,EAAAP,EAAAO,QACAC,EAAAR,EAAAQ,QACAC,EAA6B,WAAhBR,EAAQ,OAARA,CAAgBM,GAE7BG,EAAAC,QAAA,WACA,IAAAC,EAAAC,EAAAC,EAEAC,EAAA,WACA,IAAAC,EAAAC,EACAR,IAAAO,EAAAT,EAAAW,SAAAF,EAAAG,OACA,MAAAP,EAAA,CACAK,EAAAL,EAAAK,GACAL,IAAAQ,KACA,IACAH,IACO,MAAAI,GAGP,MAFAT,EAAAE,IACAD,OAAAS,EACAD,GAEKR,OAAAS,EACLN,KAAAO,SAIA,GAAAd,EACAK,EAAA,WACAP,EAAAiB,SAAAT,SAGG,IAAAX,GAAAJ,EAAAyB,WAAAzB,EAAAyB,UAAAC,WAQA,GAAAlB,KAAAmB,QAAA,CAEH,IAAAC,EAAApB,EAAAmB,aAAAL,GACAR,EAAA,WACAc,EAAAC,KAAAd,SASAD,EAAA,WAEAZ,EAAA4B,KAAA9B,EAAAe,QAvBG,CACH,IAAAgB,GAAA,EACAC,EAAAC,SAAAC,eAAA,IACA,IAAA9B,EAAAW,GAAAoB,QAAAH,EAAA,CAAuCI,eAAA,IACvCtB,EAAA,WACAkB,EAAAK,KAAAN,MAsBA,gBAAAd,GACA,IAAAqB,EAAA,CAAgBrB,KAAAG,UAAAE,GAChBT,MAAAO,KAAAkB,GACA1B,IACAA,EAAA0B,EACAxB,KACKD,EAAAyB","file":"js/chunk-vendors~49003597.4f0adcc3.js","sourcesContent":["var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n"],"sourceRoot":""}