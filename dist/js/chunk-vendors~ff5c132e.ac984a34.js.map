{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-table/src/ColGroup.js"],"names":["_util_vue_types__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","name","props","fixed","string","columns","array","inject","table","default","render","h","arguments","this","prefixCls","expandIconAsCell","columnManager","cols","push","class","key","leafColumns","leftLeafColumns","rightLeafColumns","concat","map","c","width","dataIndex","style","minWidth"],"mappings":"0HAAA,IAAAA,EAAAC,EAAA,QAEeC,EAAA,MACfC,KAAA,WACAC,MAAA,CACAC,MAAWL,EAAA,KAASM,OACpBC,QAAaP,EAAA,KAASQ,OAEtBC,OAAA,CACAC,MAAA,CAAYC,QAAA,WACZ,YAGAC,OAAA,WACA,IAAAC,EAAAC,UAAA,GACAT,EAAAU,KAAAV,MACAK,EAAAK,KAAAL,MACAM,EAAAN,EAAAM,UACAC,EAAAP,EAAAO,iBACAC,EAAAR,EAAAQ,cAGAC,EAAA,GAEAF,GAAA,UAAAZ,GACAc,EAAAC,KAAAP,EAAA,OAA0BQ,MAAAL,EAAA,mBAAAM,IAAA,8BAG1B,IAAAC,OAAA,EAaA,OAVAA,EADA,SAAAlB,EACAa,EAAAM,kBACK,UAAAnB,EACLa,EAAAO,mBAEAP,EAAAK,cAEAJ,IAAAO,OAAAH,EAAAI,IAAA,SAAAC,GACA,IAAAC,EAAA,kBAAAD,EAAAC,MAAAD,EAAAC,MAAA,KAAAD,EAAAC,MACA,OAAAhB,EAAA,OAAuBS,IAAAM,EAAAN,KAAAM,EAAAE,UAAAC,MAAAF,EAAA,CAA4CA,QAAAG,SAAAH,GAAgC,QAEnGhB,EAAA,YAAAM","file":"js/chunk-vendors~ff5c132e.ac984a34.js","sourcesContent":["import PropTypes from '../../_util/vue-types';\n\nexport default {\n  name: 'ColGroup',\n  props: {\n    fixed: PropTypes.string,\n    columns: PropTypes.array\n  },\n  inject: {\n    table: { 'default': function _default() {\n        return {};\n      } }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var fixed = this.fixed,\n        table = this.table;\n    var prefixCls = table.prefixCls,\n        expandIconAsCell = table.expandIconAsCell,\n        columnManager = table.columnManager;\n\n\n    var cols = [];\n\n    if (expandIconAsCell && fixed !== 'right') {\n      cols.push(h('col', { 'class': prefixCls + '-expand-icon-col', key: 'rc-table-expand-icon-col' }));\n    }\n\n    var leafColumns = void 0;\n\n    if (fixed === 'left') {\n      leafColumns = columnManager.leftLeafColumns();\n    } else if (fixed === 'right') {\n      leafColumns = columnManager.rightLeafColumns();\n    } else {\n      leafColumns = columnManager.leafColumns();\n    }\n    cols = cols.concat(leafColumns.map(function (c) {\n      var width = typeof c.width === 'number' ? c.width + 'px' : c.width;\n      return h('col', { key: c.key || c.dataIndex, style: width ? { width: width, minWidth: width } : {} });\n    }));\n    return h('colgroup', [cols]);\n  }\n};"],"sourceRoot":""}