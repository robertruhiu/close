{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/alert/index.js"],"names":["babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","n","_icon__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","_util_BaseMixin__WEBPACK_IMPORTED_MODULE_3__","_util_vue_types__WEBPACK_IMPORTED_MODULE_4__","_util_getTransitionProps__WEBPACK_IMPORTED_MODULE_5__","_util_props_util__WEBPACK_IMPORTED_MODULE_6__","_util_vnode__WEBPACK_IMPORTED_MODULE_7__","noop","AlertProps","type","oneOf","closable","bool","closeText","any","message","description","afterClose","func","def","showIcon","iconType","string","prefixCls","banner","icon","Alert","props","mixins","name","data","closing","closed","methods","handleClose","e","preventDefault","dom","this","$el","style","height","offsetHeight","setState","$emit","animationEnd","render","_classNames","h","arguments","_prefixCls","undefined","Object","iconTheme","alertCls","closeIcon","on","click","class","attrs","iconNode","theme","transitionProps","appear","afterLeave","directives","value","data-show","install","Vue","component","__webpack_exports__"],"mappings":"0HAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,QAAAI,EAAAJ,EAAA,QAAAK,EAAAL,EAAAE,EAAAE,GAAAE,EAAAN,EAAA,QAAAO,EAAAP,EAAA,QAAAQ,EAAAR,EAAA,QAAAS,EAAAT,EAAA,QAAAU,EAAAV,EAAA,QAQA,SAAAW,KACO,IAAAC,EAAA,CAIPC,KAAQN,EAAA,KAASO,MAAA,sCAEjBC,SAAYR,EAAA,KAASS,KAErBC,UAAaV,EAAA,KAASW,IAEtBC,QAAWZ,EAAA,KAASW,IAEpBE,YAAeb,EAAA,KAASW,IAIxBG,WAAcd,EAAA,KAASe,KAAAC,IAAAZ,GAEvBa,SAAYjB,EAAA,KAASS,KACrBS,SAAYlB,EAAA,KAASmB,OACrBC,UAAapB,EAAA,KAASmB,OACtBE,OAAUrB,EAAA,KAASS,KACnBa,KAAQtB,EAAA,KAASW,KAGjBY,EAAA,CACAC,MAAAnB,EACAoB,OAAA,CAAW1B,EAAA,MACX2B,KAAA,SACAC,KAAA,WACA,OACAC,SAAA,EACAC,QAAA,IAIAC,QAAA,CACAC,YAAA,SAAAC,GACAA,EAAAC,iBACA,IAAAC,EAAAC,KAAAC,IACAF,EAAAG,MAAAC,OAAAJ,EAAAK,aAAA,KAGAL,EAAAG,MAAAC,OAAAJ,EAAAK,aAAA,KAEAJ,KAAAK,SAAA,CACAZ,SAAA,IAEAO,KAAAM,MAAA,QAAAT,IAEAU,aAAA,WACAP,KAAAK,SAAA,CACAX,QAAA,EACAD,SAAA,IAEAO,KAAArB,eAIA6B,OAAA,WACA,IAAAC,EAEAC,EAAAC,UAAA,GACAC,EAAAZ,KAAAf,UACAA,OAAA4B,IAAAD,EAAA,YAAAA,EACA1B,EAAAc,KAAAd,OACAO,EAAAO,KAAAP,QACAC,EAAAM,KAAAN,OACArB,EAAA2B,KAAA3B,SACAF,EAAA6B,KAAA7B,KACAW,EAAAkB,KAAAlB,SACAC,EAAAiB,KAAAjB,SAEAR,EAAoBuC,OAAA/C,EAAA,KAAA+C,CAAoBd,KAAA,aACxCtB,EAAsBoC,OAAA/C,EAAA,KAAA+C,CAAoBd,KAAA,eAC1CvB,EAAkBqC,OAAA/C,EAAA,KAAA+C,CAAoBd,KAAA,WACtCb,EAAe2B,OAAA/C,EAAA,KAAA+C,CAAoBd,KAAA,QAEnClB,KAAAI,QAAA2B,IAAA/B,MAEAX,EAAAe,QAAA2B,IAAA1C,EAAA,UAAAA,GAAA,OACA,IAAA4C,EAAA,SAGA,IAAAhC,EAAA,CACA,OAAAZ,GACA,cACAY,EAAA,eACA,MACA,WACAA,EAAA,cACA,MACA,YACAA,EAAA,eACA,MACA,cACAA,EAAA,qBACA,MACA,QACAA,EAAA,UAIAL,IACAqC,EAAA,YAKAxC,IACAF,GAAA,GAGA,IAAA2C,EAAmBrD,IAAUsB,GAAAwB,EAAA,GAA+BlD,IAAekD,EAAAxB,EAAA,IAAAd,GAAA,GAA6CZ,IAAekD,EAAAxB,EAAA,UAAAQ,GAA+ClC,IAAekD,EAAAxB,EAAA,sBAAAP,GAA+DnB,IAAekD,EAAAxB,EAAA,YAAAH,GAAkDvB,IAAekD,EAAAxB,EAAA,YAAAC,GAAgD3B,IAAekD,EAAAxB,EAAA,YAAAZ,GAAAoC,IAEnZQ,EAAA5C,EAAAqC,EACA,IACA,CACAQ,GAAA,CACAC,MAAAnB,KAAAJ,aAEAwB,MAAAnC,EAAA,eACA,CAAAV,GAAAmC,EAAsBjD,EAAA,KAAI,CAC1B4D,MAAA,CAAgBlD,KAAA,aAEhB,KAEAmD,EAAAnC,IAA4B2B,OAAA/C,EAAA,KAAA+C,CAAc3B,GAAS2B,OAAA9C,EAAA,KAAA8C,CAAY3B,EAAA,CAC/DiC,MAAAnC,EAAA,UACKyB,EACL,OACA,CAAOU,MAAAnC,EAAA,SACP,CAAAE,MACAuB,EAAYjD,EAAA,KAAI,CAAG2D,MAAAnC,EAAA,QAAAoC,MAAA,CAAuClD,KAAAY,EAAAwC,MAAAR,KAG1DS,EAA0BV,OAAAhD,EAAA,KAAAgD,CAAkB7B,EAAA,aAC5CwC,QAAA,EACAC,WAAA1B,KAAAO,eAEA,OAAAb,EAAA,KAAAgB,EACA,aACAc,EACA,CAAAd,EACA,MACA,CACAiB,WAAA,EACApC,KAAA,OACAqC,MAAAnC,IAEA2B,MAAAJ,EAAAK,MAAA,CAAqCQ,YAAApC,IAErC,CAAAX,EAAAwC,EAAA,KAAAZ,EACA,OACA,CAAWU,MAAAnC,EAAA,YACX,CAAAR,IACAiC,EACA,OACA,CAAWU,MAAAnC,EAAA,gBACX,CAAAP,IACAuC,OAOAa,QAAA,SAAAC,GACAA,EAAAC,UAAA5C,EAAAG,KAAAH,KAGe6C,EAAA","file":"js/chunk-vendors~f0541d28.c2b26337.js","sourcesContent":["import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport Icon from '../icon';\nimport classNames from 'classnames';\nimport BaseMixin from '../_util/BaseMixin';\nimport PropTypes from '../_util/vue-types';\nimport getTransitionProps from '../_util/getTransitionProps';\nimport { getComponentFromProp, isValidElement } from '../_util/props-util';\nimport { cloneElement } from '../_util/vnode';\nfunction noop() {}\nexport var AlertProps = {\n  /**\n   * Type of Alert styles, options:`success`, `info`, `warning`, `error`\n   */\n  type: PropTypes.oneOf(['success', 'info', 'warning', 'error']),\n  /** Whether Alert can be closed */\n  closable: PropTypes.bool,\n  /** Close text to show */\n  closeText: PropTypes.any,\n  /** Content of Alert */\n  message: PropTypes.any,\n  /** Additional content of Alert */\n  description: PropTypes.any,\n  /** Callback when close Alert */\n  // onClose?: React.MouseEventHandler<HTMLAnchorElement>;\n  /** Trigger when animation ending of Alert */\n  afterClose: PropTypes.func.def(noop),\n  /** Whether to show icon */\n  showIcon: PropTypes.bool,\n  iconType: PropTypes.string,\n  prefixCls: PropTypes.string,\n  banner: PropTypes.bool,\n  icon: PropTypes.any\n};\n\nvar Alert = {\n  props: AlertProps,\n  mixins: [BaseMixin],\n  name: 'AAlert',\n  data: function data() {\n    return {\n      closing: true,\n      closed: false\n    };\n  },\n\n  methods: {\n    handleClose: function handleClose(e) {\n      e.preventDefault();\n      var dom = this.$el;\n      dom.style.height = dom.offsetHeight + 'px';\n      // Magic code\n      // 重复一次后才能正确设置 height\n      dom.style.height = dom.offsetHeight + 'px';\n\n      this.setState({\n        closing: false\n      });\n      this.$emit('close', e);\n    },\n    animationEnd: function animationEnd() {\n      this.setState({\n        closed: true,\n        closing: true\n      });\n      this.afterClose();\n    }\n  },\n\n  render: function render() {\n    var _classNames;\n\n    var h = arguments[0];\n    var _prefixCls = this.prefixCls,\n        prefixCls = _prefixCls === undefined ? 'ant-alert' : _prefixCls,\n        banner = this.banner,\n        closing = this.closing,\n        closed = this.closed;\n    var closable = this.closable,\n        type = this.type,\n        showIcon = this.showIcon,\n        iconType = this.iconType;\n\n    var closeText = getComponentFromProp(this, 'closeText');\n    var description = getComponentFromProp(this, 'description');\n    var message = getComponentFromProp(this, 'message');\n    var icon = getComponentFromProp(this, 'icon');\n    // banner模式默认有 Icon\n    showIcon = banner && showIcon === undefined ? true : showIcon;\n    // banner模式默认为警告\n    type = banner && type === undefined ? 'warning' : type || 'info';\n    var iconTheme = 'filled';\n    // should we give a warning?\n    // warning(!iconType, `The property 'iconType' is deprecated. Use the property 'icon' instead.`);\n    if (!iconType) {\n      switch (type) {\n        case 'success':\n          iconType = 'check-circle';\n          break;\n        case 'info':\n          iconType = 'info-circle';\n          break;\n        case 'error':\n          iconType = 'close-circle';\n          break;\n        case 'warning':\n          iconType = 'exclamation-circle';\n          break;\n        default:\n          iconType = 'default';\n      }\n\n      // use outline icon in alert with description\n      if (description) {\n        iconTheme = 'outlined';\n      }\n    }\n\n    // closeable when closeText is assigned\n    if (closeText) {\n      closable = true;\n    }\n\n    var alertCls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-' + type, true), _defineProperty(_classNames, prefixCls + '-close', !closing), _defineProperty(_classNames, prefixCls + '-with-description', !!description), _defineProperty(_classNames, prefixCls + '-no-icon', !showIcon), _defineProperty(_classNames, prefixCls + '-banner', !!banner), _defineProperty(_classNames, prefixCls + '-closable', closable), _classNames));\n\n    var closeIcon = closable ? h(\n      'a',\n      {\n        on: {\n          'click': this.handleClose\n        },\n        'class': prefixCls + '-close-icon' },\n      [closeText || h(Icon, {\n        attrs: { type: 'close' }\n      })]\n    ) : null;\n\n    var iconNode = icon && (isValidElement(icon) ? cloneElement(icon, {\n      'class': prefixCls + '-icon'\n    }) : h(\n      'span',\n      { 'class': prefixCls + '-icon' },\n      [icon]\n    )) || h(Icon, { 'class': prefixCls + '-icon', attrs: { type: iconType, theme: iconTheme }\n    });\n\n    var transitionProps = getTransitionProps(prefixCls + '-slide-up', {\n      appear: false,\n      afterLeave: this.animationEnd\n    });\n    return closed ? null : h(\n      'transition',\n      transitionProps,\n      [h(\n        'div',\n        {\n          directives: [{\n            name: 'show',\n            value: closing\n          }],\n          'class': alertCls, attrs: { 'data-show': closing }\n        },\n        [showIcon ? iconNode : null, h(\n          'span',\n          { 'class': prefixCls + '-message' },\n          [message]\n        ), h(\n          'span',\n          { 'class': prefixCls + '-description' },\n          [description]\n        ), closeIcon]\n      )]\n    );\n  }\n};\n\n/* istanbul ignore next */\nAlert.install = function (Vue) {\n  Vue.component(Alert.name, Alert);\n};\n\nexport default Alert;"],"sourceRoot":""}