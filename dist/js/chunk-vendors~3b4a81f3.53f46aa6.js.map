{"version":3,"sources":["webpack:///./node_modules/lodash/set.js"],"names":["baseSet","__webpack_require__","set","object","path","value","module","exports"],"mappings":"6GAAA,IAAAA,EAAcC,EAAQ,QA8BtB,SAAAC,EAAAC,EAAAC,EAAAC,GACA,aAAAF,IAAAH,EAAAG,EAAAC,EAAAC,GAGAC,EAAAC,QAAAL","file":"js/chunk-vendors~3b4a81f3.53f46aa6.js","sourcesContent":["var baseSet = require('./_baseSet');\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n"],"sourceRoot":""}