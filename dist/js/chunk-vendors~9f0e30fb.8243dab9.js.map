{"version":3,"sources":["webpack:///./node_modules/ant-design-vue/es/vc-form/src/createFieldsStore.js"],"names":["__webpack_require__","d","__webpack_exports__","createFieldsStore","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","n","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default","babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__","babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default","lodash_set__WEBPACK_IMPORTED_MODULE_4__","lodash_set__WEBPACK_IMPORTED_MODULE_4___default","_createFormField__WEBPACK_IMPORTED_MODULE_5__","_utils__WEBPACK_IMPORTED_MODULE_6__","partOf","a","b","indexOf","length","internalFlattenFields","fields","Object","_","node","FieldsStore","this","_initialiseProps","call","fieldsMeta","key","value","validFieldsName","getAllFieldsName","path","_this","nowFields","nowValues","keys","forEach","f","getValueFromFields","fieldMeta","getFieldMeta","normalize","nowValue","ns","names","getValidFieldsFullName","reduce","acc","name","field","meta","initialValue","_this2","filter","hidden","maybePartialName","maybePartialNames","Array","isArray","getValidFieldsName","fullName","some","partialName","getValueProps","valuePropName","getField","fieldValue","_this3","fieldsName","map","dirty","_this4","getNotCollectedFields","member","getter","fullNames","isArrayValue","suffixNameStartIndex","slice","every","_this5","setFieldsInitialValue","initialValues","flattenedInitialValues","flattenRegisteredFields","setFieldMeta","getAllValues","getFieldsValue","getNestedFields","getFieldValue","getNestedField","getFieldsError","getFieldError","getFieldMember","isFieldValidating","isFieldsValidating","isFieldTouched","isFieldsTouched"],"mappings":"0HAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,QAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,QAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,QAAAU,EAAAV,EAAAM,EAAAG,GAAAE,EAAAX,EAAA,QAAAY,EAAAZ,EAAAM,EAAAK,GAAAE,EAAAb,EAAA,QAAAc,EAAAd,EAAAM,EAAAO,GAAAE,EAAAf,EAAA,QAAAgB,EAAAhB,EAAA,QAQA,SAAAiB,EAAAC,EAAAC,GACA,WAAAA,EAAAC,QAAAF,KAAA,cAAAE,QAAAD,EAAAD,EAAAG,SAGA,SAAAC,EAAAC,GACA,OAASC,OAAAR,EAAA,KAAAQ,CAAaD,EAAA,SAAAE,EAAAC,GACtB,OAAWF,OAAAT,EAAA,KAAAS,CAAWE,IACnB,oDAGH,IAAAC,EAAA,WACA,SAAAA,EAAAJ,GACIb,IAAekB,KAAAD,GAEnBE,EAAAC,KAAAF,MAEAA,KAAAL,OAAAD,EAAAC,GACAK,KAAAG,WAAA,GAwMA,OArMEnB,IAAYe,EAAA,EACdK,IAAA,eACAC,MAAA,SAAAV,GACAK,KAAAL,OAAAD,EAAAC,KAEG,CACHS,IAAA,0BACAC,MAAA,SAAAV,GACA,IAAAW,EAAAN,KAAAO,mBACA,OAAaX,OAAAR,EAAA,KAAAQ,CAAaD,EAAA,SAAAa,GAC1B,OAAAF,EAAAd,QAAAgB,IAAA,GACO,qFAEJ,CACHJ,IAAA,YACAC,MAAA,SAAAV,GACA,IAAAc,EAAAT,KAEAG,EAAAH,KAAAG,WACAO,EAAsB9B,IAAQ,GAAGoB,KAAAL,UACjCgB,EAAA,GACAf,OAAAgB,KAAAT,GAAAU,QAAA,SAAAC,GACAH,EAAAG,GAAAL,EAAAM,mBAAAD,EAAAJ,KAEAd,OAAAgB,KAAAD,GAAAE,QAAA,SAAAC,GACA,IAAAT,EAAAM,EAAAG,GACAE,EAAAP,EAAAQ,aAAAH,GACA,GAAAE,KAAAE,UAAA,CACA,IAAAC,EAAAH,EAAAE,UAAAb,EAAAI,EAAAM,mBAAAD,EAAAL,EAAAd,QAAAgB,GACAQ,IAAAd,IACAK,EAAAI,GAA2BlC,IAAQ,GAAG8B,EAAAI,GAAA,CACtCT,MAAAc,QAKAnB,KAAAL,OAAAe,IAEG,CACHN,IAAA,cACAC,MAAA,SAAAe,GACA,IAAAzB,EAAAK,KAAAL,OAEA0B,EAAAD,EAAApB,KAAAsB,uBAAAF,GAAApB,KAAAO,mBACA,OAAAc,EAAAE,OAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA/B,EAAA8B,GAIA,OAHAC,GAAA,UAAAA,IACAF,EAAAC,GAAA,IAEAD,GACO,MAEJ,CACHpB,IAAA,eACAC,MAAA,SAAAoB,EAAAE,GACA3B,KAAAG,WAAAsB,GAAAE,IAEG,CACHvB,IAAA,eACAC,MAAA,SAAAoB,GAEA,OADAzB,KAAAG,WAAAsB,GAAAzB,KAAAG,WAAAsB,IAAA,GACAzB,KAAAG,WAAAsB,KAEG,CACHrB,IAAA,qBACAC,MAAA,SAAAoB,EAAA9B,GACA,IAAA+B,EAAA/B,EAAA8B,GACA,GAAAC,GAAA,UAAAA,EACA,OAAAA,EAAArB,MAEA,IAAAW,EAAAhB,KAAAiB,aAAAQ,GACA,OAAAT,KAAAY,eAEG,CACHxB,IAAA,qBACAC,MAAA,WACA,IAAAwB,EAAA7B,KAEAG,EAAAH,KAAAG,WAEA,OAAAA,EAAAP,OAAAgB,KAAAT,GAAA2B,OAAA,SAAAL,GACA,OAAAI,EAAAZ,aAAAQ,GAAAM,SACO,KAEJ,CACH3B,IAAA,mBACAC,MAAA,WACA,IAAAF,EAAAH,KAAAG,WAEA,OAAAA,EAAAP,OAAAgB,KAAAT,GAAA,KAEG,CACHC,IAAA,yBACAC,MAAA,SAAA2B,GACA,IAAAC,EAAAC,MAAAC,QAAAH,KAAA,CAAAA,GACA,OAAAhC,KAAAoC,qBAAAN,OAAA,SAAAO,GACA,OAAAJ,EAAAK,KAAA,SAAAC,GACA,OAAAF,IAAAE,GAA6C3C,OAAAR,EAAA,KAAAQ,CAAUyC,EAAAE,IAAA,UAAA/C,QAAA6C,EAAAE,EAAA9C,UAAA,QAIpD,CACHW,IAAA,yBACAC,MAAA,SAAAW,GACA,IAAAS,EAAAT,EAAAS,KACAe,EAAAxB,EAAAwB,cACAC,EAAAzB,EAAAyB,cAEAf,EAAA1B,KAAA0C,SAAAjB,GACAkB,EAAA,UAAAjB,IAAArB,MAAAW,EAAAY,aACA,OAAAY,EACAA,EAAAG,GAEalE,IAAe,GAAGgE,EAAAE,KAE5B,CACHvC,IAAA,WACAC,MAAA,SAAAoB,GACA,OAAa7C,IAAQ,GAAGoB,KAAAL,OAAA8B,GAAA,CACxBA,WAGG,CACHrB,IAAA,wBACAC,MAAA,WACA,IAAAuC,EAAA5C,KAEA6C,EAAA7C,KAAAoC,qBACA,OAAAS,EAAAf,OAAA,SAAAL,GACA,OAAAmB,EAAAjD,OAAA8B,KACOqB,IAAA,SAAArB,GACP,OACAA,OACAsB,OAAA,EACA1C,MAAAuC,EAAA3B,aAAAQ,GAAAG,gBAEOL,OAAA,SAAAC,EAAAE,GACP,OAAexC,IAAGsC,EAAAE,EAAAD,KAAkB7B,OAAAT,EAAA,KAAAS,CAAe8B,KAC5C,MAEJ,CACHtB,IAAA,qBACAC,MAAA,WACA,IAAA2C,EAAAhD,KAEA,OAAAJ,OAAAgB,KAAAZ,KAAAL,QAAA4B,OAAA,SAAAC,EAAAC,GACA,OAAevC,IAAGsC,EAAAC,EAAY7B,OAAAT,EAAA,KAAAS,CAAeoD,EAAArD,OAAA8B,MACtCzB,KAAAiD,2BAEJ,CACH7C,IAAA,iBACAC,MAAA,SAAAoB,EAAAyB,GACA,OAAAlD,KAAA0C,SAAAjB,GAAAyB,KAEG,CACH9C,IAAA,kBACAC,MAAA,SAAAgB,EAAA8B,GACA,IAAAxD,EAAA0B,GAAArB,KAAAoC,qBACA,OAAAzC,EAAA4B,OAAA,SAAAC,EAAAV,GACA,OAAe5B,IAAGsC,EAAAV,EAAAqC,EAAArC,KACX,MAEJ,CACHV,IAAA,iBACAC,MAAA,SAAAoB,EAAA0B,GACA,IAAAC,EAAApD,KAAAsB,uBAAAG,GACA,OAAA2B,EAAA3D,QACA,IAAA2D,EAAA3D,QAAA2D,EAAA,KAAA3B,EAEA,OAAA0B,EAAA1B,GAEA,IAAA4B,EAAA,MAAAD,EAAA,GAAA3B,EAAAhC,QACA6D,EAAAD,EAAA5B,EAAAhC,OAAAgC,EAAAhC,OAAA,EACA,OAAA2D,EAAA7B,OAAA,SAAAC,EAAAa,GACA,OAAenD,IAAGsC,EAAAa,EAAAkB,MAAAD,GAAAH,EAAAd,KACXgB,EAAA,SAEJ,CACHjD,IAAA,yBAKAC,MAAA,SAAAoB,GACA,IAAAJ,EAAArB,KAAAO,mBACA,OAAAc,EAAAmC,MAAA,SAAA9E,GACA,OAAAW,EAAAX,EAAA+C,KAAApC,EAAAoC,EAAA/C,OAGG,CACH0B,IAAA,aACAC,MAAA,SAAAoB,UACAzB,KAAAL,OAAA8B,UACAzB,KAAAG,WAAAsB,OAIA1B,EA/MA,GAkNAE,EAAA,WACA,IAAAwD,EAAAzD,KAEAA,KAAA0D,sBAAA,SAAAC,GACA,IAAAC,EAAAH,EAAAI,wBAAAF,GACAxD,EAAAsD,EAAAtD,WACAP,OAAAgB,KAAAgD,GAAA/C,QAAA,SAAAY,GACAtB,EAAAsB,IACAgC,EAAAK,aAAArC,EAAkC7C,IAAQ,GAAG6E,EAAAxC,aAAAQ,GAAA,CAC7CG,aAAAgC,EAAAnC,SAMAzB,KAAA+D,aAAA,WACA,IAAA5D,EAAAsD,EAAAtD,WACAR,EAAA8D,EAAA9D,OAEA,OAAAC,OAAAgB,KAAAT,GAAAoB,OAAA,SAAAC,EAAAC,GACA,OAAavC,IAAGsC,EAAAC,EAAAgC,EAAA1C,mBAAAU,EAAA9B,KACX,KAGLK,KAAAgE,eAAA,SAAA3C,GACA,OAAAoC,EAAAQ,gBAAA5C,EAAAoC,EAAAS,gBAGAlE,KAAAkE,cAAA,SAAAzC,GACA,IAAA9B,EAAA8D,EAAA9D,OAEA,OAAA8D,EAAAU,eAAA1C,EAAA,SAAAY,GACA,OAAAoB,EAAA1C,mBAAAsB,EAAA1C,MAIAK,KAAAoE,eAAA,SAAA/C,GACA,OAAAoC,EAAAQ,gBAAA5C,EAAAoC,EAAAY,gBAGArE,KAAAqE,cAAA,SAAA5C,GACA,OAAAgC,EAAAU,eAAA1C,EAAA,SAAAY,GACA,OAAazC,OAAAR,EAAA,KAAAQ,CAAY6D,EAAAa,eAAAjC,EAAA,cAIzBrC,KAAAuE,kBAAA,SAAA9C,GACA,OAAAgC,EAAAa,eAAA7C,EAAA,eAGAzB,KAAAwE,mBAAA,SAAApD,GACA,IAAAC,EAAAD,GAAAqC,EAAArB,qBACA,OAAAf,EAAAiB,KAAA,SAAA5D,GACA,OAAA+E,EAAAc,kBAAA7F,MAIAsB,KAAAyE,eAAA,SAAAhD,GACA,OAAAgC,EAAAa,eAAA7C,EAAA,YAGAzB,KAAA0E,gBAAA,SAAAtD,GACA,IAAAC,EAAAD,GAAAqC,EAAArB,qBACA,OAAAf,EAAAiB,KAAA,SAAA5D,GACA,OAAA+E,EAAAgB,eAAA/F,OAKe,SAAAH,EAAAoB,GACf,WAAAI,EAAAJ","file":"js/chunk-vendors~9f0e30fb.8243dab9.js","sourcesContent":["import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport set from 'lodash/set';\nimport createFormField, { isFormField } from './createFormField';\nimport { flattenFields, getErrorStrs, startsWith } from './utils';\n\nfunction partOf(a, b) {\n  return b.indexOf(a) === 0 && ['.', '['].indexOf(b[a.length]) !== -1;\n}\n\nfunction internalFlattenFields(fields) {\n  return flattenFields(fields, function (_, node) {\n    return isFormField(node);\n  }, 'You must wrap field data with `createFormField`.');\n}\n\nvar FieldsStore = function () {\n  function FieldsStore(fields) {\n    _classCallCheck(this, FieldsStore);\n\n    _initialiseProps.call(this);\n\n    this.fields = internalFlattenFields(fields);\n    this.fieldsMeta = {};\n  }\n\n  _createClass(FieldsStore, [{\n    key: 'updateFields',\n    value: function updateFields(fields) {\n      this.fields = internalFlattenFields(fields);\n    }\n  }, {\n    key: 'flattenRegisteredFields',\n    value: function flattenRegisteredFields(fields) {\n      var validFieldsName = this.getAllFieldsName();\n      return flattenFields(fields, function (path) {\n        return validFieldsName.indexOf(path) >= 0;\n      }, 'You cannot set a form field before rendering a field associated with the value.');\n    }\n  }, {\n    key: 'setFields',\n    value: function setFields(fields) {\n      var _this = this;\n\n      var fieldsMeta = this.fieldsMeta;\n      var nowFields = _extends({}, this.fields, fields);\n      var nowValues = {};\n      Object.keys(fieldsMeta).forEach(function (f) {\n        nowValues[f] = _this.getValueFromFields(f, nowFields);\n      });\n      Object.keys(nowValues).forEach(function (f) {\n        var value = nowValues[f];\n        var fieldMeta = _this.getFieldMeta(f);\n        if (fieldMeta && fieldMeta.normalize) {\n          var nowValue = fieldMeta.normalize(value, _this.getValueFromFields(f, _this.fields), nowValues);\n          if (nowValue !== value) {\n            nowFields[f] = _extends({}, nowFields[f], {\n              value: nowValue\n            });\n          }\n        }\n      });\n      this.fields = nowFields;\n    }\n  }, {\n    key: 'resetFields',\n    value: function resetFields(ns) {\n      var fields = this.fields;\n\n      var names = ns ? this.getValidFieldsFullName(ns) : this.getAllFieldsName();\n      return names.reduce(function (acc, name) {\n        var field = fields[name];\n        if (field && 'value' in field) {\n          acc[name] = {};\n        }\n        return acc;\n      }, {});\n    }\n  }, {\n    key: 'setFieldMeta',\n    value: function setFieldMeta(name, meta) {\n      this.fieldsMeta[name] = meta;\n    }\n  }, {\n    key: 'getFieldMeta',\n    value: function getFieldMeta(name) {\n      this.fieldsMeta[name] = this.fieldsMeta[name] || {};\n      return this.fieldsMeta[name];\n    }\n  }, {\n    key: 'getValueFromFields',\n    value: function getValueFromFields(name, fields) {\n      var field = fields[name];\n      if (field && 'value' in field) {\n        return field.value;\n      }\n      var fieldMeta = this.getFieldMeta(name);\n      return fieldMeta && fieldMeta.initialValue;\n    }\n  }, {\n    key: 'getValidFieldsName',\n    value: function getValidFieldsName() {\n      var _this2 = this;\n\n      var fieldsMeta = this.fieldsMeta;\n\n      return fieldsMeta ? Object.keys(fieldsMeta).filter(function (name) {\n        return !_this2.getFieldMeta(name).hidden;\n      }) : [];\n    }\n  }, {\n    key: 'getAllFieldsName',\n    value: function getAllFieldsName() {\n      var fieldsMeta = this.fieldsMeta;\n\n      return fieldsMeta ? Object.keys(fieldsMeta) : [];\n    }\n  }, {\n    key: 'getValidFieldsFullName',\n    value: function getValidFieldsFullName(maybePartialName) {\n      var maybePartialNames = Array.isArray(maybePartialName) ? maybePartialName : [maybePartialName];\n      return this.getValidFieldsName().filter(function (fullName) {\n        return maybePartialNames.some(function (partialName) {\n          return fullName === partialName || startsWith(fullName, partialName) && ['.', '['].indexOf(fullName[partialName.length]) >= 0;\n        });\n      });\n    }\n  }, {\n    key: 'getFieldValuePropValue',\n    value: function getFieldValuePropValue(fieldMeta) {\n      var name = fieldMeta.name,\n          getValueProps = fieldMeta.getValueProps,\n          valuePropName = fieldMeta.valuePropName;\n\n      var field = this.getField(name);\n      var fieldValue = 'value' in field ? field.value : fieldMeta.initialValue;\n      if (getValueProps) {\n        return getValueProps(fieldValue);\n      }\n      return _defineProperty({}, valuePropName, fieldValue);\n    }\n  }, {\n    key: 'getField',\n    value: function getField(name) {\n      return _extends({}, this.fields[name], {\n        name: name\n      });\n    }\n  }, {\n    key: 'getNotCollectedFields',\n    value: function getNotCollectedFields() {\n      var _this3 = this;\n\n      var fieldsName = this.getValidFieldsName();\n      return fieldsName.filter(function (name) {\n        return !_this3.fields[name];\n      }).map(function (name) {\n        return {\n          name: name,\n          dirty: false,\n          value: _this3.getFieldMeta(name).initialValue\n        };\n      }).reduce(function (acc, field) {\n        return set(acc, field.name, createFormField(field));\n      }, {});\n    }\n  }, {\n    key: 'getNestedAllFields',\n    value: function getNestedAllFields() {\n      var _this4 = this;\n\n      return Object.keys(this.fields).reduce(function (acc, name) {\n        return set(acc, name, createFormField(_this4.fields[name]));\n      }, this.getNotCollectedFields());\n    }\n  }, {\n    key: 'getFieldMember',\n    value: function getFieldMember(name, member) {\n      return this.getField(name)[member];\n    }\n  }, {\n    key: 'getNestedFields',\n    value: function getNestedFields(names, getter) {\n      var fields = names || this.getValidFieldsName();\n      return fields.reduce(function (acc, f) {\n        return set(acc, f, getter(f));\n      }, {});\n    }\n  }, {\n    key: 'getNestedField',\n    value: function getNestedField(name, getter) {\n      var fullNames = this.getValidFieldsFullName(name);\n      if (fullNames.length === 0 || // Not registered\n      fullNames.length === 1 && fullNames[0] === name // Name already is full name.\n      ) {\n          return getter(name);\n        }\n      var isArrayValue = fullNames[0][name.length] === '[';\n      var suffixNameStartIndex = isArrayValue ? name.length : name.length + 1;\n      return fullNames.reduce(function (acc, fullName) {\n        return set(acc, fullName.slice(suffixNameStartIndex), getter(fullName));\n      }, isArrayValue ? [] : {});\n    }\n  }, {\n    key: 'isValidNestedFieldName',\n\n\n    // @private\n    // BG: `a` and `a.b` cannot be use in the same form\n    value: function isValidNestedFieldName(name) {\n      var names = this.getAllFieldsName();\n      return names.every(function (n) {\n        return !partOf(n, name) && !partOf(name, n);\n      });\n    }\n  }, {\n    key: 'clearField',\n    value: function clearField(name) {\n      delete this.fields[name];\n      delete this.fieldsMeta[name];\n    }\n  }]);\n\n  return FieldsStore;\n}();\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this5 = this;\n\n  this.setFieldsInitialValue = function (initialValues) {\n    var flattenedInitialValues = _this5.flattenRegisteredFields(initialValues);\n    var fieldsMeta = _this5.fieldsMeta;\n    Object.keys(flattenedInitialValues).forEach(function (name) {\n      if (fieldsMeta[name]) {\n        _this5.setFieldMeta(name, _extends({}, _this5.getFieldMeta(name), {\n          initialValue: flattenedInitialValues[name]\n        }));\n      }\n    });\n  };\n\n  this.getAllValues = function () {\n    var fieldsMeta = _this5.fieldsMeta,\n        fields = _this5.fields;\n\n    return Object.keys(fieldsMeta).reduce(function (acc, name) {\n      return set(acc, name, _this5.getValueFromFields(name, fields));\n    }, {});\n  };\n\n  this.getFieldsValue = function (names) {\n    return _this5.getNestedFields(names, _this5.getFieldValue);\n  };\n\n  this.getFieldValue = function (name) {\n    var fields = _this5.fields;\n\n    return _this5.getNestedField(name, function (fullName) {\n      return _this5.getValueFromFields(fullName, fields);\n    });\n  };\n\n  this.getFieldsError = function (names) {\n    return _this5.getNestedFields(names, _this5.getFieldError);\n  };\n\n  this.getFieldError = function (name) {\n    return _this5.getNestedField(name, function (fullName) {\n      return getErrorStrs(_this5.getFieldMember(fullName, 'errors'));\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    return _this5.getFieldMember(name, 'validating');\n  };\n\n  this.isFieldsValidating = function (ns) {\n    var names = ns || _this5.getValidFieldsName();\n    return names.some(function (n) {\n      return _this5.isFieldValidating(n);\n    });\n  };\n\n  this.isFieldTouched = function (name) {\n    return _this5.getFieldMember(name, 'touched');\n  };\n\n  this.isFieldsTouched = function (ns) {\n    var names = ns || _this5.getValidFieldsName();\n    return names.some(function (n) {\n      return _this5.isFieldTouched(n);\n    });\n  };\n};\n\nexport default function createFieldsStore(fields) {\n  return new FieldsStore(fields);\n}"],"sourceRoot":""}