{"version":3,"sources":["webpack:///./node_modules/async-validator/es/rule/type.js"],"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","_util","__webpack_require__","util","_interopRequireWildcard","_required","_required2","_interopRequireDefault","__esModule","default","newObj","key","hasOwnProperty","call","pattern","email","url","RegExp","hex","types","integer","number","parseInt","float","array","Array","isArray","regexp","e","date","getTime","getMonth","getYear","isNaN","object","method","match","length","type","rule","source","errors","options","required","undefined","custom","ruleType","indexOf","push","format","messages","fullField"],"mappings":"wHAEAA,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAGA,IAAAC,EAAA,oBAAAC,QAAA,kBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,oBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,gBAAAF,GAE5IG,EAAYC,EAAQ,QAEpBC,EAAAC,EAAAH,GAEAI,EAAgBH,EAAQ,QAExBI,EAAAC,EAAAF,GAEA,SAAAE,EAAAT,GAAsC,OAAAA,KAAAU,WAAAV,EAAA,CAAuCW,QAAAX,GAE7E,SAAAM,EAAAN,GAAuC,GAAAA,KAAAU,WAA6B,OAAAV,EAAqB,IAAAY,EAAA,GAAiB,SAAAZ,EAAmB,QAAAa,KAAAb,EAAuBP,OAAAS,UAAAY,eAAAC,KAAAf,EAAAa,KAAAD,EAAAC,GAAAb,EAAAa,IAAyG,OAAzBD,EAAA,WAAAZ,EAAyBY,EAI7P,IAAAI,EAAA,CAEAC,MAAA,yJACAC,IAAA,IAAAC,OAAA,iZAAyY,KACzYC,IAAA,kCAGAC,EAAA,CACAC,QAAA,SAAA1B,GACA,OAAAyB,EAAAE,OAAA3B,IAAA4B,SAAA5B,EAAA,MAAAA,GAEA6B,MAAA,SAAA7B,GACA,OAAAyB,EAAAE,OAAA3B,KAAAyB,EAAAC,QAAA1B,IAEA8B,MAAA,SAAA9B,GACA,OAAA+B,MAAAC,QAAAhC,IAEAiC,OAAA,SAAAjC,GACA,GAAAA,aAAAuB,OACA,SAEA,IACA,YAAAA,OAAAvB,GACK,MAAAkC,GACL,WAGAC,KAAA,SAAAnC,GACA,0BAAAA,EAAAoC,SAAA,oBAAApC,EAAAqC,UAAA,oBAAArC,EAAAsC,SAEAX,OAAA,SAAA3B,GACA,OAAAuC,MAAAvC,IAGA,kBAAAA,GAEAwC,OAAA,SAAAxC,GACA,uCAAAA,EAAA,YAAAC,EAAAD,MAAAyB,EAAAK,MAAA9B,IAEAyC,OAAA,SAAAzC,GACA,0BAAAA,GAEAqB,MAAA,SAAArB,GACA,wBAAAA,OAAA0C,MAAAtB,EAAAC,QAAArB,EAAA2C,OAAA,KAEArB,IAAA,SAAAtB,GACA,wBAAAA,OAAA0C,MAAAtB,EAAAE,MAEAE,IAAA,SAAAxB,GACA,wBAAAA,OAAA0C,MAAAtB,EAAAI,OAeA,SAAAoB,EAAAC,EAAA7C,EAAA8C,EAAAC,EAAAC,GACA,GAAAH,EAAAI,eAAAC,IAAAlD,GACA,EAAAY,EAAA,YAAAiC,EAAA7C,EAAA8C,EAAAC,EAAAC,OADA,CAIA,IAAAG,EAAA,2FACAC,EAAAP,EAAAD,KACAO,EAAAE,QAAAD,IAAA,EACA3B,EAAA2B,GAAApD,IACA+C,EAAAO,KAAA7C,EAAA8C,OAAAP,EAAAQ,SAAA/B,MAAA2B,GAAAP,EAAAY,UAAAZ,EAAAD,OAGGQ,IAAA,qBAAApD,EAAA,YAAAC,EAAAD,MAAA6C,EAAAD,MACHG,EAAAO,KAAA7C,EAAA8C,OAAAP,EAAAQ,SAAA/B,MAAA2B,GAAAP,EAAAY,UAAAZ,EAAAD,QAIA7C,EAAA,WAAA6C","file":"js/chunk-vendors~4072ca2f.ed6733db.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('../util');\n\nvar util = _interopRequireWildcard(_util);\n\nvar _required = require('./required');\n\nvar _required2 = _interopRequireDefault(_required);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n/* eslint max-len:0 */\n\nvar pattern = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  url: new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$', 'i'),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i\n};\n\nvar types = {\n  integer: function integer(value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  float: function float(value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array: function array(value) {\n    return Array.isArray(value);\n  },\n  regexp: function regexp(value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date: function date(value) {\n    return typeof value.getTime === 'function' && typeof value.getMonth === 'function' && typeof value.getYear === 'function';\n  },\n  number: function number(value) {\n    if (isNaN(value)) {\n      return false;\n    }\n    return typeof value === 'number';\n  },\n  object: function object(value) {\n    return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && !types.array(value);\n  },\n  method: function method(value) {\n    return typeof value === 'function';\n  },\n  email: function email(value) {\n    return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;\n  },\n  url: function url(value) {\n    return typeof value === 'string' && !!value.match(pattern.url);\n  },\n  hex: function hex(value) {\n    return typeof value === 'string' && !!value.match(pattern.hex);\n  }\n};\n\n/**\n *  Rule for validating the type of a value.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction type(rule, value, source, errors, options) {\n  if (rule.required && value === undefined) {\n    (0, _required2['default'])(rule, value, source, errors, options);\n    return;\n  }\n  var custom = ['integer', 'float', 'array', 'regexp', 'object', 'method', 'email', 'number', 'date', 'url', 'hex'];\n  var ruleType = rule.type;\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));\n    }\n    // straight typeof check\n  } else if (ruleType && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== rule.type) {\n    errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));\n  }\n}\n\nexports['default'] = type;"],"sourceRoot":""}