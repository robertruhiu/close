{"version":3,"sources":["webpack:///./node_modules/lodash/_stringToPath.js"],"names":["memoizeCapped","__webpack_require__","rePropName","reEscapeChar","stringToPath","string","result","charCodeAt","push","replace","match","number","quote","subString","module","exports"],"mappings":"6GAAA,IAAAA,EAAoBC,EAAQ,QAG5BC,EAAA,mGAGAC,EAAA,WASAC,EAAAJ,EAAA,SAAAK,GACA,IAAAC,EAAA,GAOA,OANA,KAAAD,EAAAE,WAAA,IACAD,EAAAE,KAAA,IAEAH,EAAAI,QAAAP,EAAA,SAAAQ,EAAAC,EAAAC,EAAAC,GACAP,EAAAE,KAAAI,EAAAC,EAAAJ,QAAAN,EAAA,MAAAQ,GAAAD,KAEAJ,IAGAQ,EAAAC,QAAAX","file":"js/chunk-vendors~716b3083.57367f90.js","sourcesContent":["var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n"],"sourceRoot":""}